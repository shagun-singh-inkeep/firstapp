/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { topSearchQueries } from "../funcs/topSearchQueries.js";
import { weeklySearchUsers } from "../funcs/weeklySearchUsers.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
import { Conversation } from "./conversation.js";
import { Conversations } from "./conversations.js";
import { Events } from "./events.js";
import { Feedback } from "./feedback.js";
import { Query } from "./query.js";
export class InkeepAnalytics extends ClientSDK {
    get conversations() {
        return (this._conversations ?? (this._conversations = new Conversations(this._options)));
    }
    get conversation() {
        return (this._conversation ?? (this._conversation = new Conversation(this._options)));
    }
    get feedback() {
        return (this._feedback ?? (this._feedback = new Feedback(this._options)));
    }
    get events() {
        return (this._events ?? (this._events = new Events(this._options)));
    }
    get query() {
        return (this._query ?? (this._query = new Query(this._options)));
    }
    /**
     * Top Search Queries
     */
    async topSearchQueries(request, options) {
        return unwrapAsync(topSearchQueries(this, request, options));
    }
    /**
     * Weekly Search Users
     */
    async weeklySearchUsers(request, options) {
        return unwrapAsync(weeklySearchUsers(this, request, options));
    }
}
//# sourceMappingURL=sdk.js.map