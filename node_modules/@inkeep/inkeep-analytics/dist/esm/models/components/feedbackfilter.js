/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { FeedbackFilterAND$inboundSchema, FeedbackFilterAND$outboundSchema, } from "./feedbackfilterand.js";
import { FeedbackFilterCondition$inboundSchema, FeedbackFilterCondition$outboundSchema, } from "./feedbackfiltercondition.js";
import { FeedbackFilterOR$inboundSchema, FeedbackFilterOR$outboundSchema, } from "./feedbackfilteror.js";
/** @internal */
export const FeedbackFilter$inboundSchema = z.union([
    FeedbackFilterCondition$inboundSchema,
    z.lazy(() => FeedbackFilterAND$inboundSchema),
    z.lazy(() => FeedbackFilterOR$inboundSchema),
]);
/** @internal */
export const FeedbackFilter$outboundSchema = z.union([
    FeedbackFilterCondition$outboundSchema,
    z.lazy(() => FeedbackFilterAND$outboundSchema),
    z.lazy(() => FeedbackFilterOR$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FeedbackFilter$;
(function (FeedbackFilter$) {
    /** @deprecated use `FeedbackFilter$inboundSchema` instead. */
    FeedbackFilter$.inboundSchema = FeedbackFilter$inboundSchema;
    /** @deprecated use `FeedbackFilter$outboundSchema` instead. */
    FeedbackFilter$.outboundSchema = FeedbackFilter$outboundSchema;
})(FeedbackFilter$ || (FeedbackFilter$ = {}));
export function feedbackFilterToJSON(feedbackFilter) {
    return JSON.stringify(FeedbackFilter$outboundSchema.parse(feedbackFilter));
}
export function feedbackFilterFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FeedbackFilter$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeedbackFilter' from JSON`);
}
//# sourceMappingURL=feedbackfilter.js.map