/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ConversationsField$inboundSchema, ConversationsField$outboundSchema, } from "./conversationsfield.js";
/** @internal */
export const ConversationsGroupBy$inboundSchema = z.object({
    field: ConversationsField$inboundSchema,
    path: z.array(z.string()).optional(),
    includeInSelect: z.boolean().default(true),
});
/** @internal */
export const ConversationsGroupBy$outboundSchema = z.object({
    field: ConversationsField$outboundSchema,
    path: z.array(z.string()).optional(),
    includeInSelect: z.boolean().default(true),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConversationsGroupBy$;
(function (ConversationsGroupBy$) {
    /** @deprecated use `ConversationsGroupBy$inboundSchema` instead. */
    ConversationsGroupBy$.inboundSchema = ConversationsGroupBy$inboundSchema;
    /** @deprecated use `ConversationsGroupBy$outboundSchema` instead. */
    ConversationsGroupBy$.outboundSchema = ConversationsGroupBy$outboundSchema;
})(ConversationsGroupBy$ || (ConversationsGroupBy$ = {}));
export function conversationsGroupByToJSON(conversationsGroupBy) {
    return JSON.stringify(ConversationsGroupBy$outboundSchema.parse(conversationsGroupBy));
}
export function conversationsGroupByFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ConversationsGroupBy$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConversationsGroupBy' from JSON`);
}
//# sourceMappingURL=conversationsgroupby.js.map