/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
export const EventsSimpleFieldSelectionType = {
    Field: "field",
};
export const EventsSimpleFieldSelectionField = {
    Id: "id",
    OrganizationId: "organizationId",
    MessageId: "messageId",
    ConversationId: "conversationId",
    CreatedAt: "createdAt",
    ProjectId: "projectId",
    IntegrationId: "integrationId",
    EventType: "eventType",
    Type: "type",
    SearchQuery: "searchQuery",
    Properties: "properties",
    UserProperties: "userProperties",
};
/** @internal */
export const EventsSimpleFieldSelectionType$inboundSchema = z.nativeEnum(EventsSimpleFieldSelectionType);
/** @internal */
export const EventsSimpleFieldSelectionType$outboundSchema = EventsSimpleFieldSelectionType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EventsSimpleFieldSelectionType$;
(function (EventsSimpleFieldSelectionType$) {
    /** @deprecated use `EventsSimpleFieldSelectionType$inboundSchema` instead. */
    EventsSimpleFieldSelectionType$.inboundSchema = EventsSimpleFieldSelectionType$inboundSchema;
    /** @deprecated use `EventsSimpleFieldSelectionType$outboundSchema` instead. */
    EventsSimpleFieldSelectionType$.outboundSchema = EventsSimpleFieldSelectionType$outboundSchema;
})(EventsSimpleFieldSelectionType$ || (EventsSimpleFieldSelectionType$ = {}));
/** @internal */
export const EventsSimpleFieldSelectionField$inboundSchema = z.nativeEnum(EventsSimpleFieldSelectionField);
/** @internal */
export const EventsSimpleFieldSelectionField$outboundSchema = EventsSimpleFieldSelectionField$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EventsSimpleFieldSelectionField$;
(function (EventsSimpleFieldSelectionField$) {
    /** @deprecated use `EventsSimpleFieldSelectionField$inboundSchema` instead. */
    EventsSimpleFieldSelectionField$.inboundSchema = EventsSimpleFieldSelectionField$inboundSchema;
    /** @deprecated use `EventsSimpleFieldSelectionField$outboundSchema` instead. */
    EventsSimpleFieldSelectionField$.outboundSchema = EventsSimpleFieldSelectionField$outboundSchema;
})(EventsSimpleFieldSelectionField$ || (EventsSimpleFieldSelectionField$ = {}));
/** @internal */
export const EventsSimpleFieldSelection$inboundSchema = z.object({
    type: EventsSimpleFieldSelectionType$inboundSchema,
    field: EventsSimpleFieldSelectionField$inboundSchema,
    path: z.array(z.string()).optional(),
});
/** @internal */
export const EventsSimpleFieldSelection$outboundSchema = z.object({
    type: EventsSimpleFieldSelectionType$outboundSchema,
    field: EventsSimpleFieldSelectionField$outboundSchema,
    path: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EventsSimpleFieldSelection$;
(function (EventsSimpleFieldSelection$) {
    /** @deprecated use `EventsSimpleFieldSelection$inboundSchema` instead. */
    EventsSimpleFieldSelection$.inboundSchema = EventsSimpleFieldSelection$inboundSchema;
    /** @deprecated use `EventsSimpleFieldSelection$outboundSchema` instead. */
    EventsSimpleFieldSelection$.outboundSchema = EventsSimpleFieldSelection$outboundSchema;
})(EventsSimpleFieldSelection$ || (EventsSimpleFieldSelection$ = {}));
export function eventsSimpleFieldSelectionToJSON(eventsSimpleFieldSelection) {
    return JSON.stringify(EventsSimpleFieldSelection$outboundSchema.parse(eventsSimpleFieldSelection));
}
export function eventsSimpleFieldSelectionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EventsSimpleFieldSelection$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EventsSimpleFieldSelection' from JSON`);
}
//# sourceMappingURL=eventssimplefieldselection.js.map