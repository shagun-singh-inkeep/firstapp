/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
export const ConversationsSimpleFieldSelectionType = {
    Field: "field",
};
export const ConversationsSimpleFieldSelectionField = {
    Id: "id",
    UserMessageCount: "userMessageCount",
    OrganizationId: "organizationId",
    ProjectId: "projectId",
    IntegrationId: "integrationId",
    FirstMessageTime: "firstMessageTime",
    Type: "type",
    Properties: "properties",
    UserProperties: "userProperties",
};
/** @internal */
export const ConversationsSimpleFieldSelectionType$inboundSchema = z.nativeEnum(ConversationsSimpleFieldSelectionType);
/** @internal */
export const ConversationsSimpleFieldSelectionType$outboundSchema = ConversationsSimpleFieldSelectionType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConversationsSimpleFieldSelectionType$;
(function (ConversationsSimpleFieldSelectionType$) {
    /** @deprecated use `ConversationsSimpleFieldSelectionType$inboundSchema` instead. */
    ConversationsSimpleFieldSelectionType$.inboundSchema = ConversationsSimpleFieldSelectionType$inboundSchema;
    /** @deprecated use `ConversationsSimpleFieldSelectionType$outboundSchema` instead. */
    ConversationsSimpleFieldSelectionType$.outboundSchema = ConversationsSimpleFieldSelectionType$outboundSchema;
})(ConversationsSimpleFieldSelectionType$ || (ConversationsSimpleFieldSelectionType$ = {}));
/** @internal */
export const ConversationsSimpleFieldSelectionField$inboundSchema = z.nativeEnum(ConversationsSimpleFieldSelectionField);
/** @internal */
export const ConversationsSimpleFieldSelectionField$outboundSchema = ConversationsSimpleFieldSelectionField$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConversationsSimpleFieldSelectionField$;
(function (ConversationsSimpleFieldSelectionField$) {
    /** @deprecated use `ConversationsSimpleFieldSelectionField$inboundSchema` instead. */
    ConversationsSimpleFieldSelectionField$.inboundSchema = ConversationsSimpleFieldSelectionField$inboundSchema;
    /** @deprecated use `ConversationsSimpleFieldSelectionField$outboundSchema` instead. */
    ConversationsSimpleFieldSelectionField$.outboundSchema = ConversationsSimpleFieldSelectionField$outboundSchema;
})(ConversationsSimpleFieldSelectionField$ || (ConversationsSimpleFieldSelectionField$ = {}));
/** @internal */
export const ConversationsSimpleFieldSelection$inboundSchema = z.object({
    type: ConversationsSimpleFieldSelectionType$inboundSchema,
    field: ConversationsSimpleFieldSelectionField$inboundSchema,
    path: z.array(z.string()).optional(),
});
/** @internal */
export const ConversationsSimpleFieldSelection$outboundSchema = z.object({
    type: ConversationsSimpleFieldSelectionType$outboundSchema,
    field: ConversationsSimpleFieldSelectionField$outboundSchema,
    path: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConversationsSimpleFieldSelection$;
(function (ConversationsSimpleFieldSelection$) {
    /** @deprecated use `ConversationsSimpleFieldSelection$inboundSchema` instead. */
    ConversationsSimpleFieldSelection$.inboundSchema = ConversationsSimpleFieldSelection$inboundSchema;
    /** @deprecated use `ConversationsSimpleFieldSelection$outboundSchema` instead. */
    ConversationsSimpleFieldSelection$.outboundSchema = ConversationsSimpleFieldSelection$outboundSchema;
})(ConversationsSimpleFieldSelection$ || (ConversationsSimpleFieldSelection$ = {}));
export function conversationsSimpleFieldSelectionToJSON(conversationsSimpleFieldSelection) {
    return JSON.stringify(ConversationsSimpleFieldSelection$outboundSchema.parse(conversationsSimpleFieldSelection));
}
export function conversationsSimpleFieldSelectionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ConversationsSimpleFieldSelection$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConversationsSimpleFieldSelection' from JSON`);
}
//# sourceMappingURL=conversationssimplefieldselection.js.map