import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { TimeUnit } from "./timeunit.js";
export declare const ConversationsTimeBasedGroupBySelectionType: {
    readonly Time: "time";
};
export type ConversationsTimeBasedGroupBySelectionType = ClosedEnum<typeof ConversationsTimeBasedGroupBySelectionType>;
export declare const ConversationsTimeBasedGroupBySelectionField: {
    readonly Id: "id";
    readonly UserMessageCount: "userMessageCount";
    readonly OrganizationId: "organizationId";
    readonly ProjectId: "projectId";
    readonly IntegrationId: "integrationId";
    readonly FirstMessageTime: "firstMessageTime";
    readonly Type: "type";
    readonly Properties: "properties";
    readonly UserProperties: "userProperties";
};
export type ConversationsTimeBasedGroupBySelectionField = ClosedEnum<typeof ConversationsTimeBasedGroupBySelectionField>;
export type ConversationsTimeBasedGroupBySelection = {
    type: ConversationsTimeBasedGroupBySelectionType;
    /**
     * Valid time units for time-based operations
     */
    timeUnit: TimeUnit;
    field?: ConversationsTimeBasedGroupBySelectionField | undefined;
};
/** @internal */
export declare const ConversationsTimeBasedGroupBySelectionType$inboundSchema: z.ZodNativeEnum<typeof ConversationsTimeBasedGroupBySelectionType>;
/** @internal */
export declare const ConversationsTimeBasedGroupBySelectionType$outboundSchema: z.ZodNativeEnum<typeof ConversationsTimeBasedGroupBySelectionType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ConversationsTimeBasedGroupBySelectionType$ {
    /** @deprecated use `ConversationsTimeBasedGroupBySelectionType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Time: "time";
    }>;
    /** @deprecated use `ConversationsTimeBasedGroupBySelectionType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Time: "time";
    }>;
}
/** @internal */
export declare const ConversationsTimeBasedGroupBySelectionField$inboundSchema: z.ZodNativeEnum<typeof ConversationsTimeBasedGroupBySelectionField>;
/** @internal */
export declare const ConversationsTimeBasedGroupBySelectionField$outboundSchema: z.ZodNativeEnum<typeof ConversationsTimeBasedGroupBySelectionField>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ConversationsTimeBasedGroupBySelectionField$ {
    /** @deprecated use `ConversationsTimeBasedGroupBySelectionField$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Id: "id";
        readonly UserMessageCount: "userMessageCount";
        readonly OrganizationId: "organizationId";
        readonly ProjectId: "projectId";
        readonly IntegrationId: "integrationId";
        readonly FirstMessageTime: "firstMessageTime";
        readonly Type: "type";
        readonly Properties: "properties";
        readonly UserProperties: "userProperties";
    }>;
    /** @deprecated use `ConversationsTimeBasedGroupBySelectionField$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Id: "id";
        readonly UserMessageCount: "userMessageCount";
        readonly OrganizationId: "organizationId";
        readonly ProjectId: "projectId";
        readonly IntegrationId: "integrationId";
        readonly FirstMessageTime: "firstMessageTime";
        readonly Type: "type";
        readonly Properties: "properties";
        readonly UserProperties: "userProperties";
    }>;
}
/** @internal */
export declare const ConversationsTimeBasedGroupBySelection$inboundSchema: z.ZodType<ConversationsTimeBasedGroupBySelection, z.ZodTypeDef, unknown>;
/** @internal */
export type ConversationsTimeBasedGroupBySelection$Outbound = {
    type: string;
    timeUnit: string;
    field?: string | undefined;
};
/** @internal */
export declare const ConversationsTimeBasedGroupBySelection$outboundSchema: z.ZodType<ConversationsTimeBasedGroupBySelection$Outbound, z.ZodTypeDef, ConversationsTimeBasedGroupBySelection>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ConversationsTimeBasedGroupBySelection$ {
    /** @deprecated use `ConversationsTimeBasedGroupBySelection$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ConversationsTimeBasedGroupBySelection, z.ZodTypeDef, unknown>;
    /** @deprecated use `ConversationsTimeBasedGroupBySelection$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ConversationsTimeBasedGroupBySelection$Outbound, z.ZodTypeDef, ConversationsTimeBasedGroupBySelection>;
    /** @deprecated use `ConversationsTimeBasedGroupBySelection$Outbound` instead. */
    type Outbound = ConversationsTimeBasedGroupBySelection$Outbound;
}
export declare function conversationsTimeBasedGroupBySelectionToJSON(conversationsTimeBasedGroupBySelection: ConversationsTimeBasedGroupBySelection): string;
export declare function conversationsTimeBasedGroupBySelectionFromJSON(jsonString: string): SafeParseResult<ConversationsTimeBasedGroupBySelection, SDKValidationError>;
//# sourceMappingURL=conversationstimebasedgroupbyselection.d.ts.map