/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
export const SemanticThreadSimpleFieldSelectionType = {
    Field: "field",
};
export const SemanticThreadSimpleFieldSelectionField = {
    Id: "id",
    MessageIds: "messageIds",
    MessagesCount: "messagesCount",
    OrganizationId: "organizationId",
    Question: "question",
    QuestionLength: "questionLength",
    Answer: "answer",
    IsOnTopic: "isOnTopic",
    IsClear: "isClear",
    IsDocumented: "isDocumented",
    IsFeatureSupported: "isFeatureSupported",
    IsAnswerConfident: "isAnswerConfident",
    GapSummary: "gapSummary",
    Subject: "subject",
    Category: "category",
    Languages: "languages",
    FirstPartyEntities: "firstPartyEntities",
    ThirdPartyEntities: "thirdPartyEntities",
    Emotion: "emotion",
    Sentiment: "sentiment",
    QuestionType: "questionType",
    ProjectId: "projectId",
    IntegrationId: "integrationId",
    Properties: "properties",
    UserProperties: "userProperties",
    FirstMessageTime: "firstMessageTime",
    LastMessageTime: "lastMessageTime",
    LastUpdated: "lastUpdated",
    HasPositiveFeedback: "hasPositiveFeedback",
    HasNegativeFeedback: "hasNegativeFeedback",
    ConversationIds: "conversationIds",
    AreAIAnnotationsVerified: "areAIAnnotationsVerified",
    IsInitialQuestionAnswer: "isInitialQuestionAnswer",
};
/** @internal */
export const SemanticThreadSimpleFieldSelectionType$inboundSchema = z.nativeEnum(SemanticThreadSimpleFieldSelectionType);
/** @internal */
export const SemanticThreadSimpleFieldSelectionType$outboundSchema = SemanticThreadSimpleFieldSelectionType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SemanticThreadSimpleFieldSelectionType$;
(function (SemanticThreadSimpleFieldSelectionType$) {
    /** @deprecated use `SemanticThreadSimpleFieldSelectionType$inboundSchema` instead. */
    SemanticThreadSimpleFieldSelectionType$.inboundSchema = SemanticThreadSimpleFieldSelectionType$inboundSchema;
    /** @deprecated use `SemanticThreadSimpleFieldSelectionType$outboundSchema` instead. */
    SemanticThreadSimpleFieldSelectionType$.outboundSchema = SemanticThreadSimpleFieldSelectionType$outboundSchema;
})(SemanticThreadSimpleFieldSelectionType$ || (SemanticThreadSimpleFieldSelectionType$ = {}));
/** @internal */
export const SemanticThreadSimpleFieldSelectionField$inboundSchema = z
    .nativeEnum(SemanticThreadSimpleFieldSelectionField);
/** @internal */
export const SemanticThreadSimpleFieldSelectionField$outboundSchema = SemanticThreadSimpleFieldSelectionField$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SemanticThreadSimpleFieldSelectionField$;
(function (SemanticThreadSimpleFieldSelectionField$) {
    /** @deprecated use `SemanticThreadSimpleFieldSelectionField$inboundSchema` instead. */
    SemanticThreadSimpleFieldSelectionField$.inboundSchema = SemanticThreadSimpleFieldSelectionField$inboundSchema;
    /** @deprecated use `SemanticThreadSimpleFieldSelectionField$outboundSchema` instead. */
    SemanticThreadSimpleFieldSelectionField$.outboundSchema = SemanticThreadSimpleFieldSelectionField$outboundSchema;
})(SemanticThreadSimpleFieldSelectionField$ || (SemanticThreadSimpleFieldSelectionField$ = {}));
/** @internal */
export const SemanticThreadSimpleFieldSelection$inboundSchema = z.object({
    type: SemanticThreadSimpleFieldSelectionType$inboundSchema,
    field: SemanticThreadSimpleFieldSelectionField$inboundSchema,
    path: z.array(z.string()).optional(),
});
/** @internal */
export const SemanticThreadSimpleFieldSelection$outboundSchema = z.object({
    type: SemanticThreadSimpleFieldSelectionType$outboundSchema,
    field: SemanticThreadSimpleFieldSelectionField$outboundSchema,
    path: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SemanticThreadSimpleFieldSelection$;
(function (SemanticThreadSimpleFieldSelection$) {
    /** @deprecated use `SemanticThreadSimpleFieldSelection$inboundSchema` instead. */
    SemanticThreadSimpleFieldSelection$.inboundSchema = SemanticThreadSimpleFieldSelection$inboundSchema;
    /** @deprecated use `SemanticThreadSimpleFieldSelection$outboundSchema` instead. */
    SemanticThreadSimpleFieldSelection$.outboundSchema = SemanticThreadSimpleFieldSelection$outboundSchema;
})(SemanticThreadSimpleFieldSelection$ || (SemanticThreadSimpleFieldSelection$ = {}));
export function semanticThreadSimpleFieldSelectionToJSON(semanticThreadSimpleFieldSelection) {
    return JSON.stringify(SemanticThreadSimpleFieldSelection$outboundSchema.parse(semanticThreadSimpleFieldSelection));
}
export function semanticThreadSimpleFieldSelectionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SemanticThreadSimpleFieldSelection$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SemanticThreadSimpleFieldSelection' from JSON`);
}
//# sourceMappingURL=semanticthreadsimplefieldselection.js.map