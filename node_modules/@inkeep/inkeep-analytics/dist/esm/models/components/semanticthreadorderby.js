/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
export const SemanticThreadOrderByField = {
    Id: "id",
    MessageIds: "messageIds",
    MessagesCount: "messagesCount",
    OrganizationId: "organizationId",
    Question: "question",
    QuestionLength: "questionLength",
    Answer: "answer",
    IsOnTopic: "isOnTopic",
    IsClear: "isClear",
    IsDocumented: "isDocumented",
    IsFeatureSupported: "isFeatureSupported",
    IsAnswerConfident: "isAnswerConfident",
    GapSummary: "gapSummary",
    Subject: "subject",
    Category: "category",
    Languages: "languages",
    FirstPartyEntities: "firstPartyEntities",
    ThirdPartyEntities: "thirdPartyEntities",
    Emotion: "emotion",
    Sentiment: "sentiment",
    QuestionType: "questionType",
    ProjectId: "projectId",
    IntegrationId: "integrationId",
    Properties: "properties",
    UserProperties: "userProperties",
    FirstMessageTime: "firstMessageTime",
    LastMessageTime: "lastMessageTime",
    LastUpdated: "lastUpdated",
    HasPositiveFeedback: "hasPositiveFeedback",
    HasNegativeFeedback: "hasNegativeFeedback",
    ConversationIds: "conversationIds",
    AreAIAnnotationsVerified: "areAIAnnotationsVerified",
    IsInitialQuestionAnswer: "isInitialQuestionAnswer",
    IdHour: "id_hour",
    IdDay: "id_day",
    IdWeek: "id_week",
    IdMonth: "id_month",
    MessageIdsHour: "messageIds_hour",
    MessageIdsDay: "messageIds_day",
    MessageIdsWeek: "messageIds_week",
    MessageIdsMonth: "messageIds_month",
    MessagesCountHour: "messagesCount_hour",
    MessagesCountDay: "messagesCount_day",
    MessagesCountWeek: "messagesCount_week",
    MessagesCountMonth: "messagesCount_month",
    OrganizationIdHour: "organizationId_hour",
    OrganizationIdDay: "organizationId_day",
    OrganizationIdWeek: "organizationId_week",
    OrganizationIdMonth: "organizationId_month",
    QuestionHour: "question_hour",
    QuestionDay: "question_day",
    QuestionWeek: "question_week",
    QuestionMonth: "question_month",
    QuestionLengthHour: "questionLength_hour",
    QuestionLengthDay: "questionLength_day",
    QuestionLengthWeek: "questionLength_week",
    QuestionLengthMonth: "questionLength_month",
    AnswerHour: "answer_hour",
    AnswerDay: "answer_day",
    AnswerWeek: "answer_week",
    AnswerMonth: "answer_month",
    IsOnTopicHour: "isOnTopic_hour",
    IsOnTopicDay: "isOnTopic_day",
    IsOnTopicWeek: "isOnTopic_week",
    IsOnTopicMonth: "isOnTopic_month",
    IsClearHour: "isClear_hour",
    IsClearDay: "isClear_day",
    IsClearWeek: "isClear_week",
    IsClearMonth: "isClear_month",
    IsDocumentedHour: "isDocumented_hour",
    IsDocumentedDay: "isDocumented_day",
    IsDocumentedWeek: "isDocumented_week",
    IsDocumentedMonth: "isDocumented_month",
    IsFeatureSupportedHour: "isFeatureSupported_hour",
    IsFeatureSupportedDay: "isFeatureSupported_day",
    IsFeatureSupportedWeek: "isFeatureSupported_week",
    IsFeatureSupportedMonth: "isFeatureSupported_month",
    IsAnswerConfidentHour: "isAnswerConfident_hour",
    IsAnswerConfidentDay: "isAnswerConfident_day",
    IsAnswerConfidentWeek: "isAnswerConfident_week",
    IsAnswerConfidentMonth: "isAnswerConfident_month",
    GapSummaryHour: "gapSummary_hour",
    GapSummaryDay: "gapSummary_day",
    GapSummaryWeek: "gapSummary_week",
    GapSummaryMonth: "gapSummary_month",
    SubjectHour: "subject_hour",
    SubjectDay: "subject_day",
    SubjectWeek: "subject_week",
    SubjectMonth: "subject_month",
    CategoryHour: "category_hour",
    CategoryDay: "category_day",
    CategoryWeek: "category_week",
    CategoryMonth: "category_month",
    LanguagesHour: "languages_hour",
    LanguagesDay: "languages_day",
    LanguagesWeek: "languages_week",
    LanguagesMonth: "languages_month",
    FirstPartyEntitiesHour: "firstPartyEntities_hour",
    FirstPartyEntitiesDay: "firstPartyEntities_day",
    FirstPartyEntitiesWeek: "firstPartyEntities_week",
    FirstPartyEntitiesMonth: "firstPartyEntities_month",
    ThirdPartyEntitiesHour: "thirdPartyEntities_hour",
    ThirdPartyEntitiesDay: "thirdPartyEntities_day",
    ThirdPartyEntitiesWeek: "thirdPartyEntities_week",
    ThirdPartyEntitiesMonth: "thirdPartyEntities_month",
    EmotionHour: "emotion_hour",
    EmotionDay: "emotion_day",
    EmotionWeek: "emotion_week",
    EmotionMonth: "emotion_month",
    SentimentHour: "sentiment_hour",
    SentimentDay: "sentiment_day",
    SentimentWeek: "sentiment_week",
    SentimentMonth: "sentiment_month",
    QuestionTypeHour: "questionType_hour",
    QuestionTypeDay: "questionType_day",
    QuestionTypeWeek: "questionType_week",
    QuestionTypeMonth: "questionType_month",
    ProjectIdHour: "projectId_hour",
    ProjectIdDay: "projectId_day",
    ProjectIdWeek: "projectId_week",
    ProjectIdMonth: "projectId_month",
    IntegrationIdHour: "integrationId_hour",
    IntegrationIdDay: "integrationId_day",
    IntegrationIdWeek: "integrationId_week",
    IntegrationIdMonth: "integrationId_month",
    PropertiesHour: "properties_hour",
    PropertiesDay: "properties_day",
    PropertiesWeek: "properties_week",
    PropertiesMonth: "properties_month",
    UserPropertiesHour: "userProperties_hour",
    UserPropertiesDay: "userProperties_day",
    UserPropertiesWeek: "userProperties_week",
    UserPropertiesMonth: "userProperties_month",
    FirstMessageTimeHour: "firstMessageTime_hour",
    FirstMessageTimeDay: "firstMessageTime_day",
    FirstMessageTimeWeek: "firstMessageTime_week",
    FirstMessageTimeMonth: "firstMessageTime_month",
    LastMessageTimeHour: "lastMessageTime_hour",
    LastMessageTimeDay: "lastMessageTime_day",
    LastMessageTimeWeek: "lastMessageTime_week",
    LastMessageTimeMonth: "lastMessageTime_month",
    LastUpdatedHour: "lastUpdated_hour",
    LastUpdatedDay: "lastUpdated_day",
    LastUpdatedWeek: "lastUpdated_week",
    LastUpdatedMonth: "lastUpdated_month",
    HasPositiveFeedbackHour: "hasPositiveFeedback_hour",
    HasPositiveFeedbackDay: "hasPositiveFeedback_day",
    HasPositiveFeedbackWeek: "hasPositiveFeedback_week",
    HasPositiveFeedbackMonth: "hasPositiveFeedback_month",
    HasNegativeFeedbackHour: "hasNegativeFeedback_hour",
    HasNegativeFeedbackDay: "hasNegativeFeedback_day",
    HasNegativeFeedbackWeek: "hasNegativeFeedback_week",
    HasNegativeFeedbackMonth: "hasNegativeFeedback_month",
    ConversationIdsHour: "conversationIds_hour",
    ConversationIdsDay: "conversationIds_day",
    ConversationIdsWeek: "conversationIds_week",
    ConversationIdsMonth: "conversationIds_month",
    AreAIAnnotationsVerifiedHour: "areAIAnnotationsVerified_hour",
    AreAIAnnotationsVerifiedDay: "areAIAnnotationsVerified_day",
    AreAIAnnotationsVerifiedWeek: "areAIAnnotationsVerified_week",
    AreAIAnnotationsVerifiedMonth: "areAIAnnotationsVerified_month",
    IsInitialQuestionAnswerHour: "isInitialQuestionAnswer_hour",
    IsInitialQuestionAnswerDay: "isInitialQuestionAnswer_day",
    IsInitialQuestionAnswerWeek: "isInitialQuestionAnswer_week",
    IsInitialQuestionAnswerMonth: "isInitialQuestionAnswer_month",
    SumId: "sum_id",
    SumMessageIds: "sum_messageIds",
    SumMessagesCount: "sum_messagesCount",
    SumOrganizationId: "sum_organizationId",
    SumQuestion: "sum_question",
    SumQuestionLength: "sum_questionLength",
    SumAnswer: "sum_answer",
    SumIsOnTopic: "sum_isOnTopic",
    SumIsClear: "sum_isClear",
    SumIsDocumented: "sum_isDocumented",
    SumIsFeatureSupported: "sum_isFeatureSupported",
    SumIsAnswerConfident: "sum_isAnswerConfident",
    SumGapSummary: "sum_gapSummary",
    SumSubject: "sum_subject",
    SumCategory: "sum_category",
    SumLanguages: "sum_languages",
    SumFirstPartyEntities: "sum_firstPartyEntities",
    SumThirdPartyEntities: "sum_thirdPartyEntities",
    SumEmotion: "sum_emotion",
    SumSentiment: "sum_sentiment",
    SumQuestionType: "sum_questionType",
    SumProjectId: "sum_projectId",
    SumIntegrationId: "sum_integrationId",
    SumProperties: "sum_properties",
    SumUserProperties: "sum_userProperties",
    SumFirstMessageTime: "sum_firstMessageTime",
    SumLastMessageTime: "sum_lastMessageTime",
    SumLastUpdated: "sum_lastUpdated",
    SumHasPositiveFeedback: "sum_hasPositiveFeedback",
    SumHasNegativeFeedback: "sum_hasNegativeFeedback",
    SumConversationIds: "sum_conversationIds",
    SumAreAIAnnotationsVerified: "sum_areAIAnnotationsVerified",
    SumIsInitialQuestionAnswer: "sum_isInitialQuestionAnswer",
    CountId: "count_id",
    CountMessageIds: "count_messageIds",
    CountMessagesCount: "count_messagesCount",
    CountOrganizationId: "count_organizationId",
    CountQuestion: "count_question",
    CountQuestionLength: "count_questionLength",
    CountAnswer: "count_answer",
    CountIsOnTopic: "count_isOnTopic",
    CountIsClear: "count_isClear",
    CountIsDocumented: "count_isDocumented",
    CountIsFeatureSupported: "count_isFeatureSupported",
    CountIsAnswerConfident: "count_isAnswerConfident",
    CountGapSummary: "count_gapSummary",
    CountSubject: "count_subject",
    CountCategory: "count_category",
    CountLanguages: "count_languages",
    CountFirstPartyEntities: "count_firstPartyEntities",
    CountThirdPartyEntities: "count_thirdPartyEntities",
    CountEmotion: "count_emotion",
    CountSentiment: "count_sentiment",
    CountQuestionType: "count_questionType",
    CountProjectId: "count_projectId",
    CountIntegrationId: "count_integrationId",
    CountProperties: "count_properties",
    CountUserProperties: "count_userProperties",
    CountFirstMessageTime: "count_firstMessageTime",
    CountLastMessageTime: "count_lastMessageTime",
    CountLastUpdated: "count_lastUpdated",
    CountHasPositiveFeedback: "count_hasPositiveFeedback",
    CountHasNegativeFeedback: "count_hasNegativeFeedback",
    CountConversationIds: "count_conversationIds",
    CountAreAIAnnotationsVerified: "count_areAIAnnotationsVerified",
    CountIsInitialQuestionAnswer: "count_isInitialQuestionAnswer",
    AvgId: "avg_id",
    AvgMessageIds: "avg_messageIds",
    AvgMessagesCount: "avg_messagesCount",
    AvgOrganizationId: "avg_organizationId",
    AvgQuestion: "avg_question",
    AvgQuestionLength: "avg_questionLength",
    AvgAnswer: "avg_answer",
    AvgIsOnTopic: "avg_isOnTopic",
    AvgIsClear: "avg_isClear",
    AvgIsDocumented: "avg_isDocumented",
    AvgIsFeatureSupported: "avg_isFeatureSupported",
    AvgIsAnswerConfident: "avg_isAnswerConfident",
    AvgGapSummary: "avg_gapSummary",
    AvgSubject: "avg_subject",
    AvgCategory: "avg_category",
    AvgLanguages: "avg_languages",
    AvgFirstPartyEntities: "avg_firstPartyEntities",
    AvgThirdPartyEntities: "avg_thirdPartyEntities",
    AvgEmotion: "avg_emotion",
    AvgSentiment: "avg_sentiment",
    AvgQuestionType: "avg_questionType",
    AvgProjectId: "avg_projectId",
    AvgIntegrationId: "avg_integrationId",
    AvgProperties: "avg_properties",
    AvgUserProperties: "avg_userProperties",
    AvgFirstMessageTime: "avg_firstMessageTime",
    AvgLastMessageTime: "avg_lastMessageTime",
    AvgLastUpdated: "avg_lastUpdated",
    AvgHasPositiveFeedback: "avg_hasPositiveFeedback",
    AvgHasNegativeFeedback: "avg_hasNegativeFeedback",
    AvgConversationIds: "avg_conversationIds",
    AvgAreAIAnnotationsVerified: "avg_areAIAnnotationsVerified",
    AvgIsInitialQuestionAnswer: "avg_isInitialQuestionAnswer",
    MinId: "min_id",
    MinMessageIds: "min_messageIds",
    MinMessagesCount: "min_messagesCount",
    MinOrganizationId: "min_organizationId",
    MinQuestion: "min_question",
    MinQuestionLength: "min_questionLength",
    MinAnswer: "min_answer",
    MinIsOnTopic: "min_isOnTopic",
    MinIsClear: "min_isClear",
    MinIsDocumented: "min_isDocumented",
    MinIsFeatureSupported: "min_isFeatureSupported",
    MinIsAnswerConfident: "min_isAnswerConfident",
    MinGapSummary: "min_gapSummary",
    MinSubject: "min_subject",
    MinCategory: "min_category",
    MinLanguages: "min_languages",
    MinFirstPartyEntities: "min_firstPartyEntities",
    MinThirdPartyEntities: "min_thirdPartyEntities",
    MinEmotion: "min_emotion",
    MinSentiment: "min_sentiment",
    MinQuestionType: "min_questionType",
    MinProjectId: "min_projectId",
    MinIntegrationId: "min_integrationId",
    MinProperties: "min_properties",
    MinUserProperties: "min_userProperties",
    MinFirstMessageTime: "min_firstMessageTime",
    MinLastMessageTime: "min_lastMessageTime",
    MinLastUpdated: "min_lastUpdated",
    MinHasPositiveFeedback: "min_hasPositiveFeedback",
    MinHasNegativeFeedback: "min_hasNegativeFeedback",
    MinConversationIds: "min_conversationIds",
    MinAreAIAnnotationsVerified: "min_areAIAnnotationsVerified",
    MinIsInitialQuestionAnswer: "min_isInitialQuestionAnswer",
    MaxId: "max_id",
    MaxMessageIds: "max_messageIds",
    MaxMessagesCount: "max_messagesCount",
    MaxOrganizationId: "max_organizationId",
    MaxQuestion: "max_question",
    MaxQuestionLength: "max_questionLength",
    MaxAnswer: "max_answer",
    MaxIsOnTopic: "max_isOnTopic",
    MaxIsClear: "max_isClear",
    MaxIsDocumented: "max_isDocumented",
    MaxIsFeatureSupported: "max_isFeatureSupported",
    MaxIsAnswerConfident: "max_isAnswerConfident",
    MaxGapSummary: "max_gapSummary",
    MaxSubject: "max_subject",
    MaxCategory: "max_category",
    MaxLanguages: "max_languages",
    MaxFirstPartyEntities: "max_firstPartyEntities",
    MaxThirdPartyEntities: "max_thirdPartyEntities",
    MaxEmotion: "max_emotion",
    MaxSentiment: "max_sentiment",
    MaxQuestionType: "max_questionType",
    MaxProjectId: "max_projectId",
    MaxIntegrationId: "max_integrationId",
    MaxProperties: "max_properties",
    MaxUserProperties: "max_userProperties",
    MaxFirstMessageTime: "max_firstMessageTime",
    MaxLastMessageTime: "max_lastMessageTime",
    MaxLastUpdated: "max_lastUpdated",
    MaxHasPositiveFeedback: "max_hasPositiveFeedback",
    MaxHasNegativeFeedback: "max_hasNegativeFeedback",
    MaxConversationIds: "max_conversationIds",
    MaxAreAIAnnotationsVerified: "max_areAIAnnotationsVerified",
    MaxIsInitialQuestionAnswer: "max_isInitialQuestionAnswer",
};
export const SemanticThreadOrderByDirection = {
    Asc: "asc",
    Desc: "desc",
};
/** @internal */
export const SemanticThreadOrderByField$inboundSchema = z.nativeEnum(SemanticThreadOrderByField);
/** @internal */
export const SemanticThreadOrderByField$outboundSchema = SemanticThreadOrderByField$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SemanticThreadOrderByField$;
(function (SemanticThreadOrderByField$) {
    /** @deprecated use `SemanticThreadOrderByField$inboundSchema` instead. */
    SemanticThreadOrderByField$.inboundSchema = SemanticThreadOrderByField$inboundSchema;
    /** @deprecated use `SemanticThreadOrderByField$outboundSchema` instead. */
    SemanticThreadOrderByField$.outboundSchema = SemanticThreadOrderByField$outboundSchema;
})(SemanticThreadOrderByField$ || (SemanticThreadOrderByField$ = {}));
/** @internal */
export const SemanticThreadOrderByDirection$inboundSchema = z.nativeEnum(SemanticThreadOrderByDirection);
/** @internal */
export const SemanticThreadOrderByDirection$outboundSchema = SemanticThreadOrderByDirection$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SemanticThreadOrderByDirection$;
(function (SemanticThreadOrderByDirection$) {
    /** @deprecated use `SemanticThreadOrderByDirection$inboundSchema` instead. */
    SemanticThreadOrderByDirection$.inboundSchema = SemanticThreadOrderByDirection$inboundSchema;
    /** @deprecated use `SemanticThreadOrderByDirection$outboundSchema` instead. */
    SemanticThreadOrderByDirection$.outboundSchema = SemanticThreadOrderByDirection$outboundSchema;
})(SemanticThreadOrderByDirection$ || (SemanticThreadOrderByDirection$ = {}));
/** @internal */
export const SemanticThreadOrderBy$inboundSchema = z.object({
    field: SemanticThreadOrderByField$inboundSchema,
    direction: SemanticThreadOrderByDirection$inboundSchema,
});
/** @internal */
export const SemanticThreadOrderBy$outboundSchema = z.object({
    field: SemanticThreadOrderByField$outboundSchema,
    direction: SemanticThreadOrderByDirection$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SemanticThreadOrderBy$;
(function (SemanticThreadOrderBy$) {
    /** @deprecated use `SemanticThreadOrderBy$inboundSchema` instead. */
    SemanticThreadOrderBy$.inboundSchema = SemanticThreadOrderBy$inboundSchema;
    /** @deprecated use `SemanticThreadOrderBy$outboundSchema` instead. */
    SemanticThreadOrderBy$.outboundSchema = SemanticThreadOrderBy$outboundSchema;
})(SemanticThreadOrderBy$ || (SemanticThreadOrderBy$ = {}));
export function semanticThreadOrderByToJSON(semanticThreadOrderBy) {
    return JSON.stringify(SemanticThreadOrderBy$outboundSchema.parse(semanticThreadOrderBy));
}
export function semanticThreadOrderByFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SemanticThreadOrderBy$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SemanticThreadOrderBy' from JSON`);
}
//# sourceMappingURL=semanticthreadorderby.js.map