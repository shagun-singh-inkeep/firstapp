/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const PropertyKeysResponseBody$inboundSchema = z.object({
    results: z.array(z.string()),
});
/** @internal */
export const PropertyKeysResponseBody$outboundSchema = z.object({
    results: z.array(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PropertyKeysResponseBody$;
(function (PropertyKeysResponseBody$) {
    /** @deprecated use `PropertyKeysResponseBody$inboundSchema` instead. */
    PropertyKeysResponseBody$.inboundSchema = PropertyKeysResponseBody$inboundSchema;
    /** @deprecated use `PropertyKeysResponseBody$outboundSchema` instead. */
    PropertyKeysResponseBody$.outboundSchema = PropertyKeysResponseBody$outboundSchema;
})(PropertyKeysResponseBody$ || (PropertyKeysResponseBody$ = {}));
export function propertyKeysResponseBodyToJSON(propertyKeysResponseBody) {
    return JSON.stringify(PropertyKeysResponseBody$outboundSchema.parse(propertyKeysResponseBody));
}
export function propertyKeysResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PropertyKeysResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PropertyKeysResponseBody' from JSON`);
}
//# sourceMappingURL=propertykeysresponsebody.js.map