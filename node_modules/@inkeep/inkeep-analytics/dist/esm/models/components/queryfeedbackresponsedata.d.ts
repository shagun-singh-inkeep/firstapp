import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export declare const QueryFeedbackResponseDataType: {
    readonly Positive: "positive";
    readonly Negative: "negative";
};
export type QueryFeedbackResponseDataType = ClosedEnum<typeof QueryFeedbackResponseDataType>;
export type QueryFeedbackResponseDataReasons = {
    label: string;
    details: string;
};
/**
 * The unique identifier for the user. This value is sent by the inkeep widget.
 */
export type QueryFeedbackResponseDataId = string | number;
/**
 * The unique identifier for the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export type QueryFeedbackResponseDataUserId = string | number;
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export declare const QueryFeedbackResponseDataUserType: {
    readonly User: "user";
    readonly Member: "member";
};
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export type QueryFeedbackResponseDataUserType = ClosedEnum<typeof QueryFeedbackResponseDataUserType>;
/**
 * A customizable collection of custom properties or attributes. Some properties have first class support for the Inkeep Portal or Widget and are noted in the description.
 */
export type QueryFeedbackResponseDataUserProperties = {
    /**
     * The unique identifier for the user. This value is sent by the inkeep widget.
     */
    id?: string | number | null | undefined;
    /**
     * The type of identification for the user. This value is sent by the inkeep widget.
     */
    identificationType?: string | null | undefined;
    /**
     * The unique identifier for the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
     */
    userId?: string | number | null | undefined;
    /**
     * The name of the support agent assigned to the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
     */
    supportAgentName?: string | null | undefined;
    /**
     * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
     */
    userType?: QueryFeedbackResponseDataUserType | null | undefined;
    additionalProperties?: {
        [k: string]: any;
    };
};
export declare const QueryFeedbackResponseDataStatus: {
    readonly Unreviewed: "unreviewed";
    readonly Flagged: "flagged";
    readonly Deferred: "deferred";
    readonly Resolved: "resolved";
};
export type QueryFeedbackResponseDataStatus = ClosedEnum<typeof QueryFeedbackResponseDataStatus>;
export type FeedbackResultItem = {
    id?: string | undefined;
    type?: QueryFeedbackResponseDataType | undefined;
    messageId?: string | undefined;
    createdAt?: Date | undefined;
    organizationId?: string | undefined;
    reasons?: Array<QueryFeedbackResponseDataReasons> | null | undefined;
    /**
     * A customizable collection of custom properties or attributes.
     */
    properties?: {
        [k: string]: any;
    } | null | undefined;
    /**
     * A customizable collection of custom properties or attributes. Some properties have first class support for the Inkeep Portal or Widget and are noted in the description.
     */
    userProperties?: QueryFeedbackResponseDataUserProperties | null | undefined;
    conversationId?: string | undefined;
    projectId?: string | null | undefined;
    integrationId?: string | null | undefined;
    updatedAt?: Date | null | undefined;
    status?: QueryFeedbackResponseDataStatus | undefined;
    sum?: number | undefined;
    count?: number | undefined;
    avg?: number | undefined;
    min?: number | undefined;
    max?: number | undefined;
    idHour?: string | undefined;
    idDay?: string | undefined;
    idWeek?: string | undefined;
    idMonth?: string | undefined;
    typeHour?: string | undefined;
    typeDay?: string | undefined;
    typeWeek?: string | undefined;
    typeMonth?: string | undefined;
    messageIdHour?: string | undefined;
    messageIdDay?: string | undefined;
    messageIdWeek?: string | undefined;
    messageIdMonth?: string | undefined;
    createdAtHour?: string | undefined;
    createdAtDay?: string | undefined;
    createdAtWeek?: string | undefined;
    createdAtMonth?: string | undefined;
    organizationIdHour?: string | undefined;
    organizationIdDay?: string | undefined;
    organizationIdWeek?: string | undefined;
    organizationIdMonth?: string | undefined;
    reasonsHour?: string | undefined;
    reasonsDay?: string | undefined;
    reasonsWeek?: string | undefined;
    reasonsMonth?: string | undefined;
    propertiesHour?: string | undefined;
    propertiesDay?: string | undefined;
    propertiesWeek?: string | undefined;
    propertiesMonth?: string | undefined;
    userPropertiesHour?: string | undefined;
    userPropertiesDay?: string | undefined;
    userPropertiesWeek?: string | undefined;
    userPropertiesMonth?: string | undefined;
    conversationIdHour?: string | undefined;
    conversationIdDay?: string | undefined;
    conversationIdWeek?: string | undefined;
    conversationIdMonth?: string | undefined;
    projectIdHour?: string | undefined;
    projectIdDay?: string | undefined;
    projectIdWeek?: string | undefined;
    projectIdMonth?: string | undefined;
    integrationIdHour?: string | undefined;
    integrationIdDay?: string | undefined;
    integrationIdWeek?: string | undefined;
    integrationIdMonth?: string | undefined;
    updatedAtHour?: string | undefined;
    updatedAtDay?: string | undefined;
    updatedAtWeek?: string | undefined;
    updatedAtMonth?: string | undefined;
    statusHour?: string | undefined;
    statusDay?: string | undefined;
    statusWeek?: string | undefined;
    statusMonth?: string | undefined;
    sumId?: number | undefined;
    sumType?: number | undefined;
    sumMessageId?: number | undefined;
    sumCreatedAt?: number | undefined;
    sumOrganizationId?: number | undefined;
    sumReasons?: number | undefined;
    sumProperties?: number | undefined;
    sumUserProperties?: number | undefined;
    sumConversationId?: number | undefined;
    sumProjectId?: number | undefined;
    sumIntegrationId?: number | undefined;
    sumUpdatedAt?: number | undefined;
    sumStatus?: number | undefined;
    countId?: number | undefined;
    countType?: number | undefined;
    countMessageId?: number | undefined;
    countCreatedAt?: number | undefined;
    countOrganizationId?: number | undefined;
    countReasons?: number | undefined;
    countProperties?: number | undefined;
    countUserProperties?: number | undefined;
    countConversationId?: number | undefined;
    countProjectId?: number | undefined;
    countIntegrationId?: number | undefined;
    countUpdatedAt?: number | undefined;
    countStatus?: number | undefined;
    avgId?: number | undefined;
    avgType?: number | undefined;
    avgMessageId?: number | undefined;
    avgCreatedAt?: number | undefined;
    avgOrganizationId?: number | undefined;
    avgReasons?: number | undefined;
    avgProperties?: number | undefined;
    avgUserProperties?: number | undefined;
    avgConversationId?: number | undefined;
    avgProjectId?: number | undefined;
    avgIntegrationId?: number | undefined;
    avgUpdatedAt?: number | undefined;
    avgStatus?: number | undefined;
    minId?: number | undefined;
    minType?: number | undefined;
    minMessageId?: number | undefined;
    minCreatedAt?: number | undefined;
    minOrganizationId?: number | undefined;
    minReasons?: number | undefined;
    minProperties?: number | undefined;
    minUserProperties?: number | undefined;
    minConversationId?: number | undefined;
    minProjectId?: number | undefined;
    minIntegrationId?: number | undefined;
    minUpdatedAt?: number | undefined;
    minStatus?: number | undefined;
    maxId?: number | undefined;
    maxType?: number | undefined;
    maxMessageId?: number | undefined;
    maxCreatedAt?: number | undefined;
    maxOrganizationId?: number | undefined;
    maxReasons?: number | undefined;
    maxProperties?: number | undefined;
    maxUserProperties?: number | undefined;
    maxConversationId?: number | undefined;
    maxProjectId?: number | undefined;
    maxIntegrationId?: number | undefined;
    maxUpdatedAt?: number | undefined;
    maxStatus?: number | undefined;
    sumPropertiesUserId?: number | undefined;
    sumPropertiesSupportAgentName?: number | undefined;
    sumUserPropertiesUserId?: number | undefined;
    sumUserPropertiesSupportAgentName?: number | undefined;
    countPropertiesUserId?: number | undefined;
    countPropertiesSupportAgentName?: number | undefined;
    countUserPropertiesUserId?: number | undefined;
    countUserPropertiesSupportAgentName?: number | undefined;
    countDistinctPropertiesUserId?: number | undefined;
    countDistinctPropertiesSupportAgentName?: number | undefined;
    countDistinctUserPropertiesUserId?: number | undefined;
    countDistinctUserPropertiesSupportAgentName?: number | undefined;
    avgPropertiesUserId?: number | undefined;
    avgPropertiesSupportAgentName?: number | undefined;
    avgUserPropertiesUserId?: number | undefined;
    avgUserPropertiesSupportAgentName?: number | undefined;
    minPropertiesUserId?: number | undefined;
    minPropertiesSupportAgentName?: number | undefined;
    minUserPropertiesUserId?: number | undefined;
    minUserPropertiesSupportAgentName?: number | undefined;
    maxPropertiesUserId?: number | undefined;
    maxPropertiesSupportAgentName?: number | undefined;
    maxUserPropertiesUserId?: number | undefined;
    maxUserPropertiesSupportAgentName?: number | undefined;
    propertiesUserId?: string | null | undefined;
    propertiesSupportAgentName?: string | null | undefined;
    userPropertiesUserId?: string | null | undefined;
    userPropertiesSupportAgentName?: string | null | undefined;
};
/**
 * Data object containing QueryFeedback query results and pagination information
 */
export type QueryFeedbackResponseData = {
    result: Array<FeedbackResultItem>;
    /**
     * Total number of results matching the query
     */
    total: number;
    /**
     * Number of results per page
     */
    pageSize: number;
    /**
     * Number of results in the current response
     */
    count: number;
};
/** @internal */
export declare const QueryFeedbackResponseDataType$inboundSchema: z.ZodNativeEnum<typeof QueryFeedbackResponseDataType>;
/** @internal */
export declare const QueryFeedbackResponseDataType$outboundSchema: z.ZodNativeEnum<typeof QueryFeedbackResponseDataType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryFeedbackResponseDataType$ {
    /** @deprecated use `QueryFeedbackResponseDataType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Positive: "positive";
        readonly Negative: "negative";
    }>;
    /** @deprecated use `QueryFeedbackResponseDataType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Positive: "positive";
        readonly Negative: "negative";
    }>;
}
/** @internal */
export declare const QueryFeedbackResponseDataReasons$inboundSchema: z.ZodType<QueryFeedbackResponseDataReasons, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryFeedbackResponseDataReasons$Outbound = {
    label: string;
    details: string;
};
/** @internal */
export declare const QueryFeedbackResponseDataReasons$outboundSchema: z.ZodType<QueryFeedbackResponseDataReasons$Outbound, z.ZodTypeDef, QueryFeedbackResponseDataReasons>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryFeedbackResponseDataReasons$ {
    /** @deprecated use `QueryFeedbackResponseDataReasons$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryFeedbackResponseDataReasons, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryFeedbackResponseDataReasons$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryFeedbackResponseDataReasons$Outbound, z.ZodTypeDef, QueryFeedbackResponseDataReasons>;
    /** @deprecated use `QueryFeedbackResponseDataReasons$Outbound` instead. */
    type Outbound = QueryFeedbackResponseDataReasons$Outbound;
}
export declare function queryFeedbackResponseDataReasonsToJSON(queryFeedbackResponseDataReasons: QueryFeedbackResponseDataReasons): string;
export declare function queryFeedbackResponseDataReasonsFromJSON(jsonString: string): SafeParseResult<QueryFeedbackResponseDataReasons, SDKValidationError>;
/** @internal */
export declare const QueryFeedbackResponseDataId$inboundSchema: z.ZodType<QueryFeedbackResponseDataId, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryFeedbackResponseDataId$Outbound = string | number;
/** @internal */
export declare const QueryFeedbackResponseDataId$outboundSchema: z.ZodType<QueryFeedbackResponseDataId$Outbound, z.ZodTypeDef, QueryFeedbackResponseDataId>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryFeedbackResponseDataId$ {
    /** @deprecated use `QueryFeedbackResponseDataId$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryFeedbackResponseDataId, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryFeedbackResponseDataId$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryFeedbackResponseDataId$Outbound, z.ZodTypeDef, QueryFeedbackResponseDataId>;
    /** @deprecated use `QueryFeedbackResponseDataId$Outbound` instead. */
    type Outbound = QueryFeedbackResponseDataId$Outbound;
}
export declare function queryFeedbackResponseDataIdToJSON(queryFeedbackResponseDataId: QueryFeedbackResponseDataId): string;
export declare function queryFeedbackResponseDataIdFromJSON(jsonString: string): SafeParseResult<QueryFeedbackResponseDataId, SDKValidationError>;
/** @internal */
export declare const QueryFeedbackResponseDataUserId$inboundSchema: z.ZodType<QueryFeedbackResponseDataUserId, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryFeedbackResponseDataUserId$Outbound = string | number;
/** @internal */
export declare const QueryFeedbackResponseDataUserId$outboundSchema: z.ZodType<QueryFeedbackResponseDataUserId$Outbound, z.ZodTypeDef, QueryFeedbackResponseDataUserId>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryFeedbackResponseDataUserId$ {
    /** @deprecated use `QueryFeedbackResponseDataUserId$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryFeedbackResponseDataUserId, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryFeedbackResponseDataUserId$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryFeedbackResponseDataUserId$Outbound, z.ZodTypeDef, QueryFeedbackResponseDataUserId>;
    /** @deprecated use `QueryFeedbackResponseDataUserId$Outbound` instead. */
    type Outbound = QueryFeedbackResponseDataUserId$Outbound;
}
export declare function queryFeedbackResponseDataUserIdToJSON(queryFeedbackResponseDataUserId: QueryFeedbackResponseDataUserId): string;
export declare function queryFeedbackResponseDataUserIdFromJSON(jsonString: string): SafeParseResult<QueryFeedbackResponseDataUserId, SDKValidationError>;
/** @internal */
export declare const QueryFeedbackResponseDataUserType$inboundSchema: z.ZodNativeEnum<typeof QueryFeedbackResponseDataUserType>;
/** @internal */
export declare const QueryFeedbackResponseDataUserType$outboundSchema: z.ZodNativeEnum<typeof QueryFeedbackResponseDataUserType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryFeedbackResponseDataUserType$ {
    /** @deprecated use `QueryFeedbackResponseDataUserType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly User: "user";
        readonly Member: "member";
    }>;
    /** @deprecated use `QueryFeedbackResponseDataUserType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly User: "user";
        readonly Member: "member";
    }>;
}
/** @internal */
export declare const QueryFeedbackResponseDataUserProperties$inboundSchema: z.ZodType<QueryFeedbackResponseDataUserProperties, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryFeedbackResponseDataUserProperties$Outbound = {
    id?: string | number | null | undefined;
    identificationType?: string | null | undefined;
    userId?: string | number | null | undefined;
    supportAgentName?: string | null | undefined;
    userType?: string | null | undefined;
    [additionalProperties: string]: unknown;
};
/** @internal */
export declare const QueryFeedbackResponseDataUserProperties$outboundSchema: z.ZodType<QueryFeedbackResponseDataUserProperties$Outbound, z.ZodTypeDef, QueryFeedbackResponseDataUserProperties>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryFeedbackResponseDataUserProperties$ {
    /** @deprecated use `QueryFeedbackResponseDataUserProperties$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryFeedbackResponseDataUserProperties, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryFeedbackResponseDataUserProperties$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryFeedbackResponseDataUserProperties$Outbound, z.ZodTypeDef, QueryFeedbackResponseDataUserProperties>;
    /** @deprecated use `QueryFeedbackResponseDataUserProperties$Outbound` instead. */
    type Outbound = QueryFeedbackResponseDataUserProperties$Outbound;
}
export declare function queryFeedbackResponseDataUserPropertiesToJSON(queryFeedbackResponseDataUserProperties: QueryFeedbackResponseDataUserProperties): string;
export declare function queryFeedbackResponseDataUserPropertiesFromJSON(jsonString: string): SafeParseResult<QueryFeedbackResponseDataUserProperties, SDKValidationError>;
/** @internal */
export declare const QueryFeedbackResponseDataStatus$inboundSchema: z.ZodNativeEnum<typeof QueryFeedbackResponseDataStatus>;
/** @internal */
export declare const QueryFeedbackResponseDataStatus$outboundSchema: z.ZodNativeEnum<typeof QueryFeedbackResponseDataStatus>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryFeedbackResponseDataStatus$ {
    /** @deprecated use `QueryFeedbackResponseDataStatus$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Unreviewed: "unreviewed";
        readonly Flagged: "flagged";
        readonly Deferred: "deferred";
        readonly Resolved: "resolved";
    }>;
    /** @deprecated use `QueryFeedbackResponseDataStatus$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Unreviewed: "unreviewed";
        readonly Flagged: "flagged";
        readonly Deferred: "deferred";
        readonly Resolved: "resolved";
    }>;
}
/** @internal */
export declare const FeedbackResultItem$inboundSchema: z.ZodType<FeedbackResultItem, z.ZodTypeDef, unknown>;
/** @internal */
export type FeedbackResultItem$Outbound = {
    id?: string | undefined;
    type?: string | undefined;
    messageId?: string | undefined;
    createdAt?: string | undefined;
    organizationId?: string | undefined;
    reasons?: Array<QueryFeedbackResponseDataReasons$Outbound> | null | undefined;
    properties?: {
        [k: string]: any;
    } | null | undefined;
    userProperties?: QueryFeedbackResponseDataUserProperties$Outbound | null | undefined;
    conversationId?: string | undefined;
    projectId?: string | null | undefined;
    integrationId?: string | null | undefined;
    updatedAt?: string | null | undefined;
    status: string;
    sum?: number | undefined;
    count?: number | undefined;
    avg?: number | undefined;
    min?: number | undefined;
    max?: number | undefined;
    id_hour?: string | undefined;
    id_day?: string | undefined;
    id_week?: string | undefined;
    id_month?: string | undefined;
    type_hour?: string | undefined;
    type_day?: string | undefined;
    type_week?: string | undefined;
    type_month?: string | undefined;
    messageId_hour?: string | undefined;
    messageId_day?: string | undefined;
    messageId_week?: string | undefined;
    messageId_month?: string | undefined;
    createdAt_hour?: string | undefined;
    createdAt_day?: string | undefined;
    createdAt_week?: string | undefined;
    createdAt_month?: string | undefined;
    organizationId_hour?: string | undefined;
    organizationId_day?: string | undefined;
    organizationId_week?: string | undefined;
    organizationId_month?: string | undefined;
    reasons_hour?: string | undefined;
    reasons_day?: string | undefined;
    reasons_week?: string | undefined;
    reasons_month?: string | undefined;
    properties_hour?: string | undefined;
    properties_day?: string | undefined;
    properties_week?: string | undefined;
    properties_month?: string | undefined;
    userProperties_hour?: string | undefined;
    userProperties_day?: string | undefined;
    userProperties_week?: string | undefined;
    userProperties_month?: string | undefined;
    conversationId_hour?: string | undefined;
    conversationId_day?: string | undefined;
    conversationId_week?: string | undefined;
    conversationId_month?: string | undefined;
    projectId_hour?: string | undefined;
    projectId_day?: string | undefined;
    projectId_week?: string | undefined;
    projectId_month?: string | undefined;
    integrationId_hour?: string | undefined;
    integrationId_day?: string | undefined;
    integrationId_week?: string | undefined;
    integrationId_month?: string | undefined;
    updatedAt_hour?: string | undefined;
    updatedAt_day?: string | undefined;
    updatedAt_week?: string | undefined;
    updatedAt_month?: string | undefined;
    status_hour?: string | undefined;
    status_day?: string | undefined;
    status_week?: string | undefined;
    status_month?: string | undefined;
    sum_id?: number | undefined;
    sum_type?: number | undefined;
    sum_messageId?: number | undefined;
    sum_createdAt?: number | undefined;
    sum_organizationId?: number | undefined;
    sum_reasons?: number | undefined;
    sum_properties?: number | undefined;
    sum_userProperties?: number | undefined;
    sum_conversationId?: number | undefined;
    sum_projectId?: number | undefined;
    sum_integrationId?: number | undefined;
    sum_updatedAt?: number | undefined;
    sum_status?: number | undefined;
    count_id?: number | undefined;
    count_type?: number | undefined;
    count_messageId?: number | undefined;
    count_createdAt?: number | undefined;
    count_organizationId?: number | undefined;
    count_reasons?: number | undefined;
    count_properties?: number | undefined;
    count_userProperties?: number | undefined;
    count_conversationId?: number | undefined;
    count_projectId?: number | undefined;
    count_integrationId?: number | undefined;
    count_updatedAt?: number | undefined;
    count_status?: number | undefined;
    avg_id?: number | undefined;
    avg_type?: number | undefined;
    avg_messageId?: number | undefined;
    avg_createdAt?: number | undefined;
    avg_organizationId?: number | undefined;
    avg_reasons?: number | undefined;
    avg_properties?: number | undefined;
    avg_userProperties?: number | undefined;
    avg_conversationId?: number | undefined;
    avg_projectId?: number | undefined;
    avg_integrationId?: number | undefined;
    avg_updatedAt?: number | undefined;
    avg_status?: number | undefined;
    min_id?: number | undefined;
    min_type?: number | undefined;
    min_messageId?: number | undefined;
    min_createdAt?: number | undefined;
    min_organizationId?: number | undefined;
    min_reasons?: number | undefined;
    min_properties?: number | undefined;
    min_userProperties?: number | undefined;
    min_conversationId?: number | undefined;
    min_projectId?: number | undefined;
    min_integrationId?: number | undefined;
    min_updatedAt?: number | undefined;
    min_status?: number | undefined;
    max_id?: number | undefined;
    max_type?: number | undefined;
    max_messageId?: number | undefined;
    max_createdAt?: number | undefined;
    max_organizationId?: number | undefined;
    max_reasons?: number | undefined;
    max_properties?: number | undefined;
    max_userProperties?: number | undefined;
    max_conversationId?: number | undefined;
    max_projectId?: number | undefined;
    max_integrationId?: number | undefined;
    max_updatedAt?: number | undefined;
    max_status?: number | undefined;
    "sum_properties.userId"?: number | undefined;
    "sum_properties.supportAgentName"?: number | undefined;
    "sum_userProperties.userId"?: number | undefined;
    "sum_userProperties.supportAgentName"?: number | undefined;
    "count_properties.userId"?: number | undefined;
    "count_properties.supportAgentName"?: number | undefined;
    "count_userProperties.userId"?: number | undefined;
    "count_userProperties.supportAgentName"?: number | undefined;
    "countDistinct_properties.userId"?: number | undefined;
    "countDistinct_properties.supportAgentName"?: number | undefined;
    "countDistinct_userProperties.userId"?: number | undefined;
    "countDistinct_userProperties.supportAgentName"?: number | undefined;
    "avg_properties.userId"?: number | undefined;
    "avg_properties.supportAgentName"?: number | undefined;
    "avg_userProperties.userId"?: number | undefined;
    "avg_userProperties.supportAgentName"?: number | undefined;
    "min_properties.userId"?: number | undefined;
    "min_properties.supportAgentName"?: number | undefined;
    "min_userProperties.userId"?: number | undefined;
    "min_userProperties.supportAgentName"?: number | undefined;
    "max_properties.userId"?: number | undefined;
    "max_properties.supportAgentName"?: number | undefined;
    "max_userProperties.userId"?: number | undefined;
    "max_userProperties.supportAgentName"?: number | undefined;
    "properties.userId"?: string | null | undefined;
    "properties.supportAgentName"?: string | null | undefined;
    "userProperties.userId"?: string | null | undefined;
    "userProperties.supportAgentName"?: string | null | undefined;
};
/** @internal */
export declare const FeedbackResultItem$outboundSchema: z.ZodType<FeedbackResultItem$Outbound, z.ZodTypeDef, FeedbackResultItem>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FeedbackResultItem$ {
    /** @deprecated use `FeedbackResultItem$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FeedbackResultItem, z.ZodTypeDef, unknown>;
    /** @deprecated use `FeedbackResultItem$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FeedbackResultItem$Outbound, z.ZodTypeDef, FeedbackResultItem>;
    /** @deprecated use `FeedbackResultItem$Outbound` instead. */
    type Outbound = FeedbackResultItem$Outbound;
}
export declare function feedbackResultItemToJSON(feedbackResultItem: FeedbackResultItem): string;
export declare function feedbackResultItemFromJSON(jsonString: string): SafeParseResult<FeedbackResultItem, SDKValidationError>;
/** @internal */
export declare const QueryFeedbackResponseData$inboundSchema: z.ZodType<QueryFeedbackResponseData, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryFeedbackResponseData$Outbound = {
    result: Array<FeedbackResultItem$Outbound>;
    total: number;
    pageSize: number;
    count: number;
};
/** @internal */
export declare const QueryFeedbackResponseData$outboundSchema: z.ZodType<QueryFeedbackResponseData$Outbound, z.ZodTypeDef, QueryFeedbackResponseData>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryFeedbackResponseData$ {
    /** @deprecated use `QueryFeedbackResponseData$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryFeedbackResponseData, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryFeedbackResponseData$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryFeedbackResponseData$Outbound, z.ZodTypeDef, QueryFeedbackResponseData>;
    /** @deprecated use `QueryFeedbackResponseData$Outbound` instead. */
    type Outbound = QueryFeedbackResponseData$Outbound;
}
export declare function queryFeedbackResponseDataToJSON(queryFeedbackResponseData: QueryFeedbackResponseData): string;
export declare function queryFeedbackResponseDataFromJSON(jsonString: string): SafeParseResult<QueryFeedbackResponseData, SDKValidationError>;
//# sourceMappingURL=queryfeedbackresponsedata.d.ts.map