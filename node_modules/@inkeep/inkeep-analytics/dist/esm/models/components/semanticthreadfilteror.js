/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { SemanticThreadFilter$inboundSchema, SemanticThreadFilter$outboundSchema, } from "./semanticthreadfilter.js";
/** @internal */
export const SemanticThreadFilterOROR$inboundSchema = z.lazy(() => SemanticThreadFilter$inboundSchema);
/** @internal */
export const SemanticThreadFilterOROR$outboundSchema = z.lazy(() => SemanticThreadFilter$outboundSchema);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SemanticThreadFilterOROR$;
(function (SemanticThreadFilterOROR$) {
    /** @deprecated use `SemanticThreadFilterOROR$inboundSchema` instead. */
    SemanticThreadFilterOROR$.inboundSchema = SemanticThreadFilterOROR$inboundSchema;
    /** @deprecated use `SemanticThreadFilterOROR$outboundSchema` instead. */
    SemanticThreadFilterOROR$.outboundSchema = SemanticThreadFilterOROR$outboundSchema;
})(SemanticThreadFilterOROR$ || (SemanticThreadFilterOROR$ = {}));
export function semanticThreadFilterORORToJSON(semanticThreadFilterOROR) {
    return JSON.stringify(SemanticThreadFilterOROR$outboundSchema.parse(semanticThreadFilterOROR));
}
export function semanticThreadFilterORORFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SemanticThreadFilterOROR$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SemanticThreadFilterOROR' from JSON`);
}
/** @internal */
export const SemanticThreadFilterOR$inboundSchema = z.object({
    or: z.array(z.lazy(() => SemanticThreadFilter$inboundSchema)),
});
/** @internal */
export const SemanticThreadFilterOR$outboundSchema = z.object({
    or: z.array(z.lazy(() => SemanticThreadFilter$outboundSchema)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SemanticThreadFilterOR$;
(function (SemanticThreadFilterOR$) {
    /** @deprecated use `SemanticThreadFilterOR$inboundSchema` instead. */
    SemanticThreadFilterOR$.inboundSchema = SemanticThreadFilterOR$inboundSchema;
    /** @deprecated use `SemanticThreadFilterOR$outboundSchema` instead. */
    SemanticThreadFilterOR$.outboundSchema = SemanticThreadFilterOR$outboundSchema;
})(SemanticThreadFilterOR$ || (SemanticThreadFilterOR$ = {}));
export function semanticThreadFilterORToJSON(semanticThreadFilterOR) {
    return JSON.stringify(SemanticThreadFilterOR$outboundSchema.parse(semanticThreadFilterOR));
}
export function semanticThreadFilterORFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SemanticThreadFilterOR$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SemanticThreadFilterOR' from JSON`);
}
//# sourceMappingURL=semanticthreadfilteror.js.map