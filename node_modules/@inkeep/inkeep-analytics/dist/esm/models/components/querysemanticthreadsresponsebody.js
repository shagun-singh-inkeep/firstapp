/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { QuerySemanticThreadsResponseData$inboundSchema, QuerySemanticThreadsResponseData$outboundSchema, } from "./querysemanticthreadsresponsedata.js";
/**
 * Status of the response
 */
export const QuerySemanticThreadsResponseBodyStatus = {
    Ok: "ok",
};
/** @internal */
export const QuerySemanticThreadsResponseBodyStatus$inboundSchema = z.nativeEnum(QuerySemanticThreadsResponseBodyStatus);
/** @internal */
export const QuerySemanticThreadsResponseBodyStatus$outboundSchema = QuerySemanticThreadsResponseBodyStatus$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var QuerySemanticThreadsResponseBodyStatus$;
(function (QuerySemanticThreadsResponseBodyStatus$) {
    /** @deprecated use `QuerySemanticThreadsResponseBodyStatus$inboundSchema` instead. */
    QuerySemanticThreadsResponseBodyStatus$.inboundSchema = QuerySemanticThreadsResponseBodyStatus$inboundSchema;
    /** @deprecated use `QuerySemanticThreadsResponseBodyStatus$outboundSchema` instead. */
    QuerySemanticThreadsResponseBodyStatus$.outboundSchema = QuerySemanticThreadsResponseBodyStatus$outboundSchema;
})(QuerySemanticThreadsResponseBodyStatus$ || (QuerySemanticThreadsResponseBodyStatus$ = {}));
/** @internal */
export const QuerySemanticThreadsResponseBody$inboundSchema = z.object({
    status: QuerySemanticThreadsResponseBodyStatus$inboundSchema,
    data: QuerySemanticThreadsResponseData$inboundSchema,
});
/** @internal */
export const QuerySemanticThreadsResponseBody$outboundSchema = z.object({
    status: QuerySemanticThreadsResponseBodyStatus$outboundSchema,
    data: QuerySemanticThreadsResponseData$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var QuerySemanticThreadsResponseBody$;
(function (QuerySemanticThreadsResponseBody$) {
    /** @deprecated use `QuerySemanticThreadsResponseBody$inboundSchema` instead. */
    QuerySemanticThreadsResponseBody$.inboundSchema = QuerySemanticThreadsResponseBody$inboundSchema;
    /** @deprecated use `QuerySemanticThreadsResponseBody$outboundSchema` instead. */
    QuerySemanticThreadsResponseBody$.outboundSchema = QuerySemanticThreadsResponseBody$outboundSchema;
})(QuerySemanticThreadsResponseBody$ || (QuerySemanticThreadsResponseBody$ = {}));
export function querySemanticThreadsResponseBodyToJSON(querySemanticThreadsResponseBody) {
    return JSON.stringify(QuerySemanticThreadsResponseBody$outboundSchema.parse(querySemanticThreadsResponseBody));
}
export function querySemanticThreadsResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => QuerySemanticThreadsResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QuerySemanticThreadsResponseBody' from JSON`);
}
//# sourceMappingURL=querysemanticthreadsresponsebody.js.map