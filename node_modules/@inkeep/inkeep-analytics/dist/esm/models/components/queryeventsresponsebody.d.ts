import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { QueryEventsResponseData, QueryEventsResponseData$Outbound } from "./queryeventsresponsedata.js";
/**
 * Status of the response
 */
export declare const QueryEventsResponseBodyStatus: {
    readonly Ok: "ok";
};
/**
 * Status of the response
 */
export type QueryEventsResponseBodyStatus = ClosedEnum<typeof QueryEventsResponseBodyStatus>;
/**
 * Response body for QueryEvents query endpoint
 */
export type QueryEventsResponseBody = {
    /**
     * Status of the response
     */
    status: QueryEventsResponseBodyStatus;
    /**
     * Data object containing QueryEvents query results and pagination information
     */
    data: QueryEventsResponseData;
};
/** @internal */
export declare const QueryEventsResponseBodyStatus$inboundSchema: z.ZodNativeEnum<typeof QueryEventsResponseBodyStatus>;
/** @internal */
export declare const QueryEventsResponseBodyStatus$outboundSchema: z.ZodNativeEnum<typeof QueryEventsResponseBodyStatus>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryEventsResponseBodyStatus$ {
    /** @deprecated use `QueryEventsResponseBodyStatus$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Ok: "ok";
    }>;
    /** @deprecated use `QueryEventsResponseBodyStatus$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Ok: "ok";
    }>;
}
/** @internal */
export declare const QueryEventsResponseBody$inboundSchema: z.ZodType<QueryEventsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryEventsResponseBody$Outbound = {
    status: string;
    data: QueryEventsResponseData$Outbound;
};
/** @internal */
export declare const QueryEventsResponseBody$outboundSchema: z.ZodType<QueryEventsResponseBody$Outbound, z.ZodTypeDef, QueryEventsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryEventsResponseBody$ {
    /** @deprecated use `QueryEventsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryEventsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryEventsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryEventsResponseBody$Outbound, z.ZodTypeDef, QueryEventsResponseBody>;
    /** @deprecated use `QueryEventsResponseBody$Outbound` instead. */
    type Outbound = QueryEventsResponseBody$Outbound;
}
export declare function queryEventsResponseBodyToJSON(queryEventsResponseBody: QueryEventsResponseBody): string;
export declare function queryEventsResponseBodyFromJSON(jsonString: string): SafeParseResult<QueryEventsResponseBody, SDKValidationError>;
//# sourceMappingURL=queryeventsresponsebody.d.ts.map