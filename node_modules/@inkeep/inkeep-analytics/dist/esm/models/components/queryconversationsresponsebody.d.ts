import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { QueryConversationsResponseData, QueryConversationsResponseData$Outbound } from "./queryconversationsresponsedata.js";
/**
 * Status of the response
 */
export declare const Status: {
    readonly Ok: "ok";
};
/**
 * Status of the response
 */
export type Status = ClosedEnum<typeof Status>;
/**
 * Response body for QueryConversations query endpoint
 */
export type QueryConversationsResponseBody = {
    /**
     * Status of the response
     */
    status: Status;
    /**
     * Data object containing QueryConversations query results and pagination information
     */
    data: QueryConversationsResponseData;
};
/** @internal */
export declare const Status$inboundSchema: z.ZodNativeEnum<typeof Status>;
/** @internal */
export declare const Status$outboundSchema: z.ZodNativeEnum<typeof Status>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Status$ {
    /** @deprecated use `Status$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Ok: "ok";
    }>;
    /** @deprecated use `Status$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Ok: "ok";
    }>;
}
/** @internal */
export declare const QueryConversationsResponseBody$inboundSchema: z.ZodType<QueryConversationsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryConversationsResponseBody$Outbound = {
    status: string;
    data: QueryConversationsResponseData$Outbound;
};
/** @internal */
export declare const QueryConversationsResponseBody$outboundSchema: z.ZodType<QueryConversationsResponseBody$Outbound, z.ZodTypeDef, QueryConversationsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryConversationsResponseBody$ {
    /** @deprecated use `QueryConversationsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryConversationsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryConversationsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryConversationsResponseBody$Outbound, z.ZodTypeDef, QueryConversationsResponseBody>;
    /** @deprecated use `QueryConversationsResponseBody$Outbound` instead. */
    type Outbound = QueryConversationsResponseBody$Outbound;
}
export declare function queryConversationsResponseBodyToJSON(queryConversationsResponseBody: QueryConversationsResponseBody): string;
export declare function queryConversationsResponseBodyFromJSON(jsonString: string): SafeParseResult<QueryConversationsResponseBody, SDKValidationError>;
//# sourceMappingURL=queryconversationsresponsebody.d.ts.map