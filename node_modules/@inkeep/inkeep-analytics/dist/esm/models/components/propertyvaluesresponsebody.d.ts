import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type PropertyValuesResponseBody = {
    results: Array<string>;
};
/** @internal */
export declare const PropertyValuesResponseBody$inboundSchema: z.ZodType<PropertyValuesResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PropertyValuesResponseBody$Outbound = {
    results: Array<string>;
};
/** @internal */
export declare const PropertyValuesResponseBody$outboundSchema: z.ZodType<PropertyValuesResponseBody$Outbound, z.ZodTypeDef, PropertyValuesResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PropertyValuesResponseBody$ {
    /** @deprecated use `PropertyValuesResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PropertyValuesResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PropertyValuesResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PropertyValuesResponseBody$Outbound, z.ZodTypeDef, PropertyValuesResponseBody>;
    /** @deprecated use `PropertyValuesResponseBody$Outbound` instead. */
    type Outbound = PropertyValuesResponseBody$Outbound;
}
export declare function propertyValuesResponseBodyToJSON(propertyValuesResponseBody: PropertyValuesResponseBody): string;
export declare function propertyValuesResponseBodyFromJSON(jsonString: string): SafeParseResult<PropertyValuesResponseBody, SDKValidationError>;
//# sourceMappingURL=propertyvaluesresponsebody.d.ts.map