/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { SemanticThreadFilter$inboundSchema, SemanticThreadFilter$outboundSchema, } from "./semanticthreadfilter.js";
/** @internal */
export const SemanticThreadFilterANDAND$inboundSchema = z.lazy(() => SemanticThreadFilter$inboundSchema);
/** @internal */
export const SemanticThreadFilterANDAND$outboundSchema = z.lazy(() => SemanticThreadFilter$outboundSchema);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SemanticThreadFilterANDAND$;
(function (SemanticThreadFilterANDAND$) {
    /** @deprecated use `SemanticThreadFilterANDAND$inboundSchema` instead. */
    SemanticThreadFilterANDAND$.inboundSchema = SemanticThreadFilterANDAND$inboundSchema;
    /** @deprecated use `SemanticThreadFilterANDAND$outboundSchema` instead. */
    SemanticThreadFilterANDAND$.outboundSchema = SemanticThreadFilterANDAND$outboundSchema;
})(SemanticThreadFilterANDAND$ || (SemanticThreadFilterANDAND$ = {}));
export function semanticThreadFilterANDANDToJSON(semanticThreadFilterANDAND) {
    return JSON.stringify(SemanticThreadFilterANDAND$outboundSchema.parse(semanticThreadFilterANDAND));
}
export function semanticThreadFilterANDANDFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SemanticThreadFilterANDAND$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SemanticThreadFilterANDAND' from JSON`);
}
/** @internal */
export const SemanticThreadFilterAND$inboundSchema = z.object({
    and: z.array(z.lazy(() => SemanticThreadFilter$inboundSchema)),
});
/** @internal */
export const SemanticThreadFilterAND$outboundSchema = z.object({
    and: z.array(z.lazy(() => SemanticThreadFilter$outboundSchema)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SemanticThreadFilterAND$;
(function (SemanticThreadFilterAND$) {
    /** @deprecated use `SemanticThreadFilterAND$inboundSchema` instead. */
    SemanticThreadFilterAND$.inboundSchema = SemanticThreadFilterAND$inboundSchema;
    /** @deprecated use `SemanticThreadFilterAND$outboundSchema` instead. */
    SemanticThreadFilterAND$.outboundSchema = SemanticThreadFilterAND$outboundSchema;
})(SemanticThreadFilterAND$ || (SemanticThreadFilterAND$ = {}));
export function semanticThreadFilterANDToJSON(semanticThreadFilterAND) {
    return JSON.stringify(SemanticThreadFilterAND$outboundSchema.parse(semanticThreadFilterAND));
}
export function semanticThreadFilterANDFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SemanticThreadFilterAND$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SemanticThreadFilterAND' from JSON`);
}
//# sourceMappingURL=semanticthreadfilterand.js.map