/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../lib/schemas.js";
export const CreateSupportTicketConversationType = {
    SupportTicket: "support_ticket",
};
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export const CreateSupportTicketConversationUserType = {
    User: "user",
    Member: "member",
};
export const CreateSupportTicketConversationVisibility = {
    Private: "private",
    Public: "public",
};
export const CreateSupportTicketConversationType1 = {
    Documentation: "documentation",
    Site: "site",
    DiscoursePost: "discourse_post",
    GithubIssue: "github_issue",
    GithubDiscussion: "github_discussion",
    StackoverflowQuestion: "stackoverflow_question",
    DiscordForumPost: "discord_forum_post",
    DiscordMessage: "discord_message",
    CustomQuestionAnswer: "custom_question_answer",
};
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export const CreateSupportTicketConversationMessagesUserType = {
    User: "user",
    Member: "member",
};
/** @internal */
export const CreateSupportTicketConversationType$inboundSchema = z.nativeEnum(CreateSupportTicketConversationType);
/** @internal */
export const CreateSupportTicketConversationType$outboundSchema = CreateSupportTicketConversationType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationType$;
(function (CreateSupportTicketConversationType$) {
    /** @deprecated use `CreateSupportTicketConversationType$inboundSchema` instead. */
    CreateSupportTicketConversationType$.inboundSchema = CreateSupportTicketConversationType$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationType$outboundSchema` instead. */
    CreateSupportTicketConversationType$.outboundSchema = CreateSupportTicketConversationType$outboundSchema;
})(CreateSupportTicketConversationType$ || (CreateSupportTicketConversationType$ = {}));
/** @internal */
export const CreateSupportTicketConversationId$inboundSchema = z.union([z.string(), z.number()]);
/** @internal */
export const CreateSupportTicketConversationId$outboundSchema = z.union([z.string(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationId$;
(function (CreateSupportTicketConversationId$) {
    /** @deprecated use `CreateSupportTicketConversationId$inboundSchema` instead. */
    CreateSupportTicketConversationId$.inboundSchema = CreateSupportTicketConversationId$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationId$outboundSchema` instead. */
    CreateSupportTicketConversationId$.outboundSchema = CreateSupportTicketConversationId$outboundSchema;
})(CreateSupportTicketConversationId$ || (CreateSupportTicketConversationId$ = {}));
export function createSupportTicketConversationIdToJSON(createSupportTicketConversationId) {
    return JSON.stringify(CreateSupportTicketConversationId$outboundSchema.parse(createSupportTicketConversationId));
}
export function createSupportTicketConversationIdFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSupportTicketConversationId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportTicketConversationId' from JSON`);
}
/** @internal */
export const CreateSupportTicketConversationUserId$inboundSchema = z.union([z.string(), z.number()]);
/** @internal */
export const CreateSupportTicketConversationUserId$outboundSchema = z.union([z.string(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationUserId$;
(function (CreateSupportTicketConversationUserId$) {
    /** @deprecated use `CreateSupportTicketConversationUserId$inboundSchema` instead. */
    CreateSupportTicketConversationUserId$.inboundSchema = CreateSupportTicketConversationUserId$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationUserId$outboundSchema` instead. */
    CreateSupportTicketConversationUserId$.outboundSchema = CreateSupportTicketConversationUserId$outboundSchema;
})(CreateSupportTicketConversationUserId$ || (CreateSupportTicketConversationUserId$ = {}));
export function createSupportTicketConversationUserIdToJSON(createSupportTicketConversationUserId) {
    return JSON.stringify(CreateSupportTicketConversationUserId$outboundSchema.parse(createSupportTicketConversationUserId));
}
export function createSupportTicketConversationUserIdFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSupportTicketConversationUserId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportTicketConversationUserId' from JSON`);
}
/** @internal */
export const CreateSupportTicketConversationUserType$inboundSchema = z
    .nativeEnum(CreateSupportTicketConversationUserType);
/** @internal */
export const CreateSupportTicketConversationUserType$outboundSchema = CreateSupportTicketConversationUserType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationUserType$;
(function (CreateSupportTicketConversationUserType$) {
    /** @deprecated use `CreateSupportTicketConversationUserType$inboundSchema` instead. */
    CreateSupportTicketConversationUserType$.inboundSchema = CreateSupportTicketConversationUserType$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationUserType$outboundSchema` instead. */
    CreateSupportTicketConversationUserType$.outboundSchema = CreateSupportTicketConversationUserType$outboundSchema;
})(CreateSupportTicketConversationUserType$ || (CreateSupportTicketConversationUserType$ = {}));
/** @internal */
export const CreateSupportTicketConversationUserProperties$inboundSchema = collectExtraKeys$(z.object({
    id: z.nullable(z.union([z.string(), z.number()])).optional(),
    identificationType: z.nullable(z.string()).optional(),
    userId: z.nullable(z.union([z.string(), z.number()])).optional(),
    supportAgentName: z.nullable(z.string()).optional(),
    userType: z.nullable(CreateSupportTicketConversationUserType$inboundSchema).optional(),
}).catchall(z.any()), "additionalProperties", true);
/** @internal */
export const CreateSupportTicketConversationUserProperties$outboundSchema = z.object({
    id: z.nullable(z.union([z.string(), z.number()])).optional(),
    identificationType: z.nullable(z.string()).optional(),
    userId: z.nullable(z.union([z.string(), z.number()])).optional(),
    supportAgentName: z.nullable(z.string()).optional(),
    userType: z.nullable(CreateSupportTicketConversationUserType$outboundSchema)
        .optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationUserProperties$;
(function (CreateSupportTicketConversationUserProperties$) {
    /** @deprecated use `CreateSupportTicketConversationUserProperties$inboundSchema` instead. */
    CreateSupportTicketConversationUserProperties$.inboundSchema = CreateSupportTicketConversationUserProperties$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationUserProperties$outboundSchema` instead. */
    CreateSupportTicketConversationUserProperties$.outboundSchema = CreateSupportTicketConversationUserProperties$outboundSchema;
})(CreateSupportTicketConversationUserProperties$ || (CreateSupportTicketConversationUserProperties$ = {}));
export function createSupportTicketConversationUserPropertiesToJSON(createSupportTicketConversationUserProperties) {
    return JSON.stringify(CreateSupportTicketConversationUserProperties$outboundSchema.parse(createSupportTicketConversationUserProperties));
}
export function createSupportTicketConversationUserPropertiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSupportTicketConversationUserProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportTicketConversationUserProperties' from JSON`);
}
/** @internal */
export const CreateSupportTicketConversationVisibility$inboundSchema = z
    .nativeEnum(CreateSupportTicketConversationVisibility);
/** @internal */
export const CreateSupportTicketConversationVisibility$outboundSchema = CreateSupportTicketConversationVisibility$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationVisibility$;
(function (CreateSupportTicketConversationVisibility$) {
    /** @deprecated use `CreateSupportTicketConversationVisibility$inboundSchema` instead. */
    CreateSupportTicketConversationVisibility$.inboundSchema = CreateSupportTicketConversationVisibility$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationVisibility$outboundSchema` instead. */
    CreateSupportTicketConversationVisibility$.outboundSchema = CreateSupportTicketConversationVisibility$outboundSchema;
})(CreateSupportTicketConversationVisibility$ || (CreateSupportTicketConversationVisibility$ = {}));
/** @internal */
export const CreateSupportTicketConversationType1$inboundSchema = z.nativeEnum(CreateSupportTicketConversationType1);
/** @internal */
export const CreateSupportTicketConversationType1$outboundSchema = CreateSupportTicketConversationType1$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationType1$;
(function (CreateSupportTicketConversationType1$) {
    /** @deprecated use `CreateSupportTicketConversationType1$inboundSchema` instead. */
    CreateSupportTicketConversationType1$.inboundSchema = CreateSupportTicketConversationType1$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationType1$outboundSchema` instead. */
    CreateSupportTicketConversationType1$.outboundSchema = CreateSupportTicketConversationType1$outboundSchema;
})(CreateSupportTicketConversationType1$ || (CreateSupportTicketConversationType1$ = {}));
/** @internal */
export const CreateSupportTicketConversationMessagesType$inboundSchema = z.union([CreateSupportTicketConversationType1$inboundSchema, z.string()]);
/** @internal */
export const CreateSupportTicketConversationMessagesType$outboundSchema = z.union([
    CreateSupportTicketConversationType1$outboundSchema,
    z.string(),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationMessagesType$;
(function (CreateSupportTicketConversationMessagesType$) {
    /** @deprecated use `CreateSupportTicketConversationMessagesType$inboundSchema` instead. */
    CreateSupportTicketConversationMessagesType$.inboundSchema = CreateSupportTicketConversationMessagesType$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationMessagesType$outboundSchema` instead. */
    CreateSupportTicketConversationMessagesType$.outboundSchema = CreateSupportTicketConversationMessagesType$outboundSchema;
})(CreateSupportTicketConversationMessagesType$ || (CreateSupportTicketConversationMessagesType$ = {}));
export function createSupportTicketConversationMessagesTypeToJSON(createSupportTicketConversationMessagesType) {
    return JSON.stringify(CreateSupportTicketConversationMessagesType$outboundSchema.parse(createSupportTicketConversationMessagesType));
}
export function createSupportTicketConversationMessagesTypeFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSupportTicketConversationMessagesType$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportTicketConversationMessagesType' from JSON`);
}
/** @internal */
export const CreateSupportTicketConversationLinks$inboundSchema = z.object({
    label: z.nullable(z.string()).optional(),
    url: z.string(),
    title: z.nullable(z.string()).optional(),
    description: z.nullable(z.string()).optional(),
    type: z.nullable(z.union([CreateSupportTicketConversationType1$inboundSchema, z.string()])).optional(),
    breadcrumbs: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const CreateSupportTicketConversationLinks$outboundSchema = z.object({
    label: z.nullable(z.string()).optional(),
    url: z.string(),
    title: z.nullable(z.string()).optional(),
    description: z.nullable(z.string()).optional(),
    type: z.nullable(z.union([CreateSupportTicketConversationType1$outboundSchema, z.string()])).optional(),
    breadcrumbs: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationLinks$;
(function (CreateSupportTicketConversationLinks$) {
    /** @deprecated use `CreateSupportTicketConversationLinks$inboundSchema` instead. */
    CreateSupportTicketConversationLinks$.inboundSchema = CreateSupportTicketConversationLinks$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationLinks$outboundSchema` instead. */
    CreateSupportTicketConversationLinks$.outboundSchema = CreateSupportTicketConversationLinks$outboundSchema;
})(CreateSupportTicketConversationLinks$ || (CreateSupportTicketConversationLinks$ = {}));
export function createSupportTicketConversationLinksToJSON(createSupportTicketConversationLinks) {
    return JSON.stringify(CreateSupportTicketConversationLinks$outboundSchema.parse(createSupportTicketConversationLinks));
}
export function createSupportTicketConversationLinksFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSupportTicketConversationLinks$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportTicketConversationLinks' from JSON`);
}
/** @internal */
export const CreateSupportTicketConversationMessagesId$inboundSchema = z.union([z.string(), z.number()]);
/** @internal */
export const CreateSupportTicketConversationMessagesId$outboundSchema = z.union([z.string(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationMessagesId$;
(function (CreateSupportTicketConversationMessagesId$) {
    /** @deprecated use `CreateSupportTicketConversationMessagesId$inboundSchema` instead. */
    CreateSupportTicketConversationMessagesId$.inboundSchema = CreateSupportTicketConversationMessagesId$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationMessagesId$outboundSchema` instead. */
    CreateSupportTicketConversationMessagesId$.outboundSchema = CreateSupportTicketConversationMessagesId$outboundSchema;
})(CreateSupportTicketConversationMessagesId$ || (CreateSupportTicketConversationMessagesId$ = {}));
export function createSupportTicketConversationMessagesIdToJSON(createSupportTicketConversationMessagesId) {
    return JSON.stringify(CreateSupportTicketConversationMessagesId$outboundSchema.parse(createSupportTicketConversationMessagesId));
}
export function createSupportTicketConversationMessagesIdFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSupportTicketConversationMessagesId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportTicketConversationMessagesId' from JSON`);
}
/** @internal */
export const CreateSupportTicketConversationMessagesUserId$inboundSchema = z.union([z.string(), z.number()]);
/** @internal */
export const CreateSupportTicketConversationMessagesUserId$outboundSchema = z.union([z.string(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationMessagesUserId$;
(function (CreateSupportTicketConversationMessagesUserId$) {
    /** @deprecated use `CreateSupportTicketConversationMessagesUserId$inboundSchema` instead. */
    CreateSupportTicketConversationMessagesUserId$.inboundSchema = CreateSupportTicketConversationMessagesUserId$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationMessagesUserId$outboundSchema` instead. */
    CreateSupportTicketConversationMessagesUserId$.outboundSchema = CreateSupportTicketConversationMessagesUserId$outboundSchema;
})(CreateSupportTicketConversationMessagesUserId$ || (CreateSupportTicketConversationMessagesUserId$ = {}));
export function createSupportTicketConversationMessagesUserIdToJSON(createSupportTicketConversationMessagesUserId) {
    return JSON.stringify(CreateSupportTicketConversationMessagesUserId$outboundSchema.parse(createSupportTicketConversationMessagesUserId));
}
export function createSupportTicketConversationMessagesUserIdFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSupportTicketConversationMessagesUserId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportTicketConversationMessagesUserId' from JSON`);
}
/** @internal */
export const CreateSupportTicketConversationMessagesUserType$inboundSchema = z
    .nativeEnum(CreateSupportTicketConversationMessagesUserType);
/** @internal */
export const CreateSupportTicketConversationMessagesUserType$outboundSchema = CreateSupportTicketConversationMessagesUserType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationMessagesUserType$;
(function (CreateSupportTicketConversationMessagesUserType$) {
    /** @deprecated use `CreateSupportTicketConversationMessagesUserType$inboundSchema` instead. */
    CreateSupportTicketConversationMessagesUserType$.inboundSchema = CreateSupportTicketConversationMessagesUserType$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationMessagesUserType$outboundSchema` instead. */
    CreateSupportTicketConversationMessagesUserType$.outboundSchema = CreateSupportTicketConversationMessagesUserType$outboundSchema;
})(CreateSupportTicketConversationMessagesUserType$ || (CreateSupportTicketConversationMessagesUserType$ = {}));
/** @internal */
export const CreateSupportTicketConversationMessagesUserProperties$inboundSchema = collectExtraKeys$(z.object({
    id: z.nullable(z.union([z.string(), z.number()])).optional(),
    identificationType: z.nullable(z.string()).optional(),
    userId: z.nullable(z.union([z.string(), z.number()])).optional(),
    supportAgentName: z.nullable(z.string()).optional(),
    userType: z.nullable(CreateSupportTicketConversationMessagesUserType$inboundSchema).optional(),
}).catchall(z.any()), "additionalProperties", true);
/** @internal */
export const CreateSupportTicketConversationMessagesUserProperties$outboundSchema = z.object({
    id: z.nullable(z.union([z.string(), z.number()])).optional(),
    identificationType: z.nullable(z.string()).optional(),
    userId: z.nullable(z.union([z.string(), z.number()])).optional(),
    supportAgentName: z.nullable(z.string()).optional(),
    userType: z.nullable(CreateSupportTicketConversationMessagesUserType$outboundSchema).optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationMessagesUserProperties$;
(function (CreateSupportTicketConversationMessagesUserProperties$) {
    /** @deprecated use `CreateSupportTicketConversationMessagesUserProperties$inboundSchema` instead. */
    CreateSupportTicketConversationMessagesUserProperties$.inboundSchema = CreateSupportTicketConversationMessagesUserProperties$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationMessagesUserProperties$outboundSchema` instead. */
    CreateSupportTicketConversationMessagesUserProperties$.outboundSchema = CreateSupportTicketConversationMessagesUserProperties$outboundSchema;
})(CreateSupportTicketConversationMessagesUserProperties$ || (CreateSupportTicketConversationMessagesUserProperties$ = {}));
export function createSupportTicketConversationMessagesUserPropertiesToJSON(createSupportTicketConversationMessagesUserProperties) {
    return JSON.stringify(CreateSupportTicketConversationMessagesUserProperties$outboundSchema.parse(createSupportTicketConversationMessagesUserProperties));
}
export function createSupportTicketConversationMessagesUserPropertiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSupportTicketConversationMessagesUserProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportTicketConversationMessagesUserProperties' from JSON`);
}
/** @internal */
export const CreateSupportTicketConversationMessages$inboundSchema = z.object({
    id: z.string().optional(),
    externalId: z.nullable(z.string()).optional(),
    externalUrl: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    updatedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    role: z.string(),
    content: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    links: z.nullable(z.array(z.lazy(() => CreateSupportTicketConversationLinks$inboundSchema))).optional(),
    properties: z.nullable(z.record(z.any())).optional(),
    userProperties: z.nullable(z.lazy(() => CreateSupportTicketConversationMessagesUserProperties$inboundSchema)).optional(),
});
/** @internal */
export const CreateSupportTicketConversationMessages$outboundSchema = z.object({
    id: z.string().optional(),
    externalId: z.nullable(z.string()).optional(),
    externalUrl: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    updatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    role: z.string(),
    content: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    links: z.nullable(z.array(z.lazy(() => CreateSupportTicketConversationLinks$outboundSchema))).optional(),
    properties: z.nullable(z.record(z.any())).optional(),
    userProperties: z.nullable(z.lazy(() => CreateSupportTicketConversationMessagesUserProperties$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversationMessages$;
(function (CreateSupportTicketConversationMessages$) {
    /** @deprecated use `CreateSupportTicketConversationMessages$inboundSchema` instead. */
    CreateSupportTicketConversationMessages$.inboundSchema = CreateSupportTicketConversationMessages$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversationMessages$outboundSchema` instead. */
    CreateSupportTicketConversationMessages$.outboundSchema = CreateSupportTicketConversationMessages$outboundSchema;
})(CreateSupportTicketConversationMessages$ || (CreateSupportTicketConversationMessages$ = {}));
export function createSupportTicketConversationMessagesToJSON(createSupportTicketConversationMessages) {
    return JSON.stringify(CreateSupportTicketConversationMessages$outboundSchema.parse(createSupportTicketConversationMessages));
}
export function createSupportTicketConversationMessagesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSupportTicketConversationMessages$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportTicketConversationMessages' from JSON`);
}
/** @internal */
export const CreateSupportTicketConversation$inboundSchema = z.object({
    id: z.string().optional(),
    externalId: z.nullable(z.string()).optional(),
    externalUrl: z.nullable(z.string()).optional(),
    type: CreateSupportTicketConversationType$inboundSchema,
    supportTicketConversationId: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    updatedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    projectId: z.nullable(z.string()).optional(),
    integrationId: z.nullable(z.string()).optional(),
    properties: z.nullable(z.record(z.any())).optional(),
    userProperties: z.nullable(z.lazy(() => CreateSupportTicketConversationUserProperties$inboundSchema)).optional(),
    tags: z.nullable(z.array(z.string())).optional(),
    visibility: z.nullable(CreateSupportTicketConversationVisibility$inboundSchema).optional(),
    messages: z.array(z.lazy(() => CreateSupportTicketConversationMessages$inboundSchema)),
});
/** @internal */
export const CreateSupportTicketConversation$outboundSchema = z.object({
    id: z.string().optional(),
    externalId: z.nullable(z.string()).optional(),
    externalUrl: z.nullable(z.string()).optional(),
    type: CreateSupportTicketConversationType$outboundSchema,
    supportTicketConversationId: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    updatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    projectId: z.nullable(z.string()).optional(),
    integrationId: z.nullable(z.string()).optional(),
    properties: z.nullable(z.record(z.any())).optional(),
    userProperties: z.nullable(z.lazy(() => CreateSupportTicketConversationUserProperties$outboundSchema)).optional(),
    tags: z.nullable(z.array(z.string())).optional(),
    visibility: z.nullable(CreateSupportTicketConversationVisibility$outboundSchema).optional(),
    messages: z.array(z.lazy(() => CreateSupportTicketConversationMessages$outboundSchema)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSupportTicketConversation$;
(function (CreateSupportTicketConversation$) {
    /** @deprecated use `CreateSupportTicketConversation$inboundSchema` instead. */
    CreateSupportTicketConversation$.inboundSchema = CreateSupportTicketConversation$inboundSchema;
    /** @deprecated use `CreateSupportTicketConversation$outboundSchema` instead. */
    CreateSupportTicketConversation$.outboundSchema = CreateSupportTicketConversation$outboundSchema;
})(CreateSupportTicketConversation$ || (CreateSupportTicketConversation$ = {}));
export function createSupportTicketConversationToJSON(createSupportTicketConversation) {
    return JSON.stringify(CreateSupportTicketConversation$outboundSchema.parse(createSupportTicketConversation));
}
export function createSupportTicketConversationFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSupportTicketConversation$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportTicketConversation' from JSON`);
}
//# sourceMappingURL=createsupportticketconversation.js.map