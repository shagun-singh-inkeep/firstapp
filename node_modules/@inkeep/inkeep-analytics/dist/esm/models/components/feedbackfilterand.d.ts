import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { FeedbackFilter, FeedbackFilter$Outbound } from "./feedbackfilter.js";
export type FeedbackFilterANDAND = FeedbackFilter;
/**
 * FeedbackFilter AND operator
 */
export type FeedbackFilterAND = {
    /**
     * FeedbackFilter AND condition
     */
    and: Array<FeedbackFilter>;
};
/** @internal */
export declare const FeedbackFilterANDAND$inboundSchema: z.ZodType<FeedbackFilterANDAND, z.ZodTypeDef, unknown>;
/** @internal */
export type FeedbackFilterANDAND$Outbound = FeedbackFilter$Outbound;
/** @internal */
export declare const FeedbackFilterANDAND$outboundSchema: z.ZodType<FeedbackFilterANDAND$Outbound, z.ZodTypeDef, FeedbackFilterANDAND>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FeedbackFilterANDAND$ {
    /** @deprecated use `FeedbackFilterANDAND$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FeedbackFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `FeedbackFilterANDAND$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FeedbackFilter$Outbound, z.ZodTypeDef, FeedbackFilter>;
    /** @deprecated use `FeedbackFilterANDAND$Outbound` instead. */
    type Outbound = FeedbackFilterANDAND$Outbound;
}
export declare function feedbackFilterANDANDToJSON(feedbackFilterANDAND: FeedbackFilterANDAND): string;
export declare function feedbackFilterANDANDFromJSON(jsonString: string): SafeParseResult<FeedbackFilterANDAND, SDKValidationError>;
/** @internal */
export declare const FeedbackFilterAND$inboundSchema: z.ZodType<FeedbackFilterAND, z.ZodTypeDef, unknown>;
/** @internal */
export type FeedbackFilterAND$Outbound = {
    and: Array<FeedbackFilter$Outbound>;
};
/** @internal */
export declare const FeedbackFilterAND$outboundSchema: z.ZodType<FeedbackFilterAND$Outbound, z.ZodTypeDef, FeedbackFilterAND>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FeedbackFilterAND$ {
    /** @deprecated use `FeedbackFilterAND$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FeedbackFilterAND, z.ZodTypeDef, unknown>;
    /** @deprecated use `FeedbackFilterAND$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FeedbackFilterAND$Outbound, z.ZodTypeDef, FeedbackFilterAND>;
    /** @deprecated use `FeedbackFilterAND$Outbound` instead. */
    type Outbound = FeedbackFilterAND$Outbound;
}
export declare function feedbackFilterANDToJSON(feedbackFilterAND: FeedbackFilterAND): string;
export declare function feedbackFilterANDFromJSON(jsonString: string): SafeParseResult<FeedbackFilterAND, SDKValidationError>;
//# sourceMappingURL=feedbackfilterand.d.ts.map