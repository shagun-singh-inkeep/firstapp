/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const PropertyValuesResponseBody$inboundSchema = z.object({
    results: z.array(z.string()),
});
/** @internal */
export const PropertyValuesResponseBody$outboundSchema = z.object({
    results: z.array(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PropertyValuesResponseBody$;
(function (PropertyValuesResponseBody$) {
    /** @deprecated use `PropertyValuesResponseBody$inboundSchema` instead. */
    PropertyValuesResponseBody$.inboundSchema = PropertyValuesResponseBody$inboundSchema;
    /** @deprecated use `PropertyValuesResponseBody$outboundSchema` instead. */
    PropertyValuesResponseBody$.outboundSchema = PropertyValuesResponseBody$outboundSchema;
})(PropertyValuesResponseBody$ || (PropertyValuesResponseBody$ = {}));
export function propertyValuesResponseBodyToJSON(propertyValuesResponseBody) {
    return JSON.stringify(PropertyValuesResponseBody$outboundSchema.parse(propertyValuesResponseBody));
}
export function propertyValuesResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PropertyValuesResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PropertyValuesResponseBody' from JSON`);
}
//# sourceMappingURL=propertyvaluesresponsebody.js.map