/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
export const FeedbackSimpleFieldSelectionType = {
    Field: "field",
};
export const FeedbackSimpleFieldSelectionField = {
    Id: "id",
    Type: "type",
    MessageId: "messageId",
    CreatedAt: "createdAt",
    OrganizationId: "organizationId",
    Reasons: "reasons",
    Properties: "properties",
    UserProperties: "userProperties",
    ConversationId: "conversationId",
    ProjectId: "projectId",
    IntegrationId: "integrationId",
    UpdatedAt: "updatedAt",
    Status: "status",
};
/** @internal */
export const FeedbackSimpleFieldSelectionType$inboundSchema = z.nativeEnum(FeedbackSimpleFieldSelectionType);
/** @internal */
export const FeedbackSimpleFieldSelectionType$outboundSchema = FeedbackSimpleFieldSelectionType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FeedbackSimpleFieldSelectionType$;
(function (FeedbackSimpleFieldSelectionType$) {
    /** @deprecated use `FeedbackSimpleFieldSelectionType$inboundSchema` instead. */
    FeedbackSimpleFieldSelectionType$.inboundSchema = FeedbackSimpleFieldSelectionType$inboundSchema;
    /** @deprecated use `FeedbackSimpleFieldSelectionType$outboundSchema` instead. */
    FeedbackSimpleFieldSelectionType$.outboundSchema = FeedbackSimpleFieldSelectionType$outboundSchema;
})(FeedbackSimpleFieldSelectionType$ || (FeedbackSimpleFieldSelectionType$ = {}));
/** @internal */
export const FeedbackSimpleFieldSelectionField$inboundSchema = z.nativeEnum(FeedbackSimpleFieldSelectionField);
/** @internal */
export const FeedbackSimpleFieldSelectionField$outboundSchema = FeedbackSimpleFieldSelectionField$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FeedbackSimpleFieldSelectionField$;
(function (FeedbackSimpleFieldSelectionField$) {
    /** @deprecated use `FeedbackSimpleFieldSelectionField$inboundSchema` instead. */
    FeedbackSimpleFieldSelectionField$.inboundSchema = FeedbackSimpleFieldSelectionField$inboundSchema;
    /** @deprecated use `FeedbackSimpleFieldSelectionField$outboundSchema` instead. */
    FeedbackSimpleFieldSelectionField$.outboundSchema = FeedbackSimpleFieldSelectionField$outboundSchema;
})(FeedbackSimpleFieldSelectionField$ || (FeedbackSimpleFieldSelectionField$ = {}));
/** @internal */
export const FeedbackSimpleFieldSelection$inboundSchema = z.object({
    type: FeedbackSimpleFieldSelectionType$inboundSchema,
    field: FeedbackSimpleFieldSelectionField$inboundSchema,
    path: z.array(z.string()).optional(),
});
/** @internal */
export const FeedbackSimpleFieldSelection$outboundSchema = z.object({
    type: FeedbackSimpleFieldSelectionType$outboundSchema,
    field: FeedbackSimpleFieldSelectionField$outboundSchema,
    path: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FeedbackSimpleFieldSelection$;
(function (FeedbackSimpleFieldSelection$) {
    /** @deprecated use `FeedbackSimpleFieldSelection$inboundSchema` instead. */
    FeedbackSimpleFieldSelection$.inboundSchema = FeedbackSimpleFieldSelection$inboundSchema;
    /** @deprecated use `FeedbackSimpleFieldSelection$outboundSchema` instead. */
    FeedbackSimpleFieldSelection$.outboundSchema = FeedbackSimpleFieldSelection$outboundSchema;
})(FeedbackSimpleFieldSelection$ || (FeedbackSimpleFieldSelection$ = {}));
export function feedbackSimpleFieldSelectionToJSON(feedbackSimpleFieldSelection) {
    return JSON.stringify(FeedbackSimpleFieldSelection$outboundSchema.parse(feedbackSimpleFieldSelection));
}
export function feedbackSimpleFieldSelectionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FeedbackSimpleFieldSelection$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeedbackSimpleFieldSelection' from JSON`);
}
//# sourceMappingURL=feedbacksimplefieldselection.js.map