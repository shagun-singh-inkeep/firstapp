/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { FeedbackFilter$inboundSchema, FeedbackFilter$outboundSchema, } from "./feedbackfilter.js";
import { FeedbackGroupBy$inboundSchema, FeedbackGroupBy$outboundSchema, } from "./feedbackgroupby.js";
import { FeedbackOrderBy$inboundSchema, FeedbackOrderBy$outboundSchema, } from "./feedbackorderby.js";
import { FeedbackSelection$inboundSchema, FeedbackSelection$outboundSchema, } from "./feedbackselection.js";
/** @internal */
export const QueryFeedbackRequestBody$inboundSchema = z.object({
    select: z.array(FeedbackSelection$inboundSchema).optional(),
    groupBy: z.array(FeedbackGroupBy$inboundSchema).optional(),
    where: FeedbackFilter$inboundSchema.optional(),
    orderBy: z.array(FeedbackOrderBy$inboundSchema).optional(),
    notes: z.string().optional(),
});
/** @internal */
export const QueryFeedbackRequestBody$outboundSchema = z.object({
    select: z.array(FeedbackSelection$outboundSchema).optional(),
    groupBy: z.array(FeedbackGroupBy$outboundSchema).optional(),
    where: FeedbackFilter$outboundSchema.optional(),
    orderBy: z.array(FeedbackOrderBy$outboundSchema).optional(),
    notes: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var QueryFeedbackRequestBody$;
(function (QueryFeedbackRequestBody$) {
    /** @deprecated use `QueryFeedbackRequestBody$inboundSchema` instead. */
    QueryFeedbackRequestBody$.inboundSchema = QueryFeedbackRequestBody$inboundSchema;
    /** @deprecated use `QueryFeedbackRequestBody$outboundSchema` instead. */
    QueryFeedbackRequestBody$.outboundSchema = QueryFeedbackRequestBody$outboundSchema;
})(QueryFeedbackRequestBody$ || (QueryFeedbackRequestBody$ = {}));
export function queryFeedbackRequestBodyToJSON(queryFeedbackRequestBody) {
    return JSON.stringify(QueryFeedbackRequestBody$outboundSchema.parse(queryFeedbackRequestBody));
}
export function queryFeedbackRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => QueryFeedbackRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryFeedbackRequestBody' from JSON`);
}
//# sourceMappingURL=queryfeedbackrequestbody.js.map