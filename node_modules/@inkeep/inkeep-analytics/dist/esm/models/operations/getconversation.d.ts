import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetConversationSecurity = {
    webIntegrationKey?: string | undefined;
    apiIntegrationKey?: string | undefined;
};
export type GetConversationRequest = {
    id: string;
};
/** @internal */
export declare const GetConversationSecurity$inboundSchema: z.ZodType<GetConversationSecurity, z.ZodTypeDef, unknown>;
/** @internal */
export type GetConversationSecurity$Outbound = {
    WebIntegrationKey?: string | undefined;
    ApiIntegrationKey?: string | undefined;
};
/** @internal */
export declare const GetConversationSecurity$outboundSchema: z.ZodType<GetConversationSecurity$Outbound, z.ZodTypeDef, GetConversationSecurity>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetConversationSecurity$ {
    /** @deprecated use `GetConversationSecurity$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetConversationSecurity, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetConversationSecurity$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetConversationSecurity$Outbound, z.ZodTypeDef, GetConversationSecurity>;
    /** @deprecated use `GetConversationSecurity$Outbound` instead. */
    type Outbound = GetConversationSecurity$Outbound;
}
export declare function getConversationSecurityToJSON(getConversationSecurity: GetConversationSecurity): string;
export declare function getConversationSecurityFromJSON(jsonString: string): SafeParseResult<GetConversationSecurity, SDKValidationError>;
/** @internal */
export declare const GetConversationRequest$inboundSchema: z.ZodType<GetConversationRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetConversationRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const GetConversationRequest$outboundSchema: z.ZodType<GetConversationRequest$Outbound, z.ZodTypeDef, GetConversationRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetConversationRequest$ {
    /** @deprecated use `GetConversationRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetConversationRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetConversationRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetConversationRequest$Outbound, z.ZodTypeDef, GetConversationRequest>;
    /** @deprecated use `GetConversationRequest$Outbound` instead. */
    type Outbound = GetConversationRequest$Outbound;
}
export declare function getConversationRequestToJSON(getConversationRequest: GetConversationRequest): string;
export declare function getConversationRequestFromJSON(jsonString: string): SafeParseResult<GetConversationRequest, SDKValidationError>;
//# sourceMappingURL=getconversation.d.ts.map