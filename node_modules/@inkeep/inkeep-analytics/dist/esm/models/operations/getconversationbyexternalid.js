/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const GetConversationByExternalIdRequest$inboundSchema = z.object({
    externalId: z.string(),
});
/** @internal */
export const GetConversationByExternalIdRequest$outboundSchema = z.object({
    externalId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetConversationByExternalIdRequest$;
(function (GetConversationByExternalIdRequest$) {
    /** @deprecated use `GetConversationByExternalIdRequest$inboundSchema` instead. */
    GetConversationByExternalIdRequest$.inboundSchema = GetConversationByExternalIdRequest$inboundSchema;
    /** @deprecated use `GetConversationByExternalIdRequest$outboundSchema` instead. */
    GetConversationByExternalIdRequest$.outboundSchema = GetConversationByExternalIdRequest$outboundSchema;
})(GetConversationByExternalIdRequest$ || (GetConversationByExternalIdRequest$ = {}));
export function getConversationByExternalIdRequestToJSON(getConversationByExternalIdRequest) {
    return JSON.stringify(GetConversationByExternalIdRequest$outboundSchema.parse(getConversationByExternalIdRequest));
}
export function getConversationByExternalIdRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetConversationByExternalIdRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetConversationByExternalIdRequest' from JSON`);
}
//# sourceMappingURL=getconversationbyexternalid.js.map