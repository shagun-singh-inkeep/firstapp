/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const QueryEventsSecurity$inboundSchema = z.object({
    WebIntegrationKey: z.string().optional(),
    ApiIntegrationKey: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "WebIntegrationKey": "webIntegrationKey",
        "ApiIntegrationKey": "apiIntegrationKey",
    });
});
/** @internal */
export const QueryEventsSecurity$outboundSchema = z.object({
    webIntegrationKey: z.string().optional(),
    apiIntegrationKey: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        webIntegrationKey: "WebIntegrationKey",
        apiIntegrationKey: "ApiIntegrationKey",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var QueryEventsSecurity$;
(function (QueryEventsSecurity$) {
    /** @deprecated use `QueryEventsSecurity$inboundSchema` instead. */
    QueryEventsSecurity$.inboundSchema = QueryEventsSecurity$inboundSchema;
    /** @deprecated use `QueryEventsSecurity$outboundSchema` instead. */
    QueryEventsSecurity$.outboundSchema = QueryEventsSecurity$outboundSchema;
})(QueryEventsSecurity$ || (QueryEventsSecurity$ = {}));
export function queryEventsSecurityToJSON(queryEventsSecurity) {
    return JSON.stringify(QueryEventsSecurity$outboundSchema.parse(queryEventsSecurity));
}
export function queryEventsSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => QueryEventsSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryEventsSecurity' from JSON`);
}
//# sourceMappingURL=queryevents.js.map