/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const QueryFeedbackSecurity$inboundSchema = z.object({
    WebIntegrationKey: z.string().optional(),
    ApiIntegrationKey: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "WebIntegrationKey": "webIntegrationKey",
        "ApiIntegrationKey": "apiIntegrationKey",
    });
});
/** @internal */
export const QueryFeedbackSecurity$outboundSchema = z.object({
    webIntegrationKey: z.string().optional(),
    apiIntegrationKey: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        webIntegrationKey: "WebIntegrationKey",
        apiIntegrationKey: "ApiIntegrationKey",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var QueryFeedbackSecurity$;
(function (QueryFeedbackSecurity$) {
    /** @deprecated use `QueryFeedbackSecurity$inboundSchema` instead. */
    QueryFeedbackSecurity$.inboundSchema = QueryFeedbackSecurity$inboundSchema;
    /** @deprecated use `QueryFeedbackSecurity$outboundSchema` instead. */
    QueryFeedbackSecurity$.outboundSchema = QueryFeedbackSecurity$outboundSchema;
})(QueryFeedbackSecurity$ || (QueryFeedbackSecurity$ = {}));
export function queryFeedbackSecurityToJSON(queryFeedbackSecurity) {
    return JSON.stringify(QueryFeedbackSecurity$outboundSchema.parse(queryFeedbackSecurity));
}
export function queryFeedbackSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => QueryFeedbackSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryFeedbackSecurity' from JSON`);
}
//# sourceMappingURL=queryfeedback.js.map