/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const GetAllConversationRequest$inboundSchema = z.object({
    limit: z.nullable(z.number().int().default(20)),
    offset: z.nullable(z.number().int().default(0)),
});
/** @internal */
export const GetAllConversationRequest$outboundSchema = z.object({
    limit: z.nullable(z.number().int().default(20)),
    offset: z.nullable(z.number().int().default(0)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAllConversationRequest$;
(function (GetAllConversationRequest$) {
    /** @deprecated use `GetAllConversationRequest$inboundSchema` instead. */
    GetAllConversationRequest$.inboundSchema = GetAllConversationRequest$inboundSchema;
    /** @deprecated use `GetAllConversationRequest$outboundSchema` instead. */
    GetAllConversationRequest$.outboundSchema = GetAllConversationRequest$outboundSchema;
})(GetAllConversationRequest$ || (GetAllConversationRequest$ = {}));
export function getAllConversationRequestToJSON(getAllConversationRequest) {
    return JSON.stringify(GetAllConversationRequest$outboundSchema.parse(getAllConversationRequest));
}
export function getAllConversationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAllConversationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAllConversationRequest' from JSON`);
}
/** @internal */
export const GetAllConversationResponseBody$inboundSchema = z.object({
    conversations: z.array(components.Conversation$inboundSchema),
    total: z.number(),
    pageSize: z.number(),
    count: z.number(),
});
/** @internal */
export const GetAllConversationResponseBody$outboundSchema = z.object({
    conversations: z.array(components.Conversation$outboundSchema),
    total: z.number(),
    pageSize: z.number(),
    count: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAllConversationResponseBody$;
(function (GetAllConversationResponseBody$) {
    /** @deprecated use `GetAllConversationResponseBody$inboundSchema` instead. */
    GetAllConversationResponseBody$.inboundSchema = GetAllConversationResponseBody$inboundSchema;
    /** @deprecated use `GetAllConversationResponseBody$outboundSchema` instead. */
    GetAllConversationResponseBody$.outboundSchema = GetAllConversationResponseBody$outboundSchema;
})(GetAllConversationResponseBody$ || (GetAllConversationResponseBody$ = {}));
export function getAllConversationResponseBodyToJSON(getAllConversationResponseBody) {
    return JSON.stringify(GetAllConversationResponseBody$outboundSchema.parse(getAllConversationResponseBody));
}
export function getAllConversationResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAllConversationResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAllConversationResponseBody' from JSON`);
}
//# sourceMappingURL=getallconversation.js.map