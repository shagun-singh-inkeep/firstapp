import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { InkeepAnalyticsCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type ConversationsDeleteMutationVariables = {
    security: operations.DeleteConversationSecurity;
    request: operations.DeleteConversationRequest;
    options?: RequestOptions;
};
export type ConversationsDeleteMutationData = operations.DeleteConversationResponseBody;
/**
 * Delete Conversation
 */
export declare function useConversationsDeleteMutation(options?: MutationHookOptions<ConversationsDeleteMutationData, Error, ConversationsDeleteMutationVariables>): UseMutationResult<ConversationsDeleteMutationData, Error, ConversationsDeleteMutationVariables>;
export declare function mutationKeyConversationsDelete(): MutationKey;
export declare function buildConversationsDeleteMutation(client$: InkeepAnalyticsCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: ConversationsDeleteMutationVariables) => Promise<ConversationsDeleteMutationData>;
};
//# sourceMappingURL=conversationsDelete.d.ts.map