/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { useMutation, } from "@tanstack/react-query";
import { queryQueryPropertyValues } from "../funcs/queryQueryPropertyValues.js";
import { combineSignals } from "../lib/primitives.js";
import { unwrapAsync } from "../types/fp.js";
import { useInkeepAnalyticsContext } from "./_context.js";
/**
 * Query Property Values
 */
export function useQueryQueryPropertyValuesMutation(options) {
    const client = useInkeepAnalyticsContext();
    return useMutation({
        ...buildQueryQueryPropertyValuesMutation(client, options),
        ...options,
    });
}
export function mutationKeyQueryQueryPropertyValues() {
    return ["@inkeep/inkeep-analytics", "Query", "queryPropertyValues"];
}
export function buildQueryQueryPropertyValuesMutation(client$, hookOptions) {
    return {
        mutationKey: mutationKeyQueryQueryPropertyValues(),
        mutationFn: function queryQueryPropertyValuesMutationFn({ request, options, }) {
            const mergedOptions = {
                ...hookOptions,
                ...options,
                fetchOptions: {
                    ...hookOptions?.fetchOptions,
                    ...options?.fetchOptions,
                    signal: combineSignals(hookOptions?.fetchOptions?.signal, options?.fetchOptions?.signal),
                },
            };
            return unwrapAsync(queryQueryPropertyValues(client$, request, mergedOptions));
        },
    };
}
//# sourceMappingURL=queryQueryPropertyValues.js.map