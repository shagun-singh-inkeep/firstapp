import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { InkeepAnalyticsCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type FeedbackSubmitMutationVariables = {
    request: operations.LogFeedbackRequestBody;
    options?: RequestOptions;
};
export type FeedbackSubmitMutationData = operations.LogFeedbackResponseBody;
/**
 * Log Feedback
 *
 * @remarks
 * Logs new feedback or updates an existing one.
 *
 * **API Key Types:** `API`
 */
export declare function useFeedbackSubmitMutation(options?: MutationHookOptions<FeedbackSubmitMutationData, Error, FeedbackSubmitMutationVariables>): UseMutationResult<FeedbackSubmitMutationData, Error, FeedbackSubmitMutationVariables>;
export declare function mutationKeyFeedbackSubmit(): MutationKey;
export declare function buildFeedbackSubmitMutation(client$: InkeepAnalyticsCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: FeedbackSubmitMutationVariables) => Promise<FeedbackSubmitMutationData>;
};
//# sourceMappingURL=feedbackSubmit.d.ts.map