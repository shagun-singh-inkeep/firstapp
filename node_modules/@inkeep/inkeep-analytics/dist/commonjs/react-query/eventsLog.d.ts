import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { InkeepAnalyticsCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type EventsLogMutationVariables = {
    security: operations.LogEventSecurity;
    request: components.InsertEvent;
    options?: RequestOptions;
};
export type EventsLogMutationData = components.SelectEvent;
/**
 * Log Event
 */
export declare function useEventsLogMutation(options?: MutationHookOptions<EventsLogMutationData, Error, EventsLogMutationVariables>): UseMutationResult<EventsLogMutationData, Error, EventsLogMutationVariables>;
export declare function mutationKeyEventsLog(): MutationKey;
export declare function buildEventsLogMutation(client$: InkeepAnalyticsCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: EventsLogMutationVariables) => Promise<EventsLogMutationData>;
};
//# sourceMappingURL=eventsLog.d.ts.map