"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Conversations = void 0;
const conversationsDelete_js_1 = require("../funcs/conversationsDelete.js");
const conversationsGet_js_1 = require("../funcs/conversationsGet.js");
const conversationsList_js_1 = require("../funcs/conversationsList.js");
const conversationsLog_js_1 = require("../funcs/conversationsLog.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class Conversations extends sdks_js_1.ClientSDK {
    /**
     * Log Conversation
     *
     * @remarks
     * Logs a new conversation or updates an existing one with new messages. Always include all messages.
     *
     * **API Key Types:** `WEB`, `API`
     */
    async log(security, request, options) {
        return (0, fp_js_1.unwrapAsync)((0, conversationsLog_js_1.conversationsLog)(this, security, request, options));
    }
    /**
     * Get All Conversations
     */
    async list(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, conversationsList_js_1.conversationsList)(this, request, options));
    }
    /**
     * Get Conversation
     */
    async get(security, request, options) {
        return (0, fp_js_1.unwrapAsync)((0, conversationsGet_js_1.conversationsGet)(this, security, request, options));
    }
    /**
     * Delete Conversation
     */
    async delete(security, request, options) {
        return (0, fp_js_1.unwrapAsync)((0, conversationsDelete_js_1.conversationsDelete)(this, security, request, options));
    }
}
exports.Conversations = Conversations;
//# sourceMappingURL=conversations.js.map