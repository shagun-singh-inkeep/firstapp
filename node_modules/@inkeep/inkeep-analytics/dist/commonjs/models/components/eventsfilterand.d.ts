import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { EventsFilter, EventsFilter$Outbound } from "./eventsfilter.js";
export type EventsFilterANDAND = EventsFilter;
/**
 * EventsFilter AND operator
 */
export type EventsFilterAND = {
    /**
     * EventsFilter AND condition
     */
    and: Array<EventsFilter>;
};
/** @internal */
export declare const EventsFilterANDAND$inboundSchema: z.ZodType<EventsFilterANDAND, z.ZodTypeDef, unknown>;
/** @internal */
export type EventsFilterANDAND$Outbound = EventsFilter$Outbound;
/** @internal */
export declare const EventsFilterANDAND$outboundSchema: z.ZodType<EventsFilterANDAND$Outbound, z.ZodTypeDef, EventsFilterANDAND>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EventsFilterANDAND$ {
    /** @deprecated use `EventsFilterANDAND$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EventsFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `EventsFilterANDAND$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EventsFilter$Outbound, z.ZodTypeDef, EventsFilter>;
    /** @deprecated use `EventsFilterANDAND$Outbound` instead. */
    type Outbound = EventsFilterANDAND$Outbound;
}
export declare function eventsFilterANDANDToJSON(eventsFilterANDAND: EventsFilterANDAND): string;
export declare function eventsFilterANDANDFromJSON(jsonString: string): SafeParseResult<EventsFilterANDAND, SDKValidationError>;
/** @internal */
export declare const EventsFilterAND$inboundSchema: z.ZodType<EventsFilterAND, z.ZodTypeDef, unknown>;
/** @internal */
export type EventsFilterAND$Outbound = {
    and: Array<EventsFilter$Outbound>;
};
/** @internal */
export declare const EventsFilterAND$outboundSchema: z.ZodType<EventsFilterAND$Outbound, z.ZodTypeDef, EventsFilterAND>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EventsFilterAND$ {
    /** @deprecated use `EventsFilterAND$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EventsFilterAND, z.ZodTypeDef, unknown>;
    /** @deprecated use `EventsFilterAND$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EventsFilterAND$Outbound, z.ZodTypeDef, EventsFilterAND>;
    /** @deprecated use `EventsFilterAND$Outbound` instead. */
    type Outbound = EventsFilterAND$Outbound;
}
export declare function eventsFilterANDToJSON(eventsFilterAND: EventsFilterAND): string;
export declare function eventsFilterANDFromJSON(jsonString: string): SafeParseResult<EventsFilterAND, SDKValidationError>;
//# sourceMappingURL=eventsfilterand.d.ts.map