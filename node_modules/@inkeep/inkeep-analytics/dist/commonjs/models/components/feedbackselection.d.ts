import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { FeedbackAggregationSelection, FeedbackAggregationSelection$Outbound } from "./feedbackaggregationselection.js";
import { FeedbackSimpleFieldSelection, FeedbackSimpleFieldSelection$Outbound } from "./feedbacksimplefieldselection.js";
import { FeedbackTimeBasedGroupBySelection, FeedbackTimeBasedGroupBySelection$Outbound } from "./feedbacktimebasedgroupbyselection.js";
/**
 * Fields to select from feedback
 */
export type FeedbackSelection = (FeedbackTimeBasedGroupBySelection & {
    type: "time";
}) | (FeedbackSimpleFieldSelection & {
    type: "field";
}) | (FeedbackAggregationSelection & {
    type: "aggregation";
});
/** @internal */
export declare const FeedbackSelection$inboundSchema: z.ZodType<FeedbackSelection, z.ZodTypeDef, unknown>;
/** @internal */
export type FeedbackSelection$Outbound = (FeedbackTimeBasedGroupBySelection$Outbound & {
    type: "time";
}) | (FeedbackSimpleFieldSelection$Outbound & {
    type: "field";
}) | (FeedbackAggregationSelection$Outbound & {
    type: "aggregation";
});
/** @internal */
export declare const FeedbackSelection$outboundSchema: z.ZodType<FeedbackSelection$Outbound, z.ZodTypeDef, FeedbackSelection>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FeedbackSelection$ {
    /** @deprecated use `FeedbackSelection$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FeedbackSelection, z.ZodTypeDef, unknown>;
    /** @deprecated use `FeedbackSelection$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FeedbackSelection$Outbound, z.ZodTypeDef, FeedbackSelection>;
    /** @deprecated use `FeedbackSelection$Outbound` instead. */
    type Outbound = FeedbackSelection$Outbound;
}
export declare function feedbackSelectionToJSON(feedbackSelection: FeedbackSelection): string;
export declare function feedbackSelectionFromJSON(jsonString: string): SafeParseResult<FeedbackSelection, SDKValidationError>;
//# sourceMappingURL=feedbackselection.d.ts.map