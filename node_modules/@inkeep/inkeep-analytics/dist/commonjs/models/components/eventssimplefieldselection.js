"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventsSimpleFieldSelection$ = exports.EventsSimpleFieldSelection$outboundSchema = exports.EventsSimpleFieldSelection$inboundSchema = exports.EventsSimpleFieldSelectionField$ = exports.EventsSimpleFieldSelectionField$outboundSchema = exports.EventsSimpleFieldSelectionField$inboundSchema = exports.EventsSimpleFieldSelectionType$ = exports.EventsSimpleFieldSelectionType$outboundSchema = exports.EventsSimpleFieldSelectionType$inboundSchema = exports.EventsSimpleFieldSelectionField = exports.EventsSimpleFieldSelectionType = void 0;
exports.eventsSimpleFieldSelectionToJSON = eventsSimpleFieldSelectionToJSON;
exports.eventsSimpleFieldSelectionFromJSON = eventsSimpleFieldSelectionFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
exports.EventsSimpleFieldSelectionType = {
    Field: "field",
};
exports.EventsSimpleFieldSelectionField = {
    Id: "id",
    OrganizationId: "organizationId",
    MessageId: "messageId",
    ConversationId: "conversationId",
    CreatedAt: "createdAt",
    ProjectId: "projectId",
    IntegrationId: "integrationId",
    EventType: "eventType",
    Type: "type",
    SearchQuery: "searchQuery",
    Properties: "properties",
    UserProperties: "userProperties",
};
/** @internal */
exports.EventsSimpleFieldSelectionType$inboundSchema = z.nativeEnum(exports.EventsSimpleFieldSelectionType);
/** @internal */
exports.EventsSimpleFieldSelectionType$outboundSchema = exports.EventsSimpleFieldSelectionType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var EventsSimpleFieldSelectionType$;
(function (EventsSimpleFieldSelectionType$) {
    /** @deprecated use `EventsSimpleFieldSelectionType$inboundSchema` instead. */
    EventsSimpleFieldSelectionType$.inboundSchema = exports.EventsSimpleFieldSelectionType$inboundSchema;
    /** @deprecated use `EventsSimpleFieldSelectionType$outboundSchema` instead. */
    EventsSimpleFieldSelectionType$.outboundSchema = exports.EventsSimpleFieldSelectionType$outboundSchema;
})(EventsSimpleFieldSelectionType$ || (exports.EventsSimpleFieldSelectionType$ = EventsSimpleFieldSelectionType$ = {}));
/** @internal */
exports.EventsSimpleFieldSelectionField$inboundSchema = z.nativeEnum(exports.EventsSimpleFieldSelectionField);
/** @internal */
exports.EventsSimpleFieldSelectionField$outboundSchema = exports.EventsSimpleFieldSelectionField$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var EventsSimpleFieldSelectionField$;
(function (EventsSimpleFieldSelectionField$) {
    /** @deprecated use `EventsSimpleFieldSelectionField$inboundSchema` instead. */
    EventsSimpleFieldSelectionField$.inboundSchema = exports.EventsSimpleFieldSelectionField$inboundSchema;
    /** @deprecated use `EventsSimpleFieldSelectionField$outboundSchema` instead. */
    EventsSimpleFieldSelectionField$.outboundSchema = exports.EventsSimpleFieldSelectionField$outboundSchema;
})(EventsSimpleFieldSelectionField$ || (exports.EventsSimpleFieldSelectionField$ = EventsSimpleFieldSelectionField$ = {}));
/** @internal */
exports.EventsSimpleFieldSelection$inboundSchema = z.object({
    type: exports.EventsSimpleFieldSelectionType$inboundSchema,
    field: exports.EventsSimpleFieldSelectionField$inboundSchema,
    path: z.array(z.string()).optional(),
});
/** @internal */
exports.EventsSimpleFieldSelection$outboundSchema = z.object({
    type: exports.EventsSimpleFieldSelectionType$outboundSchema,
    field: exports.EventsSimpleFieldSelectionField$outboundSchema,
    path: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var EventsSimpleFieldSelection$;
(function (EventsSimpleFieldSelection$) {
    /** @deprecated use `EventsSimpleFieldSelection$inboundSchema` instead. */
    EventsSimpleFieldSelection$.inboundSchema = exports.EventsSimpleFieldSelection$inboundSchema;
    /** @deprecated use `EventsSimpleFieldSelection$outboundSchema` instead. */
    EventsSimpleFieldSelection$.outboundSchema = exports.EventsSimpleFieldSelection$outboundSchema;
})(EventsSimpleFieldSelection$ || (exports.EventsSimpleFieldSelection$ = EventsSimpleFieldSelection$ = {}));
function eventsSimpleFieldSelectionToJSON(eventsSimpleFieldSelection) {
    return JSON.stringify(exports.EventsSimpleFieldSelection$outboundSchema.parse(eventsSimpleFieldSelection));
}
function eventsSimpleFieldSelectionFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.EventsSimpleFieldSelection$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EventsSimpleFieldSelection' from JSON`);
}
//# sourceMappingURL=eventssimplefieldselection.js.map