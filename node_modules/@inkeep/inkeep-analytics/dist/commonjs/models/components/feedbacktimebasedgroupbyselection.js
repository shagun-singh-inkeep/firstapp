"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.FeedbackTimeBasedGroupBySelection$ = exports.FeedbackTimeBasedGroupBySelection$outboundSchema = exports.FeedbackTimeBasedGroupBySelection$inboundSchema = exports.FeedbackTimeBasedGroupBySelectionField$ = exports.FeedbackTimeBasedGroupBySelectionField$outboundSchema = exports.FeedbackTimeBasedGroupBySelectionField$inboundSchema = exports.FeedbackTimeBasedGroupBySelectionType$ = exports.FeedbackTimeBasedGroupBySelectionType$outboundSchema = exports.FeedbackTimeBasedGroupBySelectionType$inboundSchema = exports.FeedbackTimeBasedGroupBySelectionField = exports.FeedbackTimeBasedGroupBySelectionType = void 0;
exports.feedbackTimeBasedGroupBySelectionToJSON = feedbackTimeBasedGroupBySelectionToJSON;
exports.feedbackTimeBasedGroupBySelectionFromJSON = feedbackTimeBasedGroupBySelectionFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const timeunit_js_1 = require("./timeunit.js");
exports.FeedbackTimeBasedGroupBySelectionType = {
    Time: "time",
};
exports.FeedbackTimeBasedGroupBySelectionField = {
    Id: "id",
    Type: "type",
    MessageId: "messageId",
    CreatedAt: "createdAt",
    OrganizationId: "organizationId",
    Reasons: "reasons",
    Properties: "properties",
    UserProperties: "userProperties",
    ConversationId: "conversationId",
    ProjectId: "projectId",
    IntegrationId: "integrationId",
    UpdatedAt: "updatedAt",
    Status: "status",
};
/** @internal */
exports.FeedbackTimeBasedGroupBySelectionType$inboundSchema = z.nativeEnum(exports.FeedbackTimeBasedGroupBySelectionType);
/** @internal */
exports.FeedbackTimeBasedGroupBySelectionType$outboundSchema = exports.FeedbackTimeBasedGroupBySelectionType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FeedbackTimeBasedGroupBySelectionType$;
(function (FeedbackTimeBasedGroupBySelectionType$) {
    /** @deprecated use `FeedbackTimeBasedGroupBySelectionType$inboundSchema` instead. */
    FeedbackTimeBasedGroupBySelectionType$.inboundSchema = exports.FeedbackTimeBasedGroupBySelectionType$inboundSchema;
    /** @deprecated use `FeedbackTimeBasedGroupBySelectionType$outboundSchema` instead. */
    FeedbackTimeBasedGroupBySelectionType$.outboundSchema = exports.FeedbackTimeBasedGroupBySelectionType$outboundSchema;
})(FeedbackTimeBasedGroupBySelectionType$ || (exports.FeedbackTimeBasedGroupBySelectionType$ = FeedbackTimeBasedGroupBySelectionType$ = {}));
/** @internal */
exports.FeedbackTimeBasedGroupBySelectionField$inboundSchema = z.nativeEnum(exports.FeedbackTimeBasedGroupBySelectionField);
/** @internal */
exports.FeedbackTimeBasedGroupBySelectionField$outboundSchema = exports.FeedbackTimeBasedGroupBySelectionField$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FeedbackTimeBasedGroupBySelectionField$;
(function (FeedbackTimeBasedGroupBySelectionField$) {
    /** @deprecated use `FeedbackTimeBasedGroupBySelectionField$inboundSchema` instead. */
    FeedbackTimeBasedGroupBySelectionField$.inboundSchema = exports.FeedbackTimeBasedGroupBySelectionField$inboundSchema;
    /** @deprecated use `FeedbackTimeBasedGroupBySelectionField$outboundSchema` instead. */
    FeedbackTimeBasedGroupBySelectionField$.outboundSchema = exports.FeedbackTimeBasedGroupBySelectionField$outboundSchema;
})(FeedbackTimeBasedGroupBySelectionField$ || (exports.FeedbackTimeBasedGroupBySelectionField$ = FeedbackTimeBasedGroupBySelectionField$ = {}));
/** @internal */
exports.FeedbackTimeBasedGroupBySelection$inboundSchema = z.object({
    type: exports.FeedbackTimeBasedGroupBySelectionType$inboundSchema,
    timeUnit: timeunit_js_1.TimeUnit$inboundSchema,
    field: exports.FeedbackTimeBasedGroupBySelectionField$inboundSchema.optional(),
});
/** @internal */
exports.FeedbackTimeBasedGroupBySelection$outboundSchema = z.object({
    type: exports.FeedbackTimeBasedGroupBySelectionType$outboundSchema,
    timeUnit: timeunit_js_1.TimeUnit$outboundSchema,
    field: exports.FeedbackTimeBasedGroupBySelectionField$outboundSchema.optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FeedbackTimeBasedGroupBySelection$;
(function (FeedbackTimeBasedGroupBySelection$) {
    /** @deprecated use `FeedbackTimeBasedGroupBySelection$inboundSchema` instead. */
    FeedbackTimeBasedGroupBySelection$.inboundSchema = exports.FeedbackTimeBasedGroupBySelection$inboundSchema;
    /** @deprecated use `FeedbackTimeBasedGroupBySelection$outboundSchema` instead. */
    FeedbackTimeBasedGroupBySelection$.outboundSchema = exports.FeedbackTimeBasedGroupBySelection$outboundSchema;
})(FeedbackTimeBasedGroupBySelection$ || (exports.FeedbackTimeBasedGroupBySelection$ = FeedbackTimeBasedGroupBySelection$ = {}));
function feedbackTimeBasedGroupBySelectionToJSON(feedbackTimeBasedGroupBySelection) {
    return JSON.stringify(exports.FeedbackTimeBasedGroupBySelection$outboundSchema.parse(feedbackTimeBasedGroupBySelection));
}
function feedbackTimeBasedGroupBySelectionFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FeedbackTimeBasedGroupBySelection$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeedbackTimeBasedGroupBySelection' from JSON`);
}
//# sourceMappingURL=feedbacktimebasedgroupbyselection.js.map