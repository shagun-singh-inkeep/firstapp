import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { FeedbackFilter, FeedbackFilter$Outbound } from "./feedbackfilter.js";
export type FeedbackFilterOROR = FeedbackFilter;
/**
 * FeedbackFilter OR operator
 */
export type FeedbackFilterOR = {
    /**
     * FeedbackFilter OR condition
     */
    or: Array<FeedbackFilter>;
};
/** @internal */
export declare const FeedbackFilterOROR$inboundSchema: z.ZodType<FeedbackFilterOROR, z.ZodTypeDef, unknown>;
/** @internal */
export type FeedbackFilterOROR$Outbound = FeedbackFilter$Outbound;
/** @internal */
export declare const FeedbackFilterOROR$outboundSchema: z.ZodType<FeedbackFilterOROR$Outbound, z.ZodTypeDef, FeedbackFilterOROR>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FeedbackFilterOROR$ {
    /** @deprecated use `FeedbackFilterOROR$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FeedbackFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `FeedbackFilterOROR$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FeedbackFilter$Outbound, z.ZodTypeDef, FeedbackFilter>;
    /** @deprecated use `FeedbackFilterOROR$Outbound` instead. */
    type Outbound = FeedbackFilterOROR$Outbound;
}
export declare function feedbackFilterORORToJSON(feedbackFilterOROR: FeedbackFilterOROR): string;
export declare function feedbackFilterORORFromJSON(jsonString: string): SafeParseResult<FeedbackFilterOROR, SDKValidationError>;
/** @internal */
export declare const FeedbackFilterOR$inboundSchema: z.ZodType<FeedbackFilterOR, z.ZodTypeDef, unknown>;
/** @internal */
export type FeedbackFilterOR$Outbound = {
    or: Array<FeedbackFilter$Outbound>;
};
/** @internal */
export declare const FeedbackFilterOR$outboundSchema: z.ZodType<FeedbackFilterOR$Outbound, z.ZodTypeDef, FeedbackFilterOR>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace FeedbackFilterOR$ {
    /** @deprecated use `FeedbackFilterOR$inboundSchema` instead. */
    const inboundSchema: z.ZodType<FeedbackFilterOR, z.ZodTypeDef, unknown>;
    /** @deprecated use `FeedbackFilterOR$outboundSchema` instead. */
    const outboundSchema: z.ZodType<FeedbackFilterOR$Outbound, z.ZodTypeDef, FeedbackFilterOR>;
    /** @deprecated use `FeedbackFilterOR$Outbound` instead. */
    type Outbound = FeedbackFilterOR$Outbound;
}
export declare function feedbackFilterORToJSON(feedbackFilterOR: FeedbackFilterOR): string;
export declare function feedbackFilterORFromJSON(jsonString: string): SafeParseResult<FeedbackFilterOR, SDKValidationError>;
//# sourceMappingURL=feedbackfilteror.d.ts.map