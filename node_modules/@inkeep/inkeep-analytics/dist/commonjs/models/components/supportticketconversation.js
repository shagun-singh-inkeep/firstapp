"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SupportTicketConversation$ = exports.SupportTicketConversation$outboundSchema = exports.SupportTicketConversation$inboundSchema = exports.SupportTicketConversationVisibility$ = exports.SupportTicketConversationVisibility$outboundSchema = exports.SupportTicketConversationVisibility$inboundSchema = exports.SupportTicketConversationUserProperties$ = exports.SupportTicketConversationUserProperties$outboundSchema = exports.SupportTicketConversationUserProperties$inboundSchema = exports.SupportTicketConversationUserType$ = exports.SupportTicketConversationUserType$outboundSchema = exports.SupportTicketConversationUserType$inboundSchema = exports.SupportTicketConversationUserId$ = exports.SupportTicketConversationUserId$outboundSchema = exports.SupportTicketConversationUserId$inboundSchema = exports.SupportTicketConversationId$ = exports.SupportTicketConversationId$outboundSchema = exports.SupportTicketConversationId$inboundSchema = exports.SupportTicketConversationType$ = exports.SupportTicketConversationType$outboundSchema = exports.SupportTicketConversationType$inboundSchema = exports.SupportTicketConversationVisibility = exports.SupportTicketConversationUserType = exports.SupportTicketConversationType = void 0;
exports.supportTicketConversationIdToJSON = supportTicketConversationIdToJSON;
exports.supportTicketConversationIdFromJSON = supportTicketConversationIdFromJSON;
exports.supportTicketConversationUserIdToJSON = supportTicketConversationUserIdToJSON;
exports.supportTicketConversationUserIdFromJSON = supportTicketConversationUserIdFromJSON;
exports.supportTicketConversationUserPropertiesToJSON = supportTicketConversationUserPropertiesToJSON;
exports.supportTicketConversationUserPropertiesFromJSON = supportTicketConversationUserPropertiesFromJSON;
exports.supportTicketConversationToJSON = supportTicketConversationToJSON;
exports.supportTicketConversationFromJSON = supportTicketConversationFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const supportticketmessage_js_1 = require("./supportticketmessage.js");
exports.SupportTicketConversationType = {
    SupportTicket: "support_ticket",
};
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
exports.SupportTicketConversationUserType = {
    User: "user",
    Member: "member",
};
exports.SupportTicketConversationVisibility = {
    Private: "private",
    Public: "public",
};
/** @internal */
exports.SupportTicketConversationType$inboundSchema = z.nativeEnum(exports.SupportTicketConversationType);
/** @internal */
exports.SupportTicketConversationType$outboundSchema = exports.SupportTicketConversationType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SupportTicketConversationType$;
(function (SupportTicketConversationType$) {
    /** @deprecated use `SupportTicketConversationType$inboundSchema` instead. */
    SupportTicketConversationType$.inboundSchema = exports.SupportTicketConversationType$inboundSchema;
    /** @deprecated use `SupportTicketConversationType$outboundSchema` instead. */
    SupportTicketConversationType$.outboundSchema = exports.SupportTicketConversationType$outboundSchema;
})(SupportTicketConversationType$ || (exports.SupportTicketConversationType$ = SupportTicketConversationType$ = {}));
/** @internal */
exports.SupportTicketConversationId$inboundSchema = z.union([z.string(), z.number()]);
/** @internal */
exports.SupportTicketConversationId$outboundSchema = z.union([z.string(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SupportTicketConversationId$;
(function (SupportTicketConversationId$) {
    /** @deprecated use `SupportTicketConversationId$inboundSchema` instead. */
    SupportTicketConversationId$.inboundSchema = exports.SupportTicketConversationId$inboundSchema;
    /** @deprecated use `SupportTicketConversationId$outboundSchema` instead. */
    SupportTicketConversationId$.outboundSchema = exports.SupportTicketConversationId$outboundSchema;
})(SupportTicketConversationId$ || (exports.SupportTicketConversationId$ = SupportTicketConversationId$ = {}));
function supportTicketConversationIdToJSON(supportTicketConversationId) {
    return JSON.stringify(exports.SupportTicketConversationId$outboundSchema.parse(supportTicketConversationId));
}
function supportTicketConversationIdFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.SupportTicketConversationId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SupportTicketConversationId' from JSON`);
}
/** @internal */
exports.SupportTicketConversationUserId$inboundSchema = z.union([z.string(), z.number()]);
/** @internal */
exports.SupportTicketConversationUserId$outboundSchema = z.union([z.string(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SupportTicketConversationUserId$;
(function (SupportTicketConversationUserId$) {
    /** @deprecated use `SupportTicketConversationUserId$inboundSchema` instead. */
    SupportTicketConversationUserId$.inboundSchema = exports.SupportTicketConversationUserId$inboundSchema;
    /** @deprecated use `SupportTicketConversationUserId$outboundSchema` instead. */
    SupportTicketConversationUserId$.outboundSchema = exports.SupportTicketConversationUserId$outboundSchema;
})(SupportTicketConversationUserId$ || (exports.SupportTicketConversationUserId$ = SupportTicketConversationUserId$ = {}));
function supportTicketConversationUserIdToJSON(supportTicketConversationUserId) {
    return JSON.stringify(exports.SupportTicketConversationUserId$outboundSchema.parse(supportTicketConversationUserId));
}
function supportTicketConversationUserIdFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.SupportTicketConversationUserId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SupportTicketConversationUserId' from JSON`);
}
/** @internal */
exports.SupportTicketConversationUserType$inboundSchema = z.nativeEnum(exports.SupportTicketConversationUserType);
/** @internal */
exports.SupportTicketConversationUserType$outboundSchema = exports.SupportTicketConversationUserType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SupportTicketConversationUserType$;
(function (SupportTicketConversationUserType$) {
    /** @deprecated use `SupportTicketConversationUserType$inboundSchema` instead. */
    SupportTicketConversationUserType$.inboundSchema = exports.SupportTicketConversationUserType$inboundSchema;
    /** @deprecated use `SupportTicketConversationUserType$outboundSchema` instead. */
    SupportTicketConversationUserType$.outboundSchema = exports.SupportTicketConversationUserType$outboundSchema;
})(SupportTicketConversationUserType$ || (exports.SupportTicketConversationUserType$ = SupportTicketConversationUserType$ = {}));
/** @internal */
exports.SupportTicketConversationUserProperties$inboundSchema = (0, schemas_js_1.collectExtraKeys)(z.object({
    id: z.nullable(z.union([z.string(), z.number()])).optional(),
    identificationType: z.nullable(z.string()).optional(),
    userId: z.nullable(z.union([z.string(), z.number()])).optional(),
    supportAgentName: z.nullable(z.string()).optional(),
    userType: z.nullable(exports.SupportTicketConversationUserType$inboundSchema)
        .optional(),
}).catchall(z.any()), "additionalProperties", true);
/** @internal */
exports.SupportTicketConversationUserProperties$outboundSchema = z.object({
    id: z.nullable(z.union([z.string(), z.number()])).optional(),
    identificationType: z.nullable(z.string()).optional(),
    userId: z.nullable(z.union([z.string(), z.number()])).optional(),
    supportAgentName: z.nullable(z.string()).optional(),
    userType: z.nullable(exports.SupportTicketConversationUserType$outboundSchema)
        .optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...(0, primitives_js_1.remap)(v, {
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SupportTicketConversationUserProperties$;
(function (SupportTicketConversationUserProperties$) {
    /** @deprecated use `SupportTicketConversationUserProperties$inboundSchema` instead. */
    SupportTicketConversationUserProperties$.inboundSchema = exports.SupportTicketConversationUserProperties$inboundSchema;
    /** @deprecated use `SupportTicketConversationUserProperties$outboundSchema` instead. */
    SupportTicketConversationUserProperties$.outboundSchema = exports.SupportTicketConversationUserProperties$outboundSchema;
})(SupportTicketConversationUserProperties$ || (exports.SupportTicketConversationUserProperties$ = SupportTicketConversationUserProperties$ = {}));
function supportTicketConversationUserPropertiesToJSON(supportTicketConversationUserProperties) {
    return JSON.stringify(exports.SupportTicketConversationUserProperties$outboundSchema.parse(supportTicketConversationUserProperties));
}
function supportTicketConversationUserPropertiesFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.SupportTicketConversationUserProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SupportTicketConversationUserProperties' from JSON`);
}
/** @internal */
exports.SupportTicketConversationVisibility$inboundSchema = z.nativeEnum(exports.SupportTicketConversationVisibility);
/** @internal */
exports.SupportTicketConversationVisibility$outboundSchema = exports.SupportTicketConversationVisibility$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SupportTicketConversationVisibility$;
(function (SupportTicketConversationVisibility$) {
    /** @deprecated use `SupportTicketConversationVisibility$inboundSchema` instead. */
    SupportTicketConversationVisibility$.inboundSchema = exports.SupportTicketConversationVisibility$inboundSchema;
    /** @deprecated use `SupportTicketConversationVisibility$outboundSchema` instead. */
    SupportTicketConversationVisibility$.outboundSchema = exports.SupportTicketConversationVisibility$outboundSchema;
})(SupportTicketConversationVisibility$ || (exports.SupportTicketConversationVisibility$ = SupportTicketConversationVisibility$ = {}));
/** @internal */
exports.SupportTicketConversation$inboundSchema = z.object({
    id: z.string(),
    externalId: z.nullable(z.string()),
    externalUrl: z.nullable(z.string()),
    type: exports.SupportTicketConversationType$inboundSchema,
    supportTicketConversationId: z.nullable(z.string()),
    createdAt: z.string(),
    updatedAt: z.string(),
    projectId: z.nullable(z.string()),
    integrationId: z.nullable(z.string()),
    properties: z.nullable(z.record(z.any())).optional(),
    userProperties: z.nullable(z.lazy(() => exports.SupportTicketConversationUserProperties$inboundSchema)).optional(),
    tags: z.nullable(z.array(z.string())).optional(),
    visibility: z.nullable(exports.SupportTicketConversationVisibility$inboundSchema),
    messages: z.array(supportticketmessage_js_1.SupportTicketMessage$inboundSchema),
});
/** @internal */
exports.SupportTicketConversation$outboundSchema = z.object({
    id: z.string(),
    externalId: z.nullable(z.string()),
    externalUrl: z.nullable(z.string()),
    type: exports.SupportTicketConversationType$outboundSchema,
    supportTicketConversationId: z.nullable(z.string()),
    createdAt: z.string(),
    updatedAt: z.string(),
    projectId: z.nullable(z.string()),
    integrationId: z.nullable(z.string()),
    properties: z.nullable(z.record(z.any())).optional(),
    userProperties: z.nullable(z.lazy(() => exports.SupportTicketConversationUserProperties$outboundSchema)).optional(),
    tags: z.nullable(z.array(z.string())).optional(),
    visibility: z.nullable(exports.SupportTicketConversationVisibility$outboundSchema),
    messages: z.array(supportticketmessage_js_1.SupportTicketMessage$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SupportTicketConversation$;
(function (SupportTicketConversation$) {
    /** @deprecated use `SupportTicketConversation$inboundSchema` instead. */
    SupportTicketConversation$.inboundSchema = exports.SupportTicketConversation$inboundSchema;
    /** @deprecated use `SupportTicketConversation$outboundSchema` instead. */
    SupportTicketConversation$.outboundSchema = exports.SupportTicketConversation$outboundSchema;
})(SupportTicketConversation$ || (exports.SupportTicketConversation$ = SupportTicketConversation$ = {}));
function supportTicketConversationToJSON(supportTicketConversation) {
    return JSON.stringify(exports.SupportTicketConversation$outboundSchema.parse(supportTicketConversation));
}
function supportTicketConversationFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.SupportTicketConversation$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SupportTicketConversation' from JSON`);
}
//# sourceMappingURL=supportticketconversation.js.map