"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.FeedbackFilterCondition$ = exports.FeedbackFilterCondition$outboundSchema = exports.FeedbackFilterCondition$inboundSchema = exports.FeedbackFilterConditionCondition$ = exports.FeedbackFilterConditionCondition$outboundSchema = exports.FeedbackFilterConditionCondition$inboundSchema = exports.FeedbackFilterConditionValue7$ = exports.FeedbackFilterConditionValue7$outboundSchema = exports.FeedbackFilterConditionValue7$inboundSchema = exports.FeedbackFilterConditionValueValue$ = exports.FeedbackFilterConditionValueValue$outboundSchema = exports.FeedbackFilterConditionValueValue$inboundSchema = exports.FeedbackFilterConditionValueValue4$ = exports.FeedbackFilterConditionValueValue4$outboundSchema = exports.FeedbackFilterConditionValueValue4$inboundSchema = void 0;
exports.feedbackFilterConditionValueValue4ToJSON = feedbackFilterConditionValueValue4ToJSON;
exports.feedbackFilterConditionValueValue4FromJSON = feedbackFilterConditionValueValue4FromJSON;
exports.feedbackFilterConditionValueValueToJSON = feedbackFilterConditionValueValueToJSON;
exports.feedbackFilterConditionValueValueFromJSON = feedbackFilterConditionValueValueFromJSON;
exports.feedbackFilterConditionValue7ToJSON = feedbackFilterConditionValue7ToJSON;
exports.feedbackFilterConditionValue7FromJSON = feedbackFilterConditionValue7FromJSON;
exports.feedbackFilterConditionConditionToJSON = feedbackFilterConditionConditionToJSON;
exports.feedbackFilterConditionConditionFromJSON = feedbackFilterConditionConditionFromJSON;
exports.feedbackFilterConditionToJSON = feedbackFilterConditionToJSON;
exports.feedbackFilterConditionFromJSON = feedbackFilterConditionFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const feedbackfield_js_1 = require("./feedbackfield.js");
const filteroperator_js_1 = require("./filteroperator.js");
/** @internal */
exports.FeedbackFilterConditionValueValue4$inboundSchema = z.union([z.string(), z.number(), z.boolean()]);
/** @internal */
exports.FeedbackFilterConditionValueValue4$outboundSchema = z.union([z.string(), z.number(), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FeedbackFilterConditionValueValue4$;
(function (FeedbackFilterConditionValueValue4$) {
    /** @deprecated use `FeedbackFilterConditionValueValue4$inboundSchema` instead. */
    FeedbackFilterConditionValueValue4$.inboundSchema = exports.FeedbackFilterConditionValueValue4$inboundSchema;
    /** @deprecated use `FeedbackFilterConditionValueValue4$outboundSchema` instead. */
    FeedbackFilterConditionValueValue4$.outboundSchema = exports.FeedbackFilterConditionValueValue4$outboundSchema;
})(FeedbackFilterConditionValueValue4$ || (exports.FeedbackFilterConditionValueValue4$ = FeedbackFilterConditionValueValue4$ = {}));
function feedbackFilterConditionValueValue4ToJSON(feedbackFilterConditionValueValue4) {
    return JSON.stringify(exports.FeedbackFilterConditionValueValue4$outboundSchema.parse(feedbackFilterConditionValueValue4));
}
function feedbackFilterConditionValueValue4FromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FeedbackFilterConditionValueValue4$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeedbackFilterConditionValueValue4' from JSON`);
}
/** @internal */
exports.FeedbackFilterConditionValueValue$inboundSchema = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.nullable(z.union([z.string(), z.number(), z.boolean()]))),
]);
/** @internal */
exports.FeedbackFilterConditionValueValue$outboundSchema = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.nullable(z.union([z.string(), z.number(), z.boolean()]))),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FeedbackFilterConditionValueValue$;
(function (FeedbackFilterConditionValueValue$) {
    /** @deprecated use `FeedbackFilterConditionValueValue$inboundSchema` instead. */
    FeedbackFilterConditionValueValue$.inboundSchema = exports.FeedbackFilterConditionValueValue$inboundSchema;
    /** @deprecated use `FeedbackFilterConditionValueValue$outboundSchema` instead. */
    FeedbackFilterConditionValueValue$.outboundSchema = exports.FeedbackFilterConditionValueValue$outboundSchema;
})(FeedbackFilterConditionValueValue$ || (exports.FeedbackFilterConditionValueValue$ = FeedbackFilterConditionValueValue$ = {}));
function feedbackFilterConditionValueValueToJSON(feedbackFilterConditionValueValue) {
    return JSON.stringify(exports.FeedbackFilterConditionValueValue$outboundSchema.parse(feedbackFilterConditionValueValue));
}
function feedbackFilterConditionValueValueFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FeedbackFilterConditionValueValue$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeedbackFilterConditionValueValue' from JSON`);
}
/** @internal */
exports.FeedbackFilterConditionValue7$inboundSchema = z.object({
    path: z.array(z.string()),
    value: z.nullable(z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.nullable(z.union([z.string(), z.number(), z.boolean()]))),
    ])),
});
/** @internal */
exports.FeedbackFilterConditionValue7$outboundSchema = z.object({
    path: z.array(z.string()),
    value: z.nullable(z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.nullable(z.union([z.string(), z.number(), z.boolean()]))),
    ])),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FeedbackFilterConditionValue7$;
(function (FeedbackFilterConditionValue7$) {
    /** @deprecated use `FeedbackFilterConditionValue7$inboundSchema` instead. */
    FeedbackFilterConditionValue7$.inboundSchema = exports.FeedbackFilterConditionValue7$inboundSchema;
    /** @deprecated use `FeedbackFilterConditionValue7$outboundSchema` instead. */
    FeedbackFilterConditionValue7$.outboundSchema = exports.FeedbackFilterConditionValue7$outboundSchema;
})(FeedbackFilterConditionValue7$ || (exports.FeedbackFilterConditionValue7$ = FeedbackFilterConditionValue7$ = {}));
function feedbackFilterConditionValue7ToJSON(feedbackFilterConditionValue7) {
    return JSON.stringify(exports.FeedbackFilterConditionValue7$outboundSchema.parse(feedbackFilterConditionValue7));
}
function feedbackFilterConditionValue7FromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FeedbackFilterConditionValue7$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeedbackFilterConditionValue7' from JSON`);
}
/** @internal */
exports.FeedbackFilterConditionCondition$inboundSchema = z.object({
    field: feedbackfield_js_1.FeedbackField$inboundSchema,
    operator: filteroperator_js_1.FilterOperator$inboundSchema,
    value: z.any().optional(),
});
/** @internal */
exports.FeedbackFilterConditionCondition$outboundSchema = z.object({
    field: feedbackfield_js_1.FeedbackField$outboundSchema,
    operator: filteroperator_js_1.FilterOperator$outboundSchema,
    value: z.any().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FeedbackFilterConditionCondition$;
(function (FeedbackFilterConditionCondition$) {
    /** @deprecated use `FeedbackFilterConditionCondition$inboundSchema` instead. */
    FeedbackFilterConditionCondition$.inboundSchema = exports.FeedbackFilterConditionCondition$inboundSchema;
    /** @deprecated use `FeedbackFilterConditionCondition$outboundSchema` instead. */
    FeedbackFilterConditionCondition$.outboundSchema = exports.FeedbackFilterConditionCondition$outboundSchema;
})(FeedbackFilterConditionCondition$ || (exports.FeedbackFilterConditionCondition$ = FeedbackFilterConditionCondition$ = {}));
function feedbackFilterConditionConditionToJSON(feedbackFilterConditionCondition) {
    return JSON.stringify(exports.FeedbackFilterConditionCondition$outboundSchema.parse(feedbackFilterConditionCondition));
}
function feedbackFilterConditionConditionFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FeedbackFilterConditionCondition$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeedbackFilterConditionCondition' from JSON`);
}
/** @internal */
exports.FeedbackFilterCondition$inboundSchema = z.object({
    condition: z.lazy(() => exports.FeedbackFilterConditionCondition$inboundSchema),
});
/** @internal */
exports.FeedbackFilterCondition$outboundSchema = z.object({
    condition: z.lazy(() => exports.FeedbackFilterConditionCondition$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FeedbackFilterCondition$;
(function (FeedbackFilterCondition$) {
    /** @deprecated use `FeedbackFilterCondition$inboundSchema` instead. */
    FeedbackFilterCondition$.inboundSchema = exports.FeedbackFilterCondition$inboundSchema;
    /** @deprecated use `FeedbackFilterCondition$outboundSchema` instead. */
    FeedbackFilterCondition$.outboundSchema = exports.FeedbackFilterCondition$outboundSchema;
})(FeedbackFilterCondition$ || (exports.FeedbackFilterCondition$ = FeedbackFilterCondition$ = {}));
function feedbackFilterConditionToJSON(feedbackFilterCondition) {
    return JSON.stringify(exports.FeedbackFilterCondition$outboundSchema.parse(feedbackFilterCondition));
}
function feedbackFilterConditionFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FeedbackFilterCondition$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeedbackFilterCondition' from JSON`);
}
//# sourceMappingURL=feedbackfiltercondition.js.map