import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { ConversationsFilter, ConversationsFilter$Outbound } from "./conversationsfilter.js";
import { ConversationsGroupBy, ConversationsGroupBy$Outbound } from "./conversationsgroupby.js";
import { ConversationsOrderBy, ConversationsOrderBy$Outbound } from "./conversationsorderby.js";
import { ConversationsSelection, ConversationsSelection$Outbound } from "./conversationsselection.js";
/**
 * Query Conversations Params
 */
export type QueryConversationsRequestBody = {
    select?: Array<ConversationsSelection> | undefined;
    groupBy?: Array<ConversationsGroupBy> | undefined;
    where?: ConversationsFilter | undefined;
    orderBy?: Array<ConversationsOrderBy> | undefined;
    /**
     * Notes are not persisted, but may be useful for your debugging purposes
     */
    notes?: string | undefined;
};
/** @internal */
export declare const QueryConversationsRequestBody$inboundSchema: z.ZodType<QueryConversationsRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryConversationsRequestBody$Outbound = {
    select?: Array<ConversationsSelection$Outbound> | undefined;
    groupBy?: Array<ConversationsGroupBy$Outbound> | undefined;
    where?: ConversationsFilter$Outbound | undefined;
    orderBy?: Array<ConversationsOrderBy$Outbound> | undefined;
    notes?: string | undefined;
};
/** @internal */
export declare const QueryConversationsRequestBody$outboundSchema: z.ZodType<QueryConversationsRequestBody$Outbound, z.ZodTypeDef, QueryConversationsRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryConversationsRequestBody$ {
    /** @deprecated use `QueryConversationsRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryConversationsRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryConversationsRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryConversationsRequestBody$Outbound, z.ZodTypeDef, QueryConversationsRequestBody>;
    /** @deprecated use `QueryConversationsRequestBody$Outbound` instead. */
    type Outbound = QueryConversationsRequestBody$Outbound;
}
export declare function queryConversationsRequestBodyToJSON(queryConversationsRequestBody: QueryConversationsRequestBody): string;
export declare function queryConversationsRequestBodyFromJSON(jsonString: string): SafeParseResult<QueryConversationsRequestBody, SDKValidationError>;
//# sourceMappingURL=queryconversationsrequestbody.d.ts.map