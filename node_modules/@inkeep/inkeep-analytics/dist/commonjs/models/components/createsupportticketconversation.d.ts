import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export declare const CreateSupportTicketConversationType: {
    readonly SupportTicket: "support_ticket";
};
export type CreateSupportTicketConversationType = ClosedEnum<typeof CreateSupportTicketConversationType>;
/**
 * The unique identifier for the user. This value is sent by the inkeep widget.
 */
export type CreateSupportTicketConversationId = string | number;
/**
 * The unique identifier for the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export type CreateSupportTicketConversationUserId = string | number;
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export declare const CreateSupportTicketConversationUserType: {
    readonly User: "user";
    readonly Member: "member";
};
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export type CreateSupportTicketConversationUserType = ClosedEnum<typeof CreateSupportTicketConversationUserType>;
/**
 * A customizable collection of custom properties or attributes. Some properties have first class support for the Inkeep Portal or Widget and are noted in the description.
 */
export type CreateSupportTicketConversationUserProperties = {
    /**
     * The unique identifier for the user. This value is sent by the inkeep widget.
     */
    id?: string | number | null | undefined;
    /**
     * The type of identification for the user. This value is sent by the inkeep widget.
     */
    identificationType?: string | null | undefined;
    /**
     * The unique identifier for the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
     */
    userId?: string | number | null | undefined;
    /**
     * The name of the support agent assigned to the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
     */
    supportAgentName?: string | null | undefined;
    /**
     * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
     */
    userType?: CreateSupportTicketConversationUserType | null | undefined;
    additionalProperties?: {
        [k: string]: any;
    };
};
export declare const CreateSupportTicketConversationVisibility: {
    readonly Private: "private";
    readonly Public: "public";
};
export type CreateSupportTicketConversationVisibility = ClosedEnum<typeof CreateSupportTicketConversationVisibility>;
export declare const CreateSupportTicketConversationType1: {
    readonly Documentation: "documentation";
    readonly Site: "site";
    readonly DiscoursePost: "discourse_post";
    readonly GithubIssue: "github_issue";
    readonly GithubDiscussion: "github_discussion";
    readonly StackoverflowQuestion: "stackoverflow_question";
    readonly DiscordForumPost: "discord_forum_post";
    readonly DiscordMessage: "discord_message";
    readonly CustomQuestionAnswer: "custom_question_answer";
};
export type CreateSupportTicketConversationType1 = ClosedEnum<typeof CreateSupportTicketConversationType1>;
export type CreateSupportTicketConversationMessagesType = CreateSupportTicketConversationType1 | string;
export type CreateSupportTicketConversationLinks = {
    label?: string | null | undefined;
    url: string;
    title?: string | null | undefined;
    description?: string | null | undefined;
    type?: CreateSupportTicketConversationType1 | string | null | undefined;
    breadcrumbs?: Array<string> | null | undefined;
};
/**
 * The unique identifier for the user. This value is sent by the inkeep widget.
 */
export type CreateSupportTicketConversationMessagesId = string | number;
/**
 * The unique identifier for the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export type CreateSupportTicketConversationMessagesUserId = string | number;
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export declare const CreateSupportTicketConversationMessagesUserType: {
    readonly User: "user";
    readonly Member: "member";
};
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export type CreateSupportTicketConversationMessagesUserType = ClosedEnum<typeof CreateSupportTicketConversationMessagesUserType>;
/**
 * A customizable collection of custom properties or attributes. Some properties have first class support for the Inkeep Portal or Widget and are noted in the description.
 */
export type CreateSupportTicketConversationMessagesUserProperties = {
    /**
     * The unique identifier for the user. This value is sent by the inkeep widget.
     */
    id?: string | number | null | undefined;
    /**
     * The type of identification for the user. This value is sent by the inkeep widget.
     */
    identificationType?: string | null | undefined;
    /**
     * The unique identifier for the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
     */
    userId?: string | number | null | undefined;
    /**
     * The name of the support agent assigned to the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
     */
    supportAgentName?: string | null | undefined;
    /**
     * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
     */
    userType?: CreateSupportTicketConversationMessagesUserType | null | undefined;
    additionalProperties?: {
        [k: string]: any;
    };
};
export type CreateSupportTicketConversationMessages = {
    id?: string | undefined;
    externalId?: string | null | undefined;
    externalUrl?: string | null | undefined;
    /**
     * A timestamp in ISO 8601 format with timezone information. If not provided, the current time will be used.
     */
    createdAt?: Date | null | undefined;
    /**
     * A timestamp in ISO 8601 format with timezone information. If not provided, the current time will be used.
     */
    updatedAt?: Date | null | undefined;
    role: string;
    content?: string | null | undefined;
    name?: string | null | undefined;
    links?: Array<CreateSupportTicketConversationLinks> | null | undefined;
    /**
     * A customizable collection of custom properties or attributes.
     */
    properties?: {
        [k: string]: any;
    } | null | undefined;
    /**
     * A customizable collection of custom properties or attributes. Some properties have first class support for the Inkeep Portal or Widget and are noted in the description.
     */
    userProperties?: CreateSupportTicketConversationMessagesUserProperties | null | undefined;
};
export type CreateSupportTicketConversation = {
    id?: string | undefined;
    externalId?: string | null | undefined;
    externalUrl?: string | null | undefined;
    type: CreateSupportTicketConversationType;
    supportTicketConversationId?: string | null | undefined;
    /**
     * A timestamp in ISO 8601 format with timezone information. If not provided, the current time will be used.
     */
    createdAt?: Date | null | undefined;
    /**
     * A timestamp in ISO 8601 format with timezone information. If not provided, the current time will be used.
     */
    updatedAt?: Date | null | undefined;
    projectId?: string | null | undefined;
    integrationId?: string | null | undefined;
    /**
     * A customizable collection of custom properties or attributes.
     */
    properties?: {
        [k: string]: any;
    } | null | undefined;
    /**
     * A customizable collection of custom properties or attributes. Some properties have first class support for the Inkeep Portal or Widget and are noted in the description.
     */
    userProperties?: CreateSupportTicketConversationUserProperties | null | undefined;
    tags?: Array<string> | null | undefined;
    visibility?: CreateSupportTicketConversationVisibility | null | undefined;
    messages: Array<CreateSupportTicketConversationMessages>;
};
/** @internal */
export declare const CreateSupportTicketConversationType$inboundSchema: z.ZodNativeEnum<typeof CreateSupportTicketConversationType>;
/** @internal */
export declare const CreateSupportTicketConversationType$outboundSchema: z.ZodNativeEnum<typeof CreateSupportTicketConversationType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationType$ {
    /** @deprecated use `CreateSupportTicketConversationType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly SupportTicket: "support_ticket";
    }>;
    /** @deprecated use `CreateSupportTicketConversationType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly SupportTicket: "support_ticket";
    }>;
}
/** @internal */
export declare const CreateSupportTicketConversationId$inboundSchema: z.ZodType<CreateSupportTicketConversationId, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateSupportTicketConversationId$Outbound = string | number;
/** @internal */
export declare const CreateSupportTicketConversationId$outboundSchema: z.ZodType<CreateSupportTicketConversationId$Outbound, z.ZodTypeDef, CreateSupportTicketConversationId>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationId$ {
    /** @deprecated use `CreateSupportTicketConversationId$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateSupportTicketConversationId, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateSupportTicketConversationId$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateSupportTicketConversationId$Outbound, z.ZodTypeDef, CreateSupportTicketConversationId>;
    /** @deprecated use `CreateSupportTicketConversationId$Outbound` instead. */
    type Outbound = CreateSupportTicketConversationId$Outbound;
}
export declare function createSupportTicketConversationIdToJSON(createSupportTicketConversationId: CreateSupportTicketConversationId): string;
export declare function createSupportTicketConversationIdFromJSON(jsonString: string): SafeParseResult<CreateSupportTicketConversationId, SDKValidationError>;
/** @internal */
export declare const CreateSupportTicketConversationUserId$inboundSchema: z.ZodType<CreateSupportTicketConversationUserId, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateSupportTicketConversationUserId$Outbound = string | number;
/** @internal */
export declare const CreateSupportTicketConversationUserId$outboundSchema: z.ZodType<CreateSupportTicketConversationUserId$Outbound, z.ZodTypeDef, CreateSupportTicketConversationUserId>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationUserId$ {
    /** @deprecated use `CreateSupportTicketConversationUserId$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateSupportTicketConversationUserId, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateSupportTicketConversationUserId$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateSupportTicketConversationUserId$Outbound, z.ZodTypeDef, CreateSupportTicketConversationUserId>;
    /** @deprecated use `CreateSupportTicketConversationUserId$Outbound` instead. */
    type Outbound = CreateSupportTicketConversationUserId$Outbound;
}
export declare function createSupportTicketConversationUserIdToJSON(createSupportTicketConversationUserId: CreateSupportTicketConversationUserId): string;
export declare function createSupportTicketConversationUserIdFromJSON(jsonString: string): SafeParseResult<CreateSupportTicketConversationUserId, SDKValidationError>;
/** @internal */
export declare const CreateSupportTicketConversationUserType$inboundSchema: z.ZodNativeEnum<typeof CreateSupportTicketConversationUserType>;
/** @internal */
export declare const CreateSupportTicketConversationUserType$outboundSchema: z.ZodNativeEnum<typeof CreateSupportTicketConversationUserType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationUserType$ {
    /** @deprecated use `CreateSupportTicketConversationUserType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly User: "user";
        readonly Member: "member";
    }>;
    /** @deprecated use `CreateSupportTicketConversationUserType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly User: "user";
        readonly Member: "member";
    }>;
}
/** @internal */
export declare const CreateSupportTicketConversationUserProperties$inboundSchema: z.ZodType<CreateSupportTicketConversationUserProperties, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateSupportTicketConversationUserProperties$Outbound = {
    id?: string | number | null | undefined;
    identificationType?: string | null | undefined;
    userId?: string | number | null | undefined;
    supportAgentName?: string | null | undefined;
    userType?: string | null | undefined;
    [additionalProperties: string]: unknown;
};
/** @internal */
export declare const CreateSupportTicketConversationUserProperties$outboundSchema: z.ZodType<CreateSupportTicketConversationUserProperties$Outbound, z.ZodTypeDef, CreateSupportTicketConversationUserProperties>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationUserProperties$ {
    /** @deprecated use `CreateSupportTicketConversationUserProperties$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateSupportTicketConversationUserProperties, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateSupportTicketConversationUserProperties$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateSupportTicketConversationUserProperties$Outbound, z.ZodTypeDef, CreateSupportTicketConversationUserProperties>;
    /** @deprecated use `CreateSupportTicketConversationUserProperties$Outbound` instead. */
    type Outbound = CreateSupportTicketConversationUserProperties$Outbound;
}
export declare function createSupportTicketConversationUserPropertiesToJSON(createSupportTicketConversationUserProperties: CreateSupportTicketConversationUserProperties): string;
export declare function createSupportTicketConversationUserPropertiesFromJSON(jsonString: string): SafeParseResult<CreateSupportTicketConversationUserProperties, SDKValidationError>;
/** @internal */
export declare const CreateSupportTicketConversationVisibility$inboundSchema: z.ZodNativeEnum<typeof CreateSupportTicketConversationVisibility>;
/** @internal */
export declare const CreateSupportTicketConversationVisibility$outboundSchema: z.ZodNativeEnum<typeof CreateSupportTicketConversationVisibility>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationVisibility$ {
    /** @deprecated use `CreateSupportTicketConversationVisibility$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Private: "private";
        readonly Public: "public";
    }>;
    /** @deprecated use `CreateSupportTicketConversationVisibility$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Private: "private";
        readonly Public: "public";
    }>;
}
/** @internal */
export declare const CreateSupportTicketConversationType1$inboundSchema: z.ZodNativeEnum<typeof CreateSupportTicketConversationType1>;
/** @internal */
export declare const CreateSupportTicketConversationType1$outboundSchema: z.ZodNativeEnum<typeof CreateSupportTicketConversationType1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationType1$ {
    /** @deprecated use `CreateSupportTicketConversationType1$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Documentation: "documentation";
        readonly Site: "site";
        readonly DiscoursePost: "discourse_post";
        readonly GithubIssue: "github_issue";
        readonly GithubDiscussion: "github_discussion";
        readonly StackoverflowQuestion: "stackoverflow_question";
        readonly DiscordForumPost: "discord_forum_post";
        readonly DiscordMessage: "discord_message";
        readonly CustomQuestionAnswer: "custom_question_answer";
    }>;
    /** @deprecated use `CreateSupportTicketConversationType1$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Documentation: "documentation";
        readonly Site: "site";
        readonly DiscoursePost: "discourse_post";
        readonly GithubIssue: "github_issue";
        readonly GithubDiscussion: "github_discussion";
        readonly StackoverflowQuestion: "stackoverflow_question";
        readonly DiscordForumPost: "discord_forum_post";
        readonly DiscordMessage: "discord_message";
        readonly CustomQuestionAnswer: "custom_question_answer";
    }>;
}
/** @internal */
export declare const CreateSupportTicketConversationMessagesType$inboundSchema: z.ZodType<CreateSupportTicketConversationMessagesType, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateSupportTicketConversationMessagesType$Outbound = string | string;
/** @internal */
export declare const CreateSupportTicketConversationMessagesType$outboundSchema: z.ZodType<CreateSupportTicketConversationMessagesType$Outbound, z.ZodTypeDef, CreateSupportTicketConversationMessagesType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationMessagesType$ {
    /** @deprecated use `CreateSupportTicketConversationMessagesType$inboundSchema` instead. */
    const inboundSchema: z.ZodType<string, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateSupportTicketConversationMessagesType$outboundSchema` instead. */
    const outboundSchema: z.ZodType<string, z.ZodTypeDef, string>;
    /** @deprecated use `CreateSupportTicketConversationMessagesType$Outbound` instead. */
    type Outbound = CreateSupportTicketConversationMessagesType$Outbound;
}
export declare function createSupportTicketConversationMessagesTypeToJSON(createSupportTicketConversationMessagesType: CreateSupportTicketConversationMessagesType): string;
export declare function createSupportTicketConversationMessagesTypeFromJSON(jsonString: string): SafeParseResult<CreateSupportTicketConversationMessagesType, SDKValidationError>;
/** @internal */
export declare const CreateSupportTicketConversationLinks$inboundSchema: z.ZodType<CreateSupportTicketConversationLinks, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateSupportTicketConversationLinks$Outbound = {
    label?: string | null | undefined;
    url: string;
    title?: string | null | undefined;
    description?: string | null | undefined;
    type?: string | string | null | undefined;
    breadcrumbs?: Array<string> | null | undefined;
};
/** @internal */
export declare const CreateSupportTicketConversationLinks$outboundSchema: z.ZodType<CreateSupportTicketConversationLinks$Outbound, z.ZodTypeDef, CreateSupportTicketConversationLinks>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationLinks$ {
    /** @deprecated use `CreateSupportTicketConversationLinks$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateSupportTicketConversationLinks, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateSupportTicketConversationLinks$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateSupportTicketConversationLinks$Outbound, z.ZodTypeDef, CreateSupportTicketConversationLinks>;
    /** @deprecated use `CreateSupportTicketConversationLinks$Outbound` instead. */
    type Outbound = CreateSupportTicketConversationLinks$Outbound;
}
export declare function createSupportTicketConversationLinksToJSON(createSupportTicketConversationLinks: CreateSupportTicketConversationLinks): string;
export declare function createSupportTicketConversationLinksFromJSON(jsonString: string): SafeParseResult<CreateSupportTicketConversationLinks, SDKValidationError>;
/** @internal */
export declare const CreateSupportTicketConversationMessagesId$inboundSchema: z.ZodType<CreateSupportTicketConversationMessagesId, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateSupportTicketConversationMessagesId$Outbound = string | number;
/** @internal */
export declare const CreateSupportTicketConversationMessagesId$outboundSchema: z.ZodType<CreateSupportTicketConversationMessagesId$Outbound, z.ZodTypeDef, CreateSupportTicketConversationMessagesId>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationMessagesId$ {
    /** @deprecated use `CreateSupportTicketConversationMessagesId$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateSupportTicketConversationMessagesId, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateSupportTicketConversationMessagesId$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateSupportTicketConversationMessagesId$Outbound, z.ZodTypeDef, CreateSupportTicketConversationMessagesId>;
    /** @deprecated use `CreateSupportTicketConversationMessagesId$Outbound` instead. */
    type Outbound = CreateSupportTicketConversationMessagesId$Outbound;
}
export declare function createSupportTicketConversationMessagesIdToJSON(createSupportTicketConversationMessagesId: CreateSupportTicketConversationMessagesId): string;
export declare function createSupportTicketConversationMessagesIdFromJSON(jsonString: string): SafeParseResult<CreateSupportTicketConversationMessagesId, SDKValidationError>;
/** @internal */
export declare const CreateSupportTicketConversationMessagesUserId$inboundSchema: z.ZodType<CreateSupportTicketConversationMessagesUserId, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateSupportTicketConversationMessagesUserId$Outbound = string | number;
/** @internal */
export declare const CreateSupportTicketConversationMessagesUserId$outboundSchema: z.ZodType<CreateSupportTicketConversationMessagesUserId$Outbound, z.ZodTypeDef, CreateSupportTicketConversationMessagesUserId>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationMessagesUserId$ {
    /** @deprecated use `CreateSupportTicketConversationMessagesUserId$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateSupportTicketConversationMessagesUserId, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateSupportTicketConversationMessagesUserId$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateSupportTicketConversationMessagesUserId$Outbound, z.ZodTypeDef, CreateSupportTicketConversationMessagesUserId>;
    /** @deprecated use `CreateSupportTicketConversationMessagesUserId$Outbound` instead. */
    type Outbound = CreateSupportTicketConversationMessagesUserId$Outbound;
}
export declare function createSupportTicketConversationMessagesUserIdToJSON(createSupportTicketConversationMessagesUserId: CreateSupportTicketConversationMessagesUserId): string;
export declare function createSupportTicketConversationMessagesUserIdFromJSON(jsonString: string): SafeParseResult<CreateSupportTicketConversationMessagesUserId, SDKValidationError>;
/** @internal */
export declare const CreateSupportTicketConversationMessagesUserType$inboundSchema: z.ZodNativeEnum<typeof CreateSupportTicketConversationMessagesUserType>;
/** @internal */
export declare const CreateSupportTicketConversationMessagesUserType$outboundSchema: z.ZodNativeEnum<typeof CreateSupportTicketConversationMessagesUserType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationMessagesUserType$ {
    /** @deprecated use `CreateSupportTicketConversationMessagesUserType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly User: "user";
        readonly Member: "member";
    }>;
    /** @deprecated use `CreateSupportTicketConversationMessagesUserType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly User: "user";
        readonly Member: "member";
    }>;
}
/** @internal */
export declare const CreateSupportTicketConversationMessagesUserProperties$inboundSchema: z.ZodType<CreateSupportTicketConversationMessagesUserProperties, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateSupportTicketConversationMessagesUserProperties$Outbound = {
    id?: string | number | null | undefined;
    identificationType?: string | null | undefined;
    userId?: string | number | null | undefined;
    supportAgentName?: string | null | undefined;
    userType?: string | null | undefined;
    [additionalProperties: string]: unknown;
};
/** @internal */
export declare const CreateSupportTicketConversationMessagesUserProperties$outboundSchema: z.ZodType<CreateSupportTicketConversationMessagesUserProperties$Outbound, z.ZodTypeDef, CreateSupportTicketConversationMessagesUserProperties>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationMessagesUserProperties$ {
    /** @deprecated use `CreateSupportTicketConversationMessagesUserProperties$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateSupportTicketConversationMessagesUserProperties, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateSupportTicketConversationMessagesUserProperties$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateSupportTicketConversationMessagesUserProperties$Outbound, z.ZodTypeDef, CreateSupportTicketConversationMessagesUserProperties>;
    /** @deprecated use `CreateSupportTicketConversationMessagesUserProperties$Outbound` instead. */
    type Outbound = CreateSupportTicketConversationMessagesUserProperties$Outbound;
}
export declare function createSupportTicketConversationMessagesUserPropertiesToJSON(createSupportTicketConversationMessagesUserProperties: CreateSupportTicketConversationMessagesUserProperties): string;
export declare function createSupportTicketConversationMessagesUserPropertiesFromJSON(jsonString: string): SafeParseResult<CreateSupportTicketConversationMessagesUserProperties, SDKValidationError>;
/** @internal */
export declare const CreateSupportTicketConversationMessages$inboundSchema: z.ZodType<CreateSupportTicketConversationMessages, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateSupportTicketConversationMessages$Outbound = {
    id?: string | undefined;
    externalId?: string | null | undefined;
    externalUrl?: string | null | undefined;
    createdAt?: string | null | undefined;
    updatedAt?: string | null | undefined;
    role: string;
    content?: string | null | undefined;
    name?: string | null | undefined;
    links?: Array<CreateSupportTicketConversationLinks$Outbound> | null | undefined;
    properties?: {
        [k: string]: any;
    } | null | undefined;
    userProperties?: CreateSupportTicketConversationMessagesUserProperties$Outbound | null | undefined;
};
/** @internal */
export declare const CreateSupportTicketConversationMessages$outboundSchema: z.ZodType<CreateSupportTicketConversationMessages$Outbound, z.ZodTypeDef, CreateSupportTicketConversationMessages>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversationMessages$ {
    /** @deprecated use `CreateSupportTicketConversationMessages$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateSupportTicketConversationMessages, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateSupportTicketConversationMessages$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateSupportTicketConversationMessages$Outbound, z.ZodTypeDef, CreateSupportTicketConversationMessages>;
    /** @deprecated use `CreateSupportTicketConversationMessages$Outbound` instead. */
    type Outbound = CreateSupportTicketConversationMessages$Outbound;
}
export declare function createSupportTicketConversationMessagesToJSON(createSupportTicketConversationMessages: CreateSupportTicketConversationMessages): string;
export declare function createSupportTicketConversationMessagesFromJSON(jsonString: string): SafeParseResult<CreateSupportTicketConversationMessages, SDKValidationError>;
/** @internal */
export declare const CreateSupportTicketConversation$inboundSchema: z.ZodType<CreateSupportTicketConversation, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateSupportTicketConversation$Outbound = {
    id?: string | undefined;
    externalId?: string | null | undefined;
    externalUrl?: string | null | undefined;
    type: string;
    supportTicketConversationId?: string | null | undefined;
    createdAt?: string | null | undefined;
    updatedAt?: string | null | undefined;
    projectId?: string | null | undefined;
    integrationId?: string | null | undefined;
    properties?: {
        [k: string]: any;
    } | null | undefined;
    userProperties?: CreateSupportTicketConversationUserProperties$Outbound | null | undefined;
    tags?: Array<string> | null | undefined;
    visibility?: string | null | undefined;
    messages: Array<CreateSupportTicketConversationMessages$Outbound>;
};
/** @internal */
export declare const CreateSupportTicketConversation$outboundSchema: z.ZodType<CreateSupportTicketConversation$Outbound, z.ZodTypeDef, CreateSupportTicketConversation>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSupportTicketConversation$ {
    /** @deprecated use `CreateSupportTicketConversation$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateSupportTicketConversation, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateSupportTicketConversation$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateSupportTicketConversation$Outbound, z.ZodTypeDef, CreateSupportTicketConversation>;
    /** @deprecated use `CreateSupportTicketConversation$Outbound` instead. */
    type Outbound = CreateSupportTicketConversation$Outbound;
}
export declare function createSupportTicketConversationToJSON(createSupportTicketConversation: CreateSupportTicketConversation): string;
export declare function createSupportTicketConversationFromJSON(jsonString: string): SafeParseResult<CreateSupportTicketConversation, SDKValidationError>;
//# sourceMappingURL=createsupportticketconversation.d.ts.map