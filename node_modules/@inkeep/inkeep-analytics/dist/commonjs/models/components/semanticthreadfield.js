"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SemanticThreadField$ = exports.SemanticThreadField$outboundSchema = exports.SemanticThreadField$inboundSchema = exports.SemanticThreadField = void 0;
const z = __importStar(require("zod"));
/**
 * Available fields for SemanticThread
 */
exports.SemanticThreadField = {
    Id: "id",
    MessageIds: "messageIds",
    MessagesCount: "messagesCount",
    OrganizationId: "organizationId",
    Question: "question",
    QuestionLength: "questionLength",
    Answer: "answer",
    IsOnTopic: "isOnTopic",
    IsClear: "isClear",
    IsDocumented: "isDocumented",
    IsFeatureSupported: "isFeatureSupported",
    IsAnswerConfident: "isAnswerConfident",
    GapSummary: "gapSummary",
    Subject: "subject",
    Category: "category",
    Languages: "languages",
    FirstPartyEntities: "firstPartyEntities",
    ThirdPartyEntities: "thirdPartyEntities",
    Emotion: "emotion",
    Sentiment: "sentiment",
    QuestionType: "questionType",
    ProjectId: "projectId",
    IntegrationId: "integrationId",
    Properties: "properties",
    UserProperties: "userProperties",
    FirstMessageTime: "firstMessageTime",
    LastMessageTime: "lastMessageTime",
    LastUpdated: "lastUpdated",
    HasPositiveFeedback: "hasPositiveFeedback",
    HasNegativeFeedback: "hasNegativeFeedback",
    ConversationIds: "conversationIds",
    AreAIAnnotationsVerified: "areAIAnnotationsVerified",
    IsInitialQuestionAnswer: "isInitialQuestionAnswer",
};
/** @internal */
exports.SemanticThreadField$inboundSchema = z.nativeEnum(exports.SemanticThreadField);
/** @internal */
exports.SemanticThreadField$outboundSchema = exports.SemanticThreadField$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SemanticThreadField$;
(function (SemanticThreadField$) {
    /** @deprecated use `SemanticThreadField$inboundSchema` instead. */
    SemanticThreadField$.inboundSchema = exports.SemanticThreadField$inboundSchema;
    /** @deprecated use `SemanticThreadField$outboundSchema` instead. */
    SemanticThreadField$.outboundSchema = exports.SemanticThreadField$outboundSchema;
})(SemanticThreadField$ || (exports.SemanticThreadField$ = SemanticThreadField$ = {}));
//# sourceMappingURL=semanticthreadfield.js.map