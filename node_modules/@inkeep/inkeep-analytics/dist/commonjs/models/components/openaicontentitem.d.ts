import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { OpenAIImageUrlObject, OpenAIImageUrlObject$Outbound } from "./openaiimageurlobject.js";
export declare const OpenAIContentItemType: {
    readonly Text: "text";
    readonly ImageUrl: "image_url";
};
export type OpenAIContentItemType = ClosedEnum<typeof OpenAIContentItemType>;
export type OpenAIContentItem = {
    type: OpenAIContentItemType;
    text?: string | null | undefined;
    imageUrl?: OpenAIImageUrlObject | null | undefined;
};
/** @internal */
export declare const OpenAIContentItemType$inboundSchema: z.ZodNativeEnum<typeof OpenAIContentItemType>;
/** @internal */
export declare const OpenAIContentItemType$outboundSchema: z.ZodNativeEnum<typeof OpenAIContentItemType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OpenAIContentItemType$ {
    /** @deprecated use `OpenAIContentItemType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Text: "text";
        readonly ImageUrl: "image_url";
    }>;
    /** @deprecated use `OpenAIContentItemType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Text: "text";
        readonly ImageUrl: "image_url";
    }>;
}
/** @internal */
export declare const OpenAIContentItem$inboundSchema: z.ZodType<OpenAIContentItem, z.ZodTypeDef, unknown>;
/** @internal */
export type OpenAIContentItem$Outbound = {
    type: string;
    text?: string | null | undefined;
    image_url?: OpenAIImageUrlObject$Outbound | null | undefined;
};
/** @internal */
export declare const OpenAIContentItem$outboundSchema: z.ZodType<OpenAIContentItem$Outbound, z.ZodTypeDef, OpenAIContentItem>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OpenAIContentItem$ {
    /** @deprecated use `OpenAIContentItem$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OpenAIContentItem, z.ZodTypeDef, unknown>;
    /** @deprecated use `OpenAIContentItem$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OpenAIContentItem$Outbound, z.ZodTypeDef, OpenAIContentItem>;
    /** @deprecated use `OpenAIContentItem$Outbound` instead. */
    type Outbound = OpenAIContentItem$Outbound;
}
export declare function openAIContentItemToJSON(openAIContentItem: OpenAIContentItem): string;
export declare function openAIContentItemFromJSON(jsonString: string): SafeParseResult<OpenAIContentItem, SDKValidationError>;
//# sourceMappingURL=openaicontentitem.d.ts.map