import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { FeedbackFilter, FeedbackFilter$Outbound } from "./feedbackfilter.js";
import { FeedbackGroupBy, FeedbackGroupBy$Outbound } from "./feedbackgroupby.js";
import { FeedbackOrderBy, FeedbackOrderBy$Outbound } from "./feedbackorderby.js";
import { FeedbackSelection, FeedbackSelection$Outbound } from "./feedbackselection.js";
/**
 * Query Feedback Params
 */
export type QueryFeedbackRequestBody = {
    select?: Array<FeedbackSelection> | undefined;
    groupBy?: Array<FeedbackGroupBy> | undefined;
    where?: FeedbackFilter | undefined;
    orderBy?: Array<FeedbackOrderBy> | undefined;
    /**
     * Notes are not persisted, but may be useful for your debugging purposes
     */
    notes?: string | undefined;
};
/** @internal */
export declare const QueryFeedbackRequestBody$inboundSchema: z.ZodType<QueryFeedbackRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryFeedbackRequestBody$Outbound = {
    select?: Array<FeedbackSelection$Outbound> | undefined;
    groupBy?: Array<FeedbackGroupBy$Outbound> | undefined;
    where?: FeedbackFilter$Outbound | undefined;
    orderBy?: Array<FeedbackOrderBy$Outbound> | undefined;
    notes?: string | undefined;
};
/** @internal */
export declare const QueryFeedbackRequestBody$outboundSchema: z.ZodType<QueryFeedbackRequestBody$Outbound, z.ZodTypeDef, QueryFeedbackRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryFeedbackRequestBody$ {
    /** @deprecated use `QueryFeedbackRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryFeedbackRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryFeedbackRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryFeedbackRequestBody$Outbound, z.ZodTypeDef, QueryFeedbackRequestBody>;
    /** @deprecated use `QueryFeedbackRequestBody$Outbound` instead. */
    type Outbound = QueryFeedbackRequestBody$Outbound;
}
export declare function queryFeedbackRequestBodyToJSON(queryFeedbackRequestBody: QueryFeedbackRequestBody): string;
export declare function queryFeedbackRequestBodyFromJSON(jsonString: string): SafeParseResult<QueryFeedbackRequestBody, SDKValidationError>;
//# sourceMappingURL=queryfeedbackrequestbody.d.ts.map