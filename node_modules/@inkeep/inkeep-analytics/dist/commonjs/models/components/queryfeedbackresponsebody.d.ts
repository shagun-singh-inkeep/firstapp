import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { QueryFeedbackResponseData, QueryFeedbackResponseData$Outbound } from "./queryfeedbackresponsedata.js";
/**
 * Status of the response
 */
export declare const QueryFeedbackResponseBodyStatus: {
    readonly Ok: "ok";
};
/**
 * Status of the response
 */
export type QueryFeedbackResponseBodyStatus = ClosedEnum<typeof QueryFeedbackResponseBodyStatus>;
/**
 * Response body for QueryFeedback query endpoint
 */
export type QueryFeedbackResponseBody = {
    /**
     * Status of the response
     */
    status: QueryFeedbackResponseBodyStatus;
    /**
     * Data object containing QueryFeedback query results and pagination information
     */
    data: QueryFeedbackResponseData;
};
/** @internal */
export declare const QueryFeedbackResponseBodyStatus$inboundSchema: z.ZodNativeEnum<typeof QueryFeedbackResponseBodyStatus>;
/** @internal */
export declare const QueryFeedbackResponseBodyStatus$outboundSchema: z.ZodNativeEnum<typeof QueryFeedbackResponseBodyStatus>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryFeedbackResponseBodyStatus$ {
    /** @deprecated use `QueryFeedbackResponseBodyStatus$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Ok: "ok";
    }>;
    /** @deprecated use `QueryFeedbackResponseBodyStatus$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Ok: "ok";
    }>;
}
/** @internal */
export declare const QueryFeedbackResponseBody$inboundSchema: z.ZodType<QueryFeedbackResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryFeedbackResponseBody$Outbound = {
    status: string;
    data: QueryFeedbackResponseData$Outbound;
};
/** @internal */
export declare const QueryFeedbackResponseBody$outboundSchema: z.ZodType<QueryFeedbackResponseBody$Outbound, z.ZodTypeDef, QueryFeedbackResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryFeedbackResponseBody$ {
    /** @deprecated use `QueryFeedbackResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryFeedbackResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryFeedbackResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryFeedbackResponseBody$Outbound, z.ZodTypeDef, QueryFeedbackResponseBody>;
    /** @deprecated use `QueryFeedbackResponseBody$Outbound` instead. */
    type Outbound = QueryFeedbackResponseBody$Outbound;
}
export declare function queryFeedbackResponseBodyToJSON(queryFeedbackResponseBody: QueryFeedbackResponseBody): string;
export declare function queryFeedbackResponseBodyFromJSON(jsonString: string): SafeParseResult<QueryFeedbackResponseBody, SDKValidationError>;
//# sourceMappingURL=queryfeedbackresponsebody.d.ts.map