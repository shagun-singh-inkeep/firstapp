"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversationsTimeBasedGroupBySelection$ = exports.ConversationsTimeBasedGroupBySelection$outboundSchema = exports.ConversationsTimeBasedGroupBySelection$inboundSchema = exports.ConversationsTimeBasedGroupBySelectionField$ = exports.ConversationsTimeBasedGroupBySelectionField$outboundSchema = exports.ConversationsTimeBasedGroupBySelectionField$inboundSchema = exports.ConversationsTimeBasedGroupBySelectionType$ = exports.ConversationsTimeBasedGroupBySelectionType$outboundSchema = exports.ConversationsTimeBasedGroupBySelectionType$inboundSchema = exports.ConversationsTimeBasedGroupBySelectionField = exports.ConversationsTimeBasedGroupBySelectionType = void 0;
exports.conversationsTimeBasedGroupBySelectionToJSON = conversationsTimeBasedGroupBySelectionToJSON;
exports.conversationsTimeBasedGroupBySelectionFromJSON = conversationsTimeBasedGroupBySelectionFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const timeunit_js_1 = require("./timeunit.js");
exports.ConversationsTimeBasedGroupBySelectionType = {
    Time: "time",
};
exports.ConversationsTimeBasedGroupBySelectionField = {
    Id: "id",
    UserMessageCount: "userMessageCount",
    OrganizationId: "organizationId",
    ProjectId: "projectId",
    IntegrationId: "integrationId",
    FirstMessageTime: "firstMessageTime",
    Type: "type",
    Properties: "properties",
    UserProperties: "userProperties",
};
/** @internal */
exports.ConversationsTimeBasedGroupBySelectionType$inboundSchema = z
    .nativeEnum(exports.ConversationsTimeBasedGroupBySelectionType);
/** @internal */
exports.ConversationsTimeBasedGroupBySelectionType$outboundSchema = exports.ConversationsTimeBasedGroupBySelectionType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ConversationsTimeBasedGroupBySelectionType$;
(function (ConversationsTimeBasedGroupBySelectionType$) {
    /** @deprecated use `ConversationsTimeBasedGroupBySelectionType$inboundSchema` instead. */
    ConversationsTimeBasedGroupBySelectionType$.inboundSchema = exports.ConversationsTimeBasedGroupBySelectionType$inboundSchema;
    /** @deprecated use `ConversationsTimeBasedGroupBySelectionType$outboundSchema` instead. */
    ConversationsTimeBasedGroupBySelectionType$.outboundSchema = exports.ConversationsTimeBasedGroupBySelectionType$outboundSchema;
})(ConversationsTimeBasedGroupBySelectionType$ || (exports.ConversationsTimeBasedGroupBySelectionType$ = ConversationsTimeBasedGroupBySelectionType$ = {}));
/** @internal */
exports.ConversationsTimeBasedGroupBySelectionField$inboundSchema = z
    .nativeEnum(exports.ConversationsTimeBasedGroupBySelectionField);
/** @internal */
exports.ConversationsTimeBasedGroupBySelectionField$outboundSchema = exports.ConversationsTimeBasedGroupBySelectionField$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ConversationsTimeBasedGroupBySelectionField$;
(function (ConversationsTimeBasedGroupBySelectionField$) {
    /** @deprecated use `ConversationsTimeBasedGroupBySelectionField$inboundSchema` instead. */
    ConversationsTimeBasedGroupBySelectionField$.inboundSchema = exports.ConversationsTimeBasedGroupBySelectionField$inboundSchema;
    /** @deprecated use `ConversationsTimeBasedGroupBySelectionField$outboundSchema` instead. */
    ConversationsTimeBasedGroupBySelectionField$.outboundSchema = exports.ConversationsTimeBasedGroupBySelectionField$outboundSchema;
})(ConversationsTimeBasedGroupBySelectionField$ || (exports.ConversationsTimeBasedGroupBySelectionField$ = ConversationsTimeBasedGroupBySelectionField$ = {}));
/** @internal */
exports.ConversationsTimeBasedGroupBySelection$inboundSchema = z.object({
    type: exports.ConversationsTimeBasedGroupBySelectionType$inboundSchema,
    timeUnit: timeunit_js_1.TimeUnit$inboundSchema,
    field: exports.ConversationsTimeBasedGroupBySelectionField$inboundSchema.optional(),
});
/** @internal */
exports.ConversationsTimeBasedGroupBySelection$outboundSchema = z.object({
    type: exports.ConversationsTimeBasedGroupBySelectionType$outboundSchema,
    timeUnit: timeunit_js_1.TimeUnit$outboundSchema,
    field: exports.ConversationsTimeBasedGroupBySelectionField$outboundSchema.optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ConversationsTimeBasedGroupBySelection$;
(function (ConversationsTimeBasedGroupBySelection$) {
    /** @deprecated use `ConversationsTimeBasedGroupBySelection$inboundSchema` instead. */
    ConversationsTimeBasedGroupBySelection$.inboundSchema = exports.ConversationsTimeBasedGroupBySelection$inboundSchema;
    /** @deprecated use `ConversationsTimeBasedGroupBySelection$outboundSchema` instead. */
    ConversationsTimeBasedGroupBySelection$.outboundSchema = exports.ConversationsTimeBasedGroupBySelection$outboundSchema;
})(ConversationsTimeBasedGroupBySelection$ || (exports.ConversationsTimeBasedGroupBySelection$ = ConversationsTimeBasedGroupBySelection$ = {}));
function conversationsTimeBasedGroupBySelectionToJSON(conversationsTimeBasedGroupBySelection) {
    return JSON.stringify(exports.ConversationsTimeBasedGroupBySelection$outboundSchema.parse(conversationsTimeBasedGroupBySelection));
}
function conversationsTimeBasedGroupBySelectionFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ConversationsTimeBasedGroupBySelection$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConversationsTimeBasedGroupBySelection' from JSON`);
}
//# sourceMappingURL=conversationstimebasedgroupbyselection.js.map