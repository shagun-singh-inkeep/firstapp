import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export declare const EventsSimpleFieldSelectionType: {
    readonly Field: "field";
};
export type EventsSimpleFieldSelectionType = ClosedEnum<typeof EventsSimpleFieldSelectionType>;
export declare const EventsSimpleFieldSelectionField: {
    readonly Id: "id";
    readonly OrganizationId: "organizationId";
    readonly MessageId: "messageId";
    readonly ConversationId: "conversationId";
    readonly CreatedAt: "createdAt";
    readonly ProjectId: "projectId";
    readonly IntegrationId: "integrationId";
    readonly EventType: "eventType";
    readonly Type: "type";
    readonly SearchQuery: "searchQuery";
    readonly Properties: "properties";
    readonly UserProperties: "userProperties";
};
export type EventsSimpleFieldSelectionField = ClosedEnum<typeof EventsSimpleFieldSelectionField>;
export type EventsSimpleFieldSelection = {
    type: EventsSimpleFieldSelectionType;
    field: EventsSimpleFieldSelectionField;
    path?: Array<string> | undefined;
};
/** @internal */
export declare const EventsSimpleFieldSelectionType$inboundSchema: z.ZodNativeEnum<typeof EventsSimpleFieldSelectionType>;
/** @internal */
export declare const EventsSimpleFieldSelectionType$outboundSchema: z.ZodNativeEnum<typeof EventsSimpleFieldSelectionType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EventsSimpleFieldSelectionType$ {
    /** @deprecated use `EventsSimpleFieldSelectionType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Field: "field";
    }>;
    /** @deprecated use `EventsSimpleFieldSelectionType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Field: "field";
    }>;
}
/** @internal */
export declare const EventsSimpleFieldSelectionField$inboundSchema: z.ZodNativeEnum<typeof EventsSimpleFieldSelectionField>;
/** @internal */
export declare const EventsSimpleFieldSelectionField$outboundSchema: z.ZodNativeEnum<typeof EventsSimpleFieldSelectionField>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EventsSimpleFieldSelectionField$ {
    /** @deprecated use `EventsSimpleFieldSelectionField$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Id: "id";
        readonly OrganizationId: "organizationId";
        readonly MessageId: "messageId";
        readonly ConversationId: "conversationId";
        readonly CreatedAt: "createdAt";
        readonly ProjectId: "projectId";
        readonly IntegrationId: "integrationId";
        readonly EventType: "eventType";
        readonly Type: "type";
        readonly SearchQuery: "searchQuery";
        readonly Properties: "properties";
        readonly UserProperties: "userProperties";
    }>;
    /** @deprecated use `EventsSimpleFieldSelectionField$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Id: "id";
        readonly OrganizationId: "organizationId";
        readonly MessageId: "messageId";
        readonly ConversationId: "conversationId";
        readonly CreatedAt: "createdAt";
        readonly ProjectId: "projectId";
        readonly IntegrationId: "integrationId";
        readonly EventType: "eventType";
        readonly Type: "type";
        readonly SearchQuery: "searchQuery";
        readonly Properties: "properties";
        readonly UserProperties: "userProperties";
    }>;
}
/** @internal */
export declare const EventsSimpleFieldSelection$inboundSchema: z.ZodType<EventsSimpleFieldSelection, z.ZodTypeDef, unknown>;
/** @internal */
export type EventsSimpleFieldSelection$Outbound = {
    type: string;
    field: string;
    path?: Array<string> | undefined;
};
/** @internal */
export declare const EventsSimpleFieldSelection$outboundSchema: z.ZodType<EventsSimpleFieldSelection$Outbound, z.ZodTypeDef, EventsSimpleFieldSelection>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EventsSimpleFieldSelection$ {
    /** @deprecated use `EventsSimpleFieldSelection$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EventsSimpleFieldSelection, z.ZodTypeDef, unknown>;
    /** @deprecated use `EventsSimpleFieldSelection$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EventsSimpleFieldSelection$Outbound, z.ZodTypeDef, EventsSimpleFieldSelection>;
    /** @deprecated use `EventsSimpleFieldSelection$Outbound` instead. */
    type Outbound = EventsSimpleFieldSelection$Outbound;
}
export declare function eventsSimpleFieldSelectionToJSON(eventsSimpleFieldSelection: EventsSimpleFieldSelection): string;
export declare function eventsSimpleFieldSelectionFromJSON(jsonString: string): SafeParseResult<EventsSimpleFieldSelection, SDKValidationError>;
//# sourceMappingURL=eventssimplefieldselection.d.ts.map