import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export declare const ConversationsSimpleFieldSelectionType: {
    readonly Field: "field";
};
export type ConversationsSimpleFieldSelectionType = ClosedEnum<typeof ConversationsSimpleFieldSelectionType>;
export declare const ConversationsSimpleFieldSelectionField: {
    readonly Id: "id";
    readonly UserMessageCount: "userMessageCount";
    readonly OrganizationId: "organizationId";
    readonly ProjectId: "projectId";
    readonly IntegrationId: "integrationId";
    readonly FirstMessageTime: "firstMessageTime";
    readonly Type: "type";
    readonly Properties: "properties";
    readonly UserProperties: "userProperties";
};
export type ConversationsSimpleFieldSelectionField = ClosedEnum<typeof ConversationsSimpleFieldSelectionField>;
export type ConversationsSimpleFieldSelection = {
    type: ConversationsSimpleFieldSelectionType;
    field: ConversationsSimpleFieldSelectionField;
    path?: Array<string> | undefined;
};
/** @internal */
export declare const ConversationsSimpleFieldSelectionType$inboundSchema: z.ZodNativeEnum<typeof ConversationsSimpleFieldSelectionType>;
/** @internal */
export declare const ConversationsSimpleFieldSelectionType$outboundSchema: z.ZodNativeEnum<typeof ConversationsSimpleFieldSelectionType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ConversationsSimpleFieldSelectionType$ {
    /** @deprecated use `ConversationsSimpleFieldSelectionType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Field: "field";
    }>;
    /** @deprecated use `ConversationsSimpleFieldSelectionType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Field: "field";
    }>;
}
/** @internal */
export declare const ConversationsSimpleFieldSelectionField$inboundSchema: z.ZodNativeEnum<typeof ConversationsSimpleFieldSelectionField>;
/** @internal */
export declare const ConversationsSimpleFieldSelectionField$outboundSchema: z.ZodNativeEnum<typeof ConversationsSimpleFieldSelectionField>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ConversationsSimpleFieldSelectionField$ {
    /** @deprecated use `ConversationsSimpleFieldSelectionField$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Id: "id";
        readonly UserMessageCount: "userMessageCount";
        readonly OrganizationId: "organizationId";
        readonly ProjectId: "projectId";
        readonly IntegrationId: "integrationId";
        readonly FirstMessageTime: "firstMessageTime";
        readonly Type: "type";
        readonly Properties: "properties";
        readonly UserProperties: "userProperties";
    }>;
    /** @deprecated use `ConversationsSimpleFieldSelectionField$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Id: "id";
        readonly UserMessageCount: "userMessageCount";
        readonly OrganizationId: "organizationId";
        readonly ProjectId: "projectId";
        readonly IntegrationId: "integrationId";
        readonly FirstMessageTime: "firstMessageTime";
        readonly Type: "type";
        readonly Properties: "properties";
        readonly UserProperties: "userProperties";
    }>;
}
/** @internal */
export declare const ConversationsSimpleFieldSelection$inboundSchema: z.ZodType<ConversationsSimpleFieldSelection, z.ZodTypeDef, unknown>;
/** @internal */
export type ConversationsSimpleFieldSelection$Outbound = {
    type: string;
    field: string;
    path?: Array<string> | undefined;
};
/** @internal */
export declare const ConversationsSimpleFieldSelection$outboundSchema: z.ZodType<ConversationsSimpleFieldSelection$Outbound, z.ZodTypeDef, ConversationsSimpleFieldSelection>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ConversationsSimpleFieldSelection$ {
    /** @deprecated use `ConversationsSimpleFieldSelection$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ConversationsSimpleFieldSelection, z.ZodTypeDef, unknown>;
    /** @deprecated use `ConversationsSimpleFieldSelection$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ConversationsSimpleFieldSelection$Outbound, z.ZodTypeDef, ConversationsSimpleFieldSelection>;
    /** @deprecated use `ConversationsSimpleFieldSelection$Outbound` instead. */
    type Outbound = ConversationsSimpleFieldSelection$Outbound;
}
export declare function conversationsSimpleFieldSelectionToJSON(conversationsSimpleFieldSelection: ConversationsSimpleFieldSelection): string;
export declare function conversationsSimpleFieldSelectionFromJSON(jsonString: string): SafeParseResult<ConversationsSimpleFieldSelection, SDKValidationError>;
//# sourceMappingURL=conversationssimplefieldselection.d.ts.map