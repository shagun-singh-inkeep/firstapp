import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type PropertyKeysResponseBody = {
    results: Array<string>;
};
/** @internal */
export declare const PropertyKeysResponseBody$inboundSchema: z.ZodType<PropertyKeysResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PropertyKeysResponseBody$Outbound = {
    results: Array<string>;
};
/** @internal */
export declare const PropertyKeysResponseBody$outboundSchema: z.ZodType<PropertyKeysResponseBody$Outbound, z.ZodTypeDef, PropertyKeysResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PropertyKeysResponseBody$ {
    /** @deprecated use `PropertyKeysResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PropertyKeysResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PropertyKeysResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PropertyKeysResponseBody$Outbound, z.ZodTypeDef, PropertyKeysResponseBody>;
    /** @deprecated use `PropertyKeysResponseBody$Outbound` instead. */
    type Outbound = PropertyKeysResponseBody$Outbound;
}
export declare function propertyKeysResponseBodyToJSON(propertyKeysResponseBody: PropertyKeysResponseBody): string;
export declare function propertyKeysResponseBodyFromJSON(jsonString: string): SafeParseResult<PropertyKeysResponseBody, SDKValidationError>;
//# sourceMappingURL=propertykeysresponsebody.d.ts.map