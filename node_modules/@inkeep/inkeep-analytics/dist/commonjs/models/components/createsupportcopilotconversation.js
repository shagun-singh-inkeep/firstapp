"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateSupportCopilotConversation$ = exports.CreateSupportCopilotConversation$outboundSchema = exports.CreateSupportCopilotConversation$inboundSchema = exports.CreateSupportCopilotConversationMessages$ = exports.CreateSupportCopilotConversationMessages$outboundSchema = exports.CreateSupportCopilotConversationMessages$inboundSchema = exports.CreateSupportCopilotConversationMessagesUserProperties$ = exports.CreateSupportCopilotConversationMessagesUserProperties$outboundSchema = exports.CreateSupportCopilotConversationMessagesUserProperties$inboundSchema = exports.CreateSupportCopilotConversationMessagesUserType$ = exports.CreateSupportCopilotConversationMessagesUserType$outboundSchema = exports.CreateSupportCopilotConversationMessagesUserType$inboundSchema = exports.CreateSupportCopilotConversationMessagesUserId$ = exports.CreateSupportCopilotConversationMessagesUserId$outboundSchema = exports.CreateSupportCopilotConversationMessagesUserId$inboundSchema = exports.CreateSupportCopilotConversationMessagesId$ = exports.CreateSupportCopilotConversationMessagesId$outboundSchema = exports.CreateSupportCopilotConversationMessagesId$inboundSchema = exports.CreateSupportCopilotConversationLinks$ = exports.CreateSupportCopilotConversationLinks$outboundSchema = exports.CreateSupportCopilotConversationLinks$inboundSchema = exports.CreateSupportCopilotConversationMessagesType$ = exports.CreateSupportCopilotConversationMessagesType$outboundSchema = exports.CreateSupportCopilotConversationMessagesType$inboundSchema = exports.CreateSupportCopilotConversationType1$ = exports.CreateSupportCopilotConversationType1$outboundSchema = exports.CreateSupportCopilotConversationType1$inboundSchema = exports.CreateSupportCopilotConversationVisibility$ = exports.CreateSupportCopilotConversationVisibility$outboundSchema = exports.CreateSupportCopilotConversationVisibility$inboundSchema = exports.CreateSupportCopilotConversationUserProperties$ = exports.CreateSupportCopilotConversationUserProperties$outboundSchema = exports.CreateSupportCopilotConversationUserProperties$inboundSchema = exports.CreateSupportCopilotConversationUserType$ = exports.CreateSupportCopilotConversationUserType$outboundSchema = exports.CreateSupportCopilotConversationUserType$inboundSchema = exports.CreateSupportCopilotConversationUserId$ = exports.CreateSupportCopilotConversationUserId$outboundSchema = exports.CreateSupportCopilotConversationUserId$inboundSchema = exports.CreateSupportCopilotConversationId$ = exports.CreateSupportCopilotConversationId$outboundSchema = exports.CreateSupportCopilotConversationId$inboundSchema = exports.CreateSupportCopilotConversationType$ = exports.CreateSupportCopilotConversationType$outboundSchema = exports.CreateSupportCopilotConversationType$inboundSchema = exports.CreateSupportCopilotConversationMessagesUserType = exports.CreateSupportCopilotConversationType1 = exports.CreateSupportCopilotConversationVisibility = exports.CreateSupportCopilotConversationUserType = exports.CreateSupportCopilotConversationType = void 0;
exports.createSupportCopilotConversationIdToJSON = createSupportCopilotConversationIdToJSON;
exports.createSupportCopilotConversationIdFromJSON = createSupportCopilotConversationIdFromJSON;
exports.createSupportCopilotConversationUserIdToJSON = createSupportCopilotConversationUserIdToJSON;
exports.createSupportCopilotConversationUserIdFromJSON = createSupportCopilotConversationUserIdFromJSON;
exports.createSupportCopilotConversationUserPropertiesToJSON = createSupportCopilotConversationUserPropertiesToJSON;
exports.createSupportCopilotConversationUserPropertiesFromJSON = createSupportCopilotConversationUserPropertiesFromJSON;
exports.createSupportCopilotConversationMessagesTypeToJSON = createSupportCopilotConversationMessagesTypeToJSON;
exports.createSupportCopilotConversationMessagesTypeFromJSON = createSupportCopilotConversationMessagesTypeFromJSON;
exports.createSupportCopilotConversationLinksToJSON = createSupportCopilotConversationLinksToJSON;
exports.createSupportCopilotConversationLinksFromJSON = createSupportCopilotConversationLinksFromJSON;
exports.createSupportCopilotConversationMessagesIdToJSON = createSupportCopilotConversationMessagesIdToJSON;
exports.createSupportCopilotConversationMessagesIdFromJSON = createSupportCopilotConversationMessagesIdFromJSON;
exports.createSupportCopilotConversationMessagesUserIdToJSON = createSupportCopilotConversationMessagesUserIdToJSON;
exports.createSupportCopilotConversationMessagesUserIdFromJSON = createSupportCopilotConversationMessagesUserIdFromJSON;
exports.createSupportCopilotConversationMessagesUserPropertiesToJSON = createSupportCopilotConversationMessagesUserPropertiesToJSON;
exports.createSupportCopilotConversationMessagesUserPropertiesFromJSON = createSupportCopilotConversationMessagesUserPropertiesFromJSON;
exports.createSupportCopilotConversationMessagesToJSON = createSupportCopilotConversationMessagesToJSON;
exports.createSupportCopilotConversationMessagesFromJSON = createSupportCopilotConversationMessagesFromJSON;
exports.createSupportCopilotConversationToJSON = createSupportCopilotConversationToJSON;
exports.createSupportCopilotConversationFromJSON = createSupportCopilotConversationFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
exports.CreateSupportCopilotConversationType = {
    SupportCopilot: "support_copilot",
};
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
exports.CreateSupportCopilotConversationUserType = {
    User: "user",
    Member: "member",
};
exports.CreateSupportCopilotConversationVisibility = {
    Private: "private",
    Public: "public",
};
exports.CreateSupportCopilotConversationType1 = {
    Documentation: "documentation",
    Site: "site",
    DiscoursePost: "discourse_post",
    GithubIssue: "github_issue",
    GithubDiscussion: "github_discussion",
    StackoverflowQuestion: "stackoverflow_question",
    DiscordForumPost: "discord_forum_post",
    DiscordMessage: "discord_message",
    CustomQuestionAnswer: "custom_question_answer",
};
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
exports.CreateSupportCopilotConversationMessagesUserType = {
    User: "user",
    Member: "member",
};
/** @internal */
exports.CreateSupportCopilotConversationType$inboundSchema = z.nativeEnum(exports.CreateSupportCopilotConversationType);
/** @internal */
exports.CreateSupportCopilotConversationType$outboundSchema = exports.CreateSupportCopilotConversationType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationType$;
(function (CreateSupportCopilotConversationType$) {
    /** @deprecated use `CreateSupportCopilotConversationType$inboundSchema` instead. */
    CreateSupportCopilotConversationType$.inboundSchema = exports.CreateSupportCopilotConversationType$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationType$outboundSchema` instead. */
    CreateSupportCopilotConversationType$.outboundSchema = exports.CreateSupportCopilotConversationType$outboundSchema;
})(CreateSupportCopilotConversationType$ || (exports.CreateSupportCopilotConversationType$ = CreateSupportCopilotConversationType$ = {}));
/** @internal */
exports.CreateSupportCopilotConversationId$inboundSchema = z.union([z.string(), z.number()]);
/** @internal */
exports.CreateSupportCopilotConversationId$outboundSchema = z.union([z.string(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationId$;
(function (CreateSupportCopilotConversationId$) {
    /** @deprecated use `CreateSupportCopilotConversationId$inboundSchema` instead. */
    CreateSupportCopilotConversationId$.inboundSchema = exports.CreateSupportCopilotConversationId$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationId$outboundSchema` instead. */
    CreateSupportCopilotConversationId$.outboundSchema = exports.CreateSupportCopilotConversationId$outboundSchema;
})(CreateSupportCopilotConversationId$ || (exports.CreateSupportCopilotConversationId$ = CreateSupportCopilotConversationId$ = {}));
function createSupportCopilotConversationIdToJSON(createSupportCopilotConversationId) {
    return JSON.stringify(exports.CreateSupportCopilotConversationId$outboundSchema.parse(createSupportCopilotConversationId));
}
function createSupportCopilotConversationIdFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateSupportCopilotConversationId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportCopilotConversationId' from JSON`);
}
/** @internal */
exports.CreateSupportCopilotConversationUserId$inboundSchema = z.union([z.string(), z.number()]);
/** @internal */
exports.CreateSupportCopilotConversationUserId$outboundSchema = z.union([z.string(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationUserId$;
(function (CreateSupportCopilotConversationUserId$) {
    /** @deprecated use `CreateSupportCopilotConversationUserId$inboundSchema` instead. */
    CreateSupportCopilotConversationUserId$.inboundSchema = exports.CreateSupportCopilotConversationUserId$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationUserId$outboundSchema` instead. */
    CreateSupportCopilotConversationUserId$.outboundSchema = exports.CreateSupportCopilotConversationUserId$outboundSchema;
})(CreateSupportCopilotConversationUserId$ || (exports.CreateSupportCopilotConversationUserId$ = CreateSupportCopilotConversationUserId$ = {}));
function createSupportCopilotConversationUserIdToJSON(createSupportCopilotConversationUserId) {
    return JSON.stringify(exports.CreateSupportCopilotConversationUserId$outboundSchema.parse(createSupportCopilotConversationUserId));
}
function createSupportCopilotConversationUserIdFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateSupportCopilotConversationUserId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportCopilotConversationUserId' from JSON`);
}
/** @internal */
exports.CreateSupportCopilotConversationUserType$inboundSchema = z
    .nativeEnum(exports.CreateSupportCopilotConversationUserType);
/** @internal */
exports.CreateSupportCopilotConversationUserType$outboundSchema = exports.CreateSupportCopilotConversationUserType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationUserType$;
(function (CreateSupportCopilotConversationUserType$) {
    /** @deprecated use `CreateSupportCopilotConversationUserType$inboundSchema` instead. */
    CreateSupportCopilotConversationUserType$.inboundSchema = exports.CreateSupportCopilotConversationUserType$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationUserType$outboundSchema` instead. */
    CreateSupportCopilotConversationUserType$.outboundSchema = exports.CreateSupportCopilotConversationUserType$outboundSchema;
})(CreateSupportCopilotConversationUserType$ || (exports.CreateSupportCopilotConversationUserType$ = CreateSupportCopilotConversationUserType$ = {}));
/** @internal */
exports.CreateSupportCopilotConversationUserProperties$inboundSchema = (0, schemas_js_1.collectExtraKeys)(z.object({
    id: z.nullable(z.union([z.string(), z.number()])).optional(),
    identificationType: z.nullable(z.string()).optional(),
    userId: z.nullable(z.union([z.string(), z.number()])).optional(),
    supportAgentName: z.nullable(z.string()).optional(),
    userType: z.nullable(exports.CreateSupportCopilotConversationUserType$inboundSchema).optional(),
}).catchall(z.any()), "additionalProperties", true);
/** @internal */
exports.CreateSupportCopilotConversationUserProperties$outboundSchema = z.object({
    id: z.nullable(z.union([z.string(), z.number()])).optional(),
    identificationType: z.nullable(z.string()).optional(),
    userId: z.nullable(z.union([z.string(), z.number()])).optional(),
    supportAgentName: z.nullable(z.string()).optional(),
    userType: z.nullable(exports.CreateSupportCopilotConversationUserType$outboundSchema).optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...(0, primitives_js_1.remap)(v, {
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationUserProperties$;
(function (CreateSupportCopilotConversationUserProperties$) {
    /** @deprecated use `CreateSupportCopilotConversationUserProperties$inboundSchema` instead. */
    CreateSupportCopilotConversationUserProperties$.inboundSchema = exports.CreateSupportCopilotConversationUserProperties$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationUserProperties$outboundSchema` instead. */
    CreateSupportCopilotConversationUserProperties$.outboundSchema = exports.CreateSupportCopilotConversationUserProperties$outboundSchema;
})(CreateSupportCopilotConversationUserProperties$ || (exports.CreateSupportCopilotConversationUserProperties$ = CreateSupportCopilotConversationUserProperties$ = {}));
function createSupportCopilotConversationUserPropertiesToJSON(createSupportCopilotConversationUserProperties) {
    return JSON.stringify(exports.CreateSupportCopilotConversationUserProperties$outboundSchema.parse(createSupportCopilotConversationUserProperties));
}
function createSupportCopilotConversationUserPropertiesFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateSupportCopilotConversationUserProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportCopilotConversationUserProperties' from JSON`);
}
/** @internal */
exports.CreateSupportCopilotConversationVisibility$inboundSchema = z
    .nativeEnum(exports.CreateSupportCopilotConversationVisibility);
/** @internal */
exports.CreateSupportCopilotConversationVisibility$outboundSchema = exports.CreateSupportCopilotConversationVisibility$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationVisibility$;
(function (CreateSupportCopilotConversationVisibility$) {
    /** @deprecated use `CreateSupportCopilotConversationVisibility$inboundSchema` instead. */
    CreateSupportCopilotConversationVisibility$.inboundSchema = exports.CreateSupportCopilotConversationVisibility$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationVisibility$outboundSchema` instead. */
    CreateSupportCopilotConversationVisibility$.outboundSchema = exports.CreateSupportCopilotConversationVisibility$outboundSchema;
})(CreateSupportCopilotConversationVisibility$ || (exports.CreateSupportCopilotConversationVisibility$ = CreateSupportCopilotConversationVisibility$ = {}));
/** @internal */
exports.CreateSupportCopilotConversationType1$inboundSchema = z.nativeEnum(exports.CreateSupportCopilotConversationType1);
/** @internal */
exports.CreateSupportCopilotConversationType1$outboundSchema = exports.CreateSupportCopilotConversationType1$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationType1$;
(function (CreateSupportCopilotConversationType1$) {
    /** @deprecated use `CreateSupportCopilotConversationType1$inboundSchema` instead. */
    CreateSupportCopilotConversationType1$.inboundSchema = exports.CreateSupportCopilotConversationType1$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationType1$outboundSchema` instead. */
    CreateSupportCopilotConversationType1$.outboundSchema = exports.CreateSupportCopilotConversationType1$outboundSchema;
})(CreateSupportCopilotConversationType1$ || (exports.CreateSupportCopilotConversationType1$ = CreateSupportCopilotConversationType1$ = {}));
/** @internal */
exports.CreateSupportCopilotConversationMessagesType$inboundSchema = z.union([
    exports.CreateSupportCopilotConversationType1$inboundSchema,
    z.string(),
]);
/** @internal */
exports.CreateSupportCopilotConversationMessagesType$outboundSchema = z.union([
    exports.CreateSupportCopilotConversationType1$outboundSchema,
    z.string(),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationMessagesType$;
(function (CreateSupportCopilotConversationMessagesType$) {
    /** @deprecated use `CreateSupportCopilotConversationMessagesType$inboundSchema` instead. */
    CreateSupportCopilotConversationMessagesType$.inboundSchema = exports.CreateSupportCopilotConversationMessagesType$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationMessagesType$outboundSchema` instead. */
    CreateSupportCopilotConversationMessagesType$.outboundSchema = exports.CreateSupportCopilotConversationMessagesType$outboundSchema;
})(CreateSupportCopilotConversationMessagesType$ || (exports.CreateSupportCopilotConversationMessagesType$ = CreateSupportCopilotConversationMessagesType$ = {}));
function createSupportCopilotConversationMessagesTypeToJSON(createSupportCopilotConversationMessagesType) {
    return JSON.stringify(exports.CreateSupportCopilotConversationMessagesType$outboundSchema.parse(createSupportCopilotConversationMessagesType));
}
function createSupportCopilotConversationMessagesTypeFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateSupportCopilotConversationMessagesType$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportCopilotConversationMessagesType' from JSON`);
}
/** @internal */
exports.CreateSupportCopilotConversationLinks$inboundSchema = z.object({
    label: z.nullable(z.string()).optional(),
    url: z.string(),
    title: z.nullable(z.string()).optional(),
    description: z.nullable(z.string()).optional(),
    type: z.nullable(z.union([exports.CreateSupportCopilotConversationType1$inboundSchema, z.string()])).optional(),
    breadcrumbs: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
exports.CreateSupportCopilotConversationLinks$outboundSchema = z.object({
    label: z.nullable(z.string()).optional(),
    url: z.string(),
    title: z.nullable(z.string()).optional(),
    description: z.nullable(z.string()).optional(),
    type: z.nullable(z.union([exports.CreateSupportCopilotConversationType1$outboundSchema, z.string()])).optional(),
    breadcrumbs: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationLinks$;
(function (CreateSupportCopilotConversationLinks$) {
    /** @deprecated use `CreateSupportCopilotConversationLinks$inboundSchema` instead. */
    CreateSupportCopilotConversationLinks$.inboundSchema = exports.CreateSupportCopilotConversationLinks$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationLinks$outboundSchema` instead. */
    CreateSupportCopilotConversationLinks$.outboundSchema = exports.CreateSupportCopilotConversationLinks$outboundSchema;
})(CreateSupportCopilotConversationLinks$ || (exports.CreateSupportCopilotConversationLinks$ = CreateSupportCopilotConversationLinks$ = {}));
function createSupportCopilotConversationLinksToJSON(createSupportCopilotConversationLinks) {
    return JSON.stringify(exports.CreateSupportCopilotConversationLinks$outboundSchema.parse(createSupportCopilotConversationLinks));
}
function createSupportCopilotConversationLinksFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateSupportCopilotConversationLinks$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportCopilotConversationLinks' from JSON`);
}
/** @internal */
exports.CreateSupportCopilotConversationMessagesId$inboundSchema = z.union([z.string(), z.number()]);
/** @internal */
exports.CreateSupportCopilotConversationMessagesId$outboundSchema = z.union([z.string(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationMessagesId$;
(function (CreateSupportCopilotConversationMessagesId$) {
    /** @deprecated use `CreateSupportCopilotConversationMessagesId$inboundSchema` instead. */
    CreateSupportCopilotConversationMessagesId$.inboundSchema = exports.CreateSupportCopilotConversationMessagesId$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationMessagesId$outboundSchema` instead. */
    CreateSupportCopilotConversationMessagesId$.outboundSchema = exports.CreateSupportCopilotConversationMessagesId$outboundSchema;
})(CreateSupportCopilotConversationMessagesId$ || (exports.CreateSupportCopilotConversationMessagesId$ = CreateSupportCopilotConversationMessagesId$ = {}));
function createSupportCopilotConversationMessagesIdToJSON(createSupportCopilotConversationMessagesId) {
    return JSON.stringify(exports.CreateSupportCopilotConversationMessagesId$outboundSchema.parse(createSupportCopilotConversationMessagesId));
}
function createSupportCopilotConversationMessagesIdFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateSupportCopilotConversationMessagesId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportCopilotConversationMessagesId' from JSON`);
}
/** @internal */
exports.CreateSupportCopilotConversationMessagesUserId$inboundSchema = z.union([z.string(), z.number()]);
/** @internal */
exports.CreateSupportCopilotConversationMessagesUserId$outboundSchema = z.union([z.string(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationMessagesUserId$;
(function (CreateSupportCopilotConversationMessagesUserId$) {
    /** @deprecated use `CreateSupportCopilotConversationMessagesUserId$inboundSchema` instead. */
    CreateSupportCopilotConversationMessagesUserId$.inboundSchema = exports.CreateSupportCopilotConversationMessagesUserId$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationMessagesUserId$outboundSchema` instead. */
    CreateSupportCopilotConversationMessagesUserId$.outboundSchema = exports.CreateSupportCopilotConversationMessagesUserId$outboundSchema;
})(CreateSupportCopilotConversationMessagesUserId$ || (exports.CreateSupportCopilotConversationMessagesUserId$ = CreateSupportCopilotConversationMessagesUserId$ = {}));
function createSupportCopilotConversationMessagesUserIdToJSON(createSupportCopilotConversationMessagesUserId) {
    return JSON.stringify(exports.CreateSupportCopilotConversationMessagesUserId$outboundSchema.parse(createSupportCopilotConversationMessagesUserId));
}
function createSupportCopilotConversationMessagesUserIdFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateSupportCopilotConversationMessagesUserId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportCopilotConversationMessagesUserId' from JSON`);
}
/** @internal */
exports.CreateSupportCopilotConversationMessagesUserType$inboundSchema = z
    .nativeEnum(exports.CreateSupportCopilotConversationMessagesUserType);
/** @internal */
exports.CreateSupportCopilotConversationMessagesUserType$outboundSchema = exports.CreateSupportCopilotConversationMessagesUserType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationMessagesUserType$;
(function (CreateSupportCopilotConversationMessagesUserType$) {
    /** @deprecated use `CreateSupportCopilotConversationMessagesUserType$inboundSchema` instead. */
    CreateSupportCopilotConversationMessagesUserType$.inboundSchema = exports.CreateSupportCopilotConversationMessagesUserType$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationMessagesUserType$outboundSchema` instead. */
    CreateSupportCopilotConversationMessagesUserType$.outboundSchema = exports.CreateSupportCopilotConversationMessagesUserType$outboundSchema;
})(CreateSupportCopilotConversationMessagesUserType$ || (exports.CreateSupportCopilotConversationMessagesUserType$ = CreateSupportCopilotConversationMessagesUserType$ = {}));
/** @internal */
exports.CreateSupportCopilotConversationMessagesUserProperties$inboundSchema = (0, schemas_js_1.collectExtraKeys)(z.object({
    id: z.nullable(z.union([z.string(), z.number()])).optional(),
    identificationType: z.nullable(z.string()).optional(),
    userId: z.nullable(z.union([z.string(), z.number()])).optional(),
    supportAgentName: z.nullable(z.string()).optional(),
    userType: z.nullable(exports.CreateSupportCopilotConversationMessagesUserType$inboundSchema).optional(),
}).catchall(z.any()), "additionalProperties", true);
/** @internal */
exports.CreateSupportCopilotConversationMessagesUserProperties$outboundSchema = z.object({
    id: z.nullable(z.union([z.string(), z.number()])).optional(),
    identificationType: z.nullable(z.string()).optional(),
    userId: z.nullable(z.union([z.string(), z.number()])).optional(),
    supportAgentName: z.nullable(z.string()).optional(),
    userType: z.nullable(exports.CreateSupportCopilotConversationMessagesUserType$outboundSchema).optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...(0, primitives_js_1.remap)(v, {
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationMessagesUserProperties$;
(function (CreateSupportCopilotConversationMessagesUserProperties$) {
    /** @deprecated use `CreateSupportCopilotConversationMessagesUserProperties$inboundSchema` instead. */
    CreateSupportCopilotConversationMessagesUserProperties$.inboundSchema = exports.CreateSupportCopilotConversationMessagesUserProperties$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationMessagesUserProperties$outboundSchema` instead. */
    CreateSupportCopilotConversationMessagesUserProperties$.outboundSchema = exports.CreateSupportCopilotConversationMessagesUserProperties$outboundSchema;
})(CreateSupportCopilotConversationMessagesUserProperties$ || (exports.CreateSupportCopilotConversationMessagesUserProperties$ = CreateSupportCopilotConversationMessagesUserProperties$ = {}));
function createSupportCopilotConversationMessagesUserPropertiesToJSON(createSupportCopilotConversationMessagesUserProperties) {
    return JSON.stringify(exports.CreateSupportCopilotConversationMessagesUserProperties$outboundSchema.parse(createSupportCopilotConversationMessagesUserProperties));
}
function createSupportCopilotConversationMessagesUserPropertiesFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateSupportCopilotConversationMessagesUserProperties$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'CreateSupportCopilotConversationMessagesUserProperties' from JSON`);
}
/** @internal */
exports.CreateSupportCopilotConversationMessages$inboundSchema = z.object({
    id: z.string().optional(),
    externalId: z.nullable(z.string()).optional(),
    externalUrl: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    updatedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    role: z.string(),
    content: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    links: z.nullable(z.array(z.lazy(() => exports.CreateSupportCopilotConversationLinks$inboundSchema))).optional(),
    properties: z.nullable(z.record(z.any())).optional(),
    userProperties: z.nullable(z.lazy(() => exports.CreateSupportCopilotConversationMessagesUserProperties$inboundSchema)).optional(),
});
/** @internal */
exports.CreateSupportCopilotConversationMessages$outboundSchema = z.object({
    id: z.string().optional(),
    externalId: z.nullable(z.string()).optional(),
    externalUrl: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    updatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    role: z.string(),
    content: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    links: z.nullable(z.array(z.lazy(() => exports.CreateSupportCopilotConversationLinks$outboundSchema))).optional(),
    properties: z.nullable(z.record(z.any())).optional(),
    userProperties: z.nullable(z.lazy(() => exports.CreateSupportCopilotConversationMessagesUserProperties$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversationMessages$;
(function (CreateSupportCopilotConversationMessages$) {
    /** @deprecated use `CreateSupportCopilotConversationMessages$inboundSchema` instead. */
    CreateSupportCopilotConversationMessages$.inboundSchema = exports.CreateSupportCopilotConversationMessages$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversationMessages$outboundSchema` instead. */
    CreateSupportCopilotConversationMessages$.outboundSchema = exports.CreateSupportCopilotConversationMessages$outboundSchema;
})(CreateSupportCopilotConversationMessages$ || (exports.CreateSupportCopilotConversationMessages$ = CreateSupportCopilotConversationMessages$ = {}));
function createSupportCopilotConversationMessagesToJSON(createSupportCopilotConversationMessages) {
    return JSON.stringify(exports.CreateSupportCopilotConversationMessages$outboundSchema.parse(createSupportCopilotConversationMessages));
}
function createSupportCopilotConversationMessagesFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateSupportCopilotConversationMessages$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportCopilotConversationMessages' from JSON`);
}
/** @internal */
exports.CreateSupportCopilotConversation$inboundSchema = z.object({
    id: z.string().optional(),
    externalId: z.nullable(z.string()).optional(),
    externalUrl: z.nullable(z.string()).optional(),
    type: exports.CreateSupportCopilotConversationType$inboundSchema,
    supportTicketConversationId: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    updatedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    projectId: z.nullable(z.string()).optional(),
    integrationId: z.nullable(z.string()).optional(),
    properties: z.nullable(z.record(z.any())).optional(),
    userProperties: z.nullable(z.lazy(() => exports.CreateSupportCopilotConversationUserProperties$inboundSchema)).optional(),
    tags: z.nullable(z.array(z.string())).optional(),
    visibility: z.nullable(exports.CreateSupportCopilotConversationVisibility$inboundSchema).optional(),
    messages: z.array(z.lazy(() => exports.CreateSupportCopilotConversationMessages$inboundSchema)),
});
/** @internal */
exports.CreateSupportCopilotConversation$outboundSchema = z.object({
    id: z.string().optional(),
    externalId: z.nullable(z.string()).optional(),
    externalUrl: z.nullable(z.string()).optional(),
    type: exports.CreateSupportCopilotConversationType$outboundSchema,
    supportTicketConversationId: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    updatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    projectId: z.nullable(z.string()).optional(),
    integrationId: z.nullable(z.string()).optional(),
    properties: z.nullable(z.record(z.any())).optional(),
    userProperties: z.nullable(z.lazy(() => exports.CreateSupportCopilotConversationUserProperties$outboundSchema)).optional(),
    tags: z.nullable(z.array(z.string())).optional(),
    visibility: z.nullable(exports.CreateSupportCopilotConversationVisibility$outboundSchema).optional(),
    messages: z.array(z.lazy(() => exports.CreateSupportCopilotConversationMessages$outboundSchema)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateSupportCopilotConversation$;
(function (CreateSupportCopilotConversation$) {
    /** @deprecated use `CreateSupportCopilotConversation$inboundSchema` instead. */
    CreateSupportCopilotConversation$.inboundSchema = exports.CreateSupportCopilotConversation$inboundSchema;
    /** @deprecated use `CreateSupportCopilotConversation$outboundSchema` instead. */
    CreateSupportCopilotConversation$.outboundSchema = exports.CreateSupportCopilotConversation$outboundSchema;
})(CreateSupportCopilotConversation$ || (exports.CreateSupportCopilotConversation$ = CreateSupportCopilotConversation$ = {}));
function createSupportCopilotConversationToJSON(createSupportCopilotConversation) {
    return JSON.stringify(exports.CreateSupportCopilotConversation$outboundSchema.parse(createSupportCopilotConversation));
}
function createSupportCopilotConversationFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateSupportCopilotConversation$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSupportCopilotConversation' from JSON`);
}
//# sourceMappingURL=createsupportcopilotconversation.js.map