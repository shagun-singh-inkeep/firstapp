import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export declare const QueryConversationsResponseDataType: {
    readonly Openai: "openai";
    readonly SupportTicket: "support_ticket";
    readonly SupportCopilot: "support_copilot";
};
export type QueryConversationsResponseDataType = ClosedEnum<typeof QueryConversationsResponseDataType>;
/**
 * The unique identifier for the user. This value is sent by the inkeep widget.
 */
export type QueryConversationsResponseDataId = string | number;
/**
 * The unique identifier for the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export type QueryConversationsResponseDataUserId = string | number;
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export declare const QueryConversationsResponseDataUserType: {
    readonly User: "user";
    readonly Member: "member";
};
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export type QueryConversationsResponseDataUserType = ClosedEnum<typeof QueryConversationsResponseDataUserType>;
/**
 * A customizable collection of custom properties or attributes. Some properties have first class support for the Inkeep Portal or Widget and are noted in the description.
 */
export type QueryConversationsResponseDataUserProperties = {
    /**
     * The unique identifier for the user. This value is sent by the inkeep widget.
     */
    id?: string | number | null | undefined;
    /**
     * The type of identification for the user. This value is sent by the inkeep widget.
     */
    identificationType?: string | null | undefined;
    /**
     * The unique identifier for the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
     */
    userId?: string | number | null | undefined;
    /**
     * The name of the support agent assigned to the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
     */
    supportAgentName?: string | null | undefined;
    /**
     * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
     */
    userType?: QueryConversationsResponseDataUserType | null | undefined;
    additionalProperties?: {
        [k: string]: any;
    };
};
export type ConversationsResultItem = {
    id?: string | undefined;
    userMessageCount?: number | undefined;
    organizationId?: string | null | undefined;
    projectId?: string | null | undefined;
    integrationId?: string | null | undefined;
    firstMessageTime?: Date | undefined;
    type?: QueryConversationsResponseDataType | null | undefined;
    /**
     * A customizable collection of custom properties or attributes.
     */
    properties?: {
        [k: string]: any;
    } | null | undefined;
    /**
     * A customizable collection of custom properties or attributes. Some properties have first class support for the Inkeep Portal or Widget and are noted in the description.
     */
    userProperties?: QueryConversationsResponseDataUserProperties | null | undefined;
    sum?: number | undefined;
    count?: number | undefined;
    avg?: number | undefined;
    min?: number | undefined;
    max?: number | undefined;
    idHour?: string | undefined;
    idDay?: string | undefined;
    idWeek?: string | undefined;
    idMonth?: string | undefined;
    userMessageCountHour?: string | undefined;
    userMessageCountDay?: string | undefined;
    userMessageCountWeek?: string | undefined;
    userMessageCountMonth?: string | undefined;
    organizationIdHour?: string | undefined;
    organizationIdDay?: string | undefined;
    organizationIdWeek?: string | undefined;
    organizationIdMonth?: string | undefined;
    projectIdHour?: string | undefined;
    projectIdDay?: string | undefined;
    projectIdWeek?: string | undefined;
    projectIdMonth?: string | undefined;
    integrationIdHour?: string | undefined;
    integrationIdDay?: string | undefined;
    integrationIdWeek?: string | undefined;
    integrationIdMonth?: string | undefined;
    firstMessageTimeHour?: string | undefined;
    firstMessageTimeDay?: string | undefined;
    firstMessageTimeWeek?: string | undefined;
    firstMessageTimeMonth?: string | undefined;
    typeHour?: string | undefined;
    typeDay?: string | undefined;
    typeWeek?: string | undefined;
    typeMonth?: string | undefined;
    propertiesHour?: string | undefined;
    propertiesDay?: string | undefined;
    propertiesWeek?: string | undefined;
    propertiesMonth?: string | undefined;
    userPropertiesHour?: string | undefined;
    userPropertiesDay?: string | undefined;
    userPropertiesWeek?: string | undefined;
    userPropertiesMonth?: string | undefined;
    sumId?: number | undefined;
    sumUserMessageCount?: number | undefined;
    sumOrganizationId?: number | undefined;
    sumProjectId?: number | undefined;
    sumIntegrationId?: number | undefined;
    sumFirstMessageTime?: number | undefined;
    sumType?: number | undefined;
    sumProperties?: number | undefined;
    sumUserProperties?: number | undefined;
    countId?: number | undefined;
    countUserMessageCount?: number | undefined;
    countOrganizationId?: number | undefined;
    countProjectId?: number | undefined;
    countIntegrationId?: number | undefined;
    countFirstMessageTime?: number | undefined;
    countType?: number | undefined;
    countProperties?: number | undefined;
    countUserProperties?: number | undefined;
    avgId?: number | undefined;
    avgUserMessageCount?: number | undefined;
    avgOrganizationId?: number | undefined;
    avgProjectId?: number | undefined;
    avgIntegrationId?: number | undefined;
    avgFirstMessageTime?: number | undefined;
    avgType?: number | undefined;
    avgProperties?: number | undefined;
    avgUserProperties?: number | undefined;
    minId?: number | undefined;
    minUserMessageCount?: number | undefined;
    minOrganizationId?: number | undefined;
    minProjectId?: number | undefined;
    minIntegrationId?: number | undefined;
    minFirstMessageTime?: number | undefined;
    minType?: number | undefined;
    minProperties?: number | undefined;
    minUserProperties?: number | undefined;
    maxId?: number | undefined;
    maxUserMessageCount?: number | undefined;
    maxOrganizationId?: number | undefined;
    maxProjectId?: number | undefined;
    maxIntegrationId?: number | undefined;
    maxFirstMessageTime?: number | undefined;
    maxType?: number | undefined;
    maxProperties?: number | undefined;
    maxUserProperties?: number | undefined;
    sumPropertiesUserId?: number | undefined;
    sumPropertiesSupportAgentName?: number | undefined;
    sumUserPropertiesUserId?: number | undefined;
    sumUserPropertiesSupportAgentName?: number | undefined;
    countPropertiesUserId?: number | undefined;
    countPropertiesSupportAgentName?: number | undefined;
    countUserPropertiesUserId?: number | undefined;
    countUserPropertiesSupportAgentName?: number | undefined;
    countDistinctPropertiesUserId?: number | undefined;
    countDistinctPropertiesSupportAgentName?: number | undefined;
    countDistinctUserPropertiesUserId?: number | undefined;
    countDistinctUserPropertiesSupportAgentName?: number | undefined;
    avgPropertiesUserId?: number | undefined;
    avgPropertiesSupportAgentName?: number | undefined;
    avgUserPropertiesUserId?: number | undefined;
    avgUserPropertiesSupportAgentName?: number | undefined;
    minPropertiesUserId?: number | undefined;
    minPropertiesSupportAgentName?: number | undefined;
    minUserPropertiesUserId?: number | undefined;
    minUserPropertiesSupportAgentName?: number | undefined;
    maxPropertiesUserId?: number | undefined;
    maxPropertiesSupportAgentName?: number | undefined;
    maxUserPropertiesUserId?: number | undefined;
    maxUserPropertiesSupportAgentName?: number | undefined;
    propertiesUserId?: string | null | undefined;
    propertiesSupportAgentName?: string | null | undefined;
    userPropertiesUserId?: string | null | undefined;
    userPropertiesSupportAgentName?: string | null | undefined;
};
/**
 * Data object containing QueryConversations query results and pagination information
 */
export type QueryConversationsResponseData = {
    result: Array<ConversationsResultItem>;
    /**
     * Total number of results matching the query
     */
    total: number;
    /**
     * Number of results per page
     */
    pageSize: number;
    /**
     * Number of results in the current response
     */
    count: number;
};
/** @internal */
export declare const QueryConversationsResponseDataType$inboundSchema: z.ZodNativeEnum<typeof QueryConversationsResponseDataType>;
/** @internal */
export declare const QueryConversationsResponseDataType$outboundSchema: z.ZodNativeEnum<typeof QueryConversationsResponseDataType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryConversationsResponseDataType$ {
    /** @deprecated use `QueryConversationsResponseDataType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Openai: "openai";
        readonly SupportTicket: "support_ticket";
        readonly SupportCopilot: "support_copilot";
    }>;
    /** @deprecated use `QueryConversationsResponseDataType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Openai: "openai";
        readonly SupportTicket: "support_ticket";
        readonly SupportCopilot: "support_copilot";
    }>;
}
/** @internal */
export declare const QueryConversationsResponseDataId$inboundSchema: z.ZodType<QueryConversationsResponseDataId, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryConversationsResponseDataId$Outbound = string | number;
/** @internal */
export declare const QueryConversationsResponseDataId$outboundSchema: z.ZodType<QueryConversationsResponseDataId$Outbound, z.ZodTypeDef, QueryConversationsResponseDataId>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryConversationsResponseDataId$ {
    /** @deprecated use `QueryConversationsResponseDataId$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryConversationsResponseDataId, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryConversationsResponseDataId$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryConversationsResponseDataId$Outbound, z.ZodTypeDef, QueryConversationsResponseDataId>;
    /** @deprecated use `QueryConversationsResponseDataId$Outbound` instead. */
    type Outbound = QueryConversationsResponseDataId$Outbound;
}
export declare function queryConversationsResponseDataIdToJSON(queryConversationsResponseDataId: QueryConversationsResponseDataId): string;
export declare function queryConversationsResponseDataIdFromJSON(jsonString: string): SafeParseResult<QueryConversationsResponseDataId, SDKValidationError>;
/** @internal */
export declare const QueryConversationsResponseDataUserId$inboundSchema: z.ZodType<QueryConversationsResponseDataUserId, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryConversationsResponseDataUserId$Outbound = string | number;
/** @internal */
export declare const QueryConversationsResponseDataUserId$outboundSchema: z.ZodType<QueryConversationsResponseDataUserId$Outbound, z.ZodTypeDef, QueryConversationsResponseDataUserId>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryConversationsResponseDataUserId$ {
    /** @deprecated use `QueryConversationsResponseDataUserId$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryConversationsResponseDataUserId, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryConversationsResponseDataUserId$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryConversationsResponseDataUserId$Outbound, z.ZodTypeDef, QueryConversationsResponseDataUserId>;
    /** @deprecated use `QueryConversationsResponseDataUserId$Outbound` instead. */
    type Outbound = QueryConversationsResponseDataUserId$Outbound;
}
export declare function queryConversationsResponseDataUserIdToJSON(queryConversationsResponseDataUserId: QueryConversationsResponseDataUserId): string;
export declare function queryConversationsResponseDataUserIdFromJSON(jsonString: string): SafeParseResult<QueryConversationsResponseDataUserId, SDKValidationError>;
/** @internal */
export declare const QueryConversationsResponseDataUserType$inboundSchema: z.ZodNativeEnum<typeof QueryConversationsResponseDataUserType>;
/** @internal */
export declare const QueryConversationsResponseDataUserType$outboundSchema: z.ZodNativeEnum<typeof QueryConversationsResponseDataUserType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryConversationsResponseDataUserType$ {
    /** @deprecated use `QueryConversationsResponseDataUserType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly User: "user";
        readonly Member: "member";
    }>;
    /** @deprecated use `QueryConversationsResponseDataUserType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly User: "user";
        readonly Member: "member";
    }>;
}
/** @internal */
export declare const QueryConversationsResponseDataUserProperties$inboundSchema: z.ZodType<QueryConversationsResponseDataUserProperties, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryConversationsResponseDataUserProperties$Outbound = {
    id?: string | number | null | undefined;
    identificationType?: string | null | undefined;
    userId?: string | number | null | undefined;
    supportAgentName?: string | null | undefined;
    userType?: string | null | undefined;
    [additionalProperties: string]: unknown;
};
/** @internal */
export declare const QueryConversationsResponseDataUserProperties$outboundSchema: z.ZodType<QueryConversationsResponseDataUserProperties$Outbound, z.ZodTypeDef, QueryConversationsResponseDataUserProperties>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryConversationsResponseDataUserProperties$ {
    /** @deprecated use `QueryConversationsResponseDataUserProperties$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryConversationsResponseDataUserProperties, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryConversationsResponseDataUserProperties$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryConversationsResponseDataUserProperties$Outbound, z.ZodTypeDef, QueryConversationsResponseDataUserProperties>;
    /** @deprecated use `QueryConversationsResponseDataUserProperties$Outbound` instead. */
    type Outbound = QueryConversationsResponseDataUserProperties$Outbound;
}
export declare function queryConversationsResponseDataUserPropertiesToJSON(queryConversationsResponseDataUserProperties: QueryConversationsResponseDataUserProperties): string;
export declare function queryConversationsResponseDataUserPropertiesFromJSON(jsonString: string): SafeParseResult<QueryConversationsResponseDataUserProperties, SDKValidationError>;
/** @internal */
export declare const ConversationsResultItem$inboundSchema: z.ZodType<ConversationsResultItem, z.ZodTypeDef, unknown>;
/** @internal */
export type ConversationsResultItem$Outbound = {
    id?: string | undefined;
    userMessageCount?: number | undefined;
    organizationId?: string | null | undefined;
    projectId?: string | null | undefined;
    integrationId?: string | null | undefined;
    firstMessageTime?: string | undefined;
    type?: string | null | undefined;
    properties?: {
        [k: string]: any;
    } | null | undefined;
    userProperties?: QueryConversationsResponseDataUserProperties$Outbound | null | undefined;
    sum?: number | undefined;
    count?: number | undefined;
    avg?: number | undefined;
    min?: number | undefined;
    max?: number | undefined;
    id_hour?: string | undefined;
    id_day?: string | undefined;
    id_week?: string | undefined;
    id_month?: string | undefined;
    userMessageCount_hour?: string | undefined;
    userMessageCount_day?: string | undefined;
    userMessageCount_week?: string | undefined;
    userMessageCount_month?: string | undefined;
    organizationId_hour?: string | undefined;
    organizationId_day?: string | undefined;
    organizationId_week?: string | undefined;
    organizationId_month?: string | undefined;
    projectId_hour?: string | undefined;
    projectId_day?: string | undefined;
    projectId_week?: string | undefined;
    projectId_month?: string | undefined;
    integrationId_hour?: string | undefined;
    integrationId_day?: string | undefined;
    integrationId_week?: string | undefined;
    integrationId_month?: string | undefined;
    firstMessageTime_hour?: string | undefined;
    firstMessageTime_day?: string | undefined;
    firstMessageTime_week?: string | undefined;
    firstMessageTime_month?: string | undefined;
    type_hour?: string | undefined;
    type_day?: string | undefined;
    type_week?: string | undefined;
    type_month?: string | undefined;
    properties_hour?: string | undefined;
    properties_day?: string | undefined;
    properties_week?: string | undefined;
    properties_month?: string | undefined;
    userProperties_hour?: string | undefined;
    userProperties_day?: string | undefined;
    userProperties_week?: string | undefined;
    userProperties_month?: string | undefined;
    sum_id?: number | undefined;
    sum_userMessageCount?: number | undefined;
    sum_organizationId?: number | undefined;
    sum_projectId?: number | undefined;
    sum_integrationId?: number | undefined;
    sum_firstMessageTime?: number | undefined;
    sum_type?: number | undefined;
    sum_properties?: number | undefined;
    sum_userProperties?: number | undefined;
    count_id?: number | undefined;
    count_userMessageCount?: number | undefined;
    count_organizationId?: number | undefined;
    count_projectId?: number | undefined;
    count_integrationId?: number | undefined;
    count_firstMessageTime?: number | undefined;
    count_type?: number | undefined;
    count_properties?: number | undefined;
    count_userProperties?: number | undefined;
    avg_id?: number | undefined;
    avg_userMessageCount?: number | undefined;
    avg_organizationId?: number | undefined;
    avg_projectId?: number | undefined;
    avg_integrationId?: number | undefined;
    avg_firstMessageTime?: number | undefined;
    avg_type?: number | undefined;
    avg_properties?: number | undefined;
    avg_userProperties?: number | undefined;
    min_id?: number | undefined;
    min_userMessageCount?: number | undefined;
    min_organizationId?: number | undefined;
    min_projectId?: number | undefined;
    min_integrationId?: number | undefined;
    min_firstMessageTime?: number | undefined;
    min_type?: number | undefined;
    min_properties?: number | undefined;
    min_userProperties?: number | undefined;
    max_id?: number | undefined;
    max_userMessageCount?: number | undefined;
    max_organizationId?: number | undefined;
    max_projectId?: number | undefined;
    max_integrationId?: number | undefined;
    max_firstMessageTime?: number | undefined;
    max_type?: number | undefined;
    max_properties?: number | undefined;
    max_userProperties?: number | undefined;
    "sum_properties.userId"?: number | undefined;
    "sum_properties.supportAgentName"?: number | undefined;
    "sum_userProperties.userId"?: number | undefined;
    "sum_userProperties.supportAgentName"?: number | undefined;
    "count_properties.userId"?: number | undefined;
    "count_properties.supportAgentName"?: number | undefined;
    "count_userProperties.userId"?: number | undefined;
    "count_userProperties.supportAgentName"?: number | undefined;
    "countDistinct_properties.userId"?: number | undefined;
    "countDistinct_properties.supportAgentName"?: number | undefined;
    "countDistinct_userProperties.userId"?: number | undefined;
    "countDistinct_userProperties.supportAgentName"?: number | undefined;
    "avg_properties.userId"?: number | undefined;
    "avg_properties.supportAgentName"?: number | undefined;
    "avg_userProperties.userId"?: number | undefined;
    "avg_userProperties.supportAgentName"?: number | undefined;
    "min_properties.userId"?: number | undefined;
    "min_properties.supportAgentName"?: number | undefined;
    "min_userProperties.userId"?: number | undefined;
    "min_userProperties.supportAgentName"?: number | undefined;
    "max_properties.userId"?: number | undefined;
    "max_properties.supportAgentName"?: number | undefined;
    "max_userProperties.userId"?: number | undefined;
    "max_userProperties.supportAgentName"?: number | undefined;
    "properties.userId"?: string | null | undefined;
    "properties.supportAgentName"?: string | null | undefined;
    "userProperties.userId"?: string | null | undefined;
    "userProperties.supportAgentName"?: string | null | undefined;
};
/** @internal */
export declare const ConversationsResultItem$outboundSchema: z.ZodType<ConversationsResultItem$Outbound, z.ZodTypeDef, ConversationsResultItem>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ConversationsResultItem$ {
    /** @deprecated use `ConversationsResultItem$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ConversationsResultItem, z.ZodTypeDef, unknown>;
    /** @deprecated use `ConversationsResultItem$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ConversationsResultItem$Outbound, z.ZodTypeDef, ConversationsResultItem>;
    /** @deprecated use `ConversationsResultItem$Outbound` instead. */
    type Outbound = ConversationsResultItem$Outbound;
}
export declare function conversationsResultItemToJSON(conversationsResultItem: ConversationsResultItem): string;
export declare function conversationsResultItemFromJSON(jsonString: string): SafeParseResult<ConversationsResultItem, SDKValidationError>;
/** @internal */
export declare const QueryConversationsResponseData$inboundSchema: z.ZodType<QueryConversationsResponseData, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryConversationsResponseData$Outbound = {
    result: Array<ConversationsResultItem$Outbound>;
    total: number;
    pageSize: number;
    count: number;
};
/** @internal */
export declare const QueryConversationsResponseData$outboundSchema: z.ZodType<QueryConversationsResponseData$Outbound, z.ZodTypeDef, QueryConversationsResponseData>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryConversationsResponseData$ {
    /** @deprecated use `QueryConversationsResponseData$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryConversationsResponseData, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryConversationsResponseData$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryConversationsResponseData$Outbound, z.ZodTypeDef, QueryConversationsResponseData>;
    /** @deprecated use `QueryConversationsResponseData$Outbound` instead. */
    type Outbound = QueryConversationsResponseData$Outbound;
}
export declare function queryConversationsResponseDataToJSON(queryConversationsResponseData: QueryConversationsResponseData): string;
export declare function queryConversationsResponseDataFromJSON(jsonString: string): SafeParseResult<QueryConversationsResponseData, SDKValidationError>;
//# sourceMappingURL=queryconversationsresponsedata.d.ts.map