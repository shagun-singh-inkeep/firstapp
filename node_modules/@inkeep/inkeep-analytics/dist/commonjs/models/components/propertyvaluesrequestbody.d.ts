import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Which JSON field to query values from
 */
export declare const PropertyValuesRequestBodyField: {
    readonly Properties: "properties";
    readonly UserProperties: "userProperties";
};
/**
 * Which JSON field to query values from
 */
export type PropertyValuesRequestBodyField = ClosedEnum<typeof PropertyValuesRequestBodyField>;
export declare const PropertyValuesRequestBodyViews: {
    readonly EventsView: "events_view";
    readonly ConversationsView: "conversations_view";
    readonly SemanticThreadsView: "semantic_threads_view";
    readonly FeedbackView: "feedback_view";
};
export type PropertyValuesRequestBodyViews = ClosedEnum<typeof PropertyValuesRequestBodyViews>;
/**
 * Query Property Values Params
 */
export type PropertyValuesRequestBody = {
    /**
     * Which JSON field to query values from
     */
    field: PropertyValuesRequestBodyField;
    /**
     * The property key to get values for
     */
    key: string;
    /**
     * Optional list of views to query (defaults to all views)
     */
    views?: Array<PropertyValuesRequestBodyViews> | undefined;
    /**
     * Maximum number of values to return
     */
    limit?: number | undefined;
};
/** @internal */
export declare const PropertyValuesRequestBodyField$inboundSchema: z.ZodNativeEnum<typeof PropertyValuesRequestBodyField>;
/** @internal */
export declare const PropertyValuesRequestBodyField$outboundSchema: z.ZodNativeEnum<typeof PropertyValuesRequestBodyField>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PropertyValuesRequestBodyField$ {
    /** @deprecated use `PropertyValuesRequestBodyField$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Properties: "properties";
        readonly UserProperties: "userProperties";
    }>;
    /** @deprecated use `PropertyValuesRequestBodyField$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Properties: "properties";
        readonly UserProperties: "userProperties";
    }>;
}
/** @internal */
export declare const PropertyValuesRequestBodyViews$inboundSchema: z.ZodNativeEnum<typeof PropertyValuesRequestBodyViews>;
/** @internal */
export declare const PropertyValuesRequestBodyViews$outboundSchema: z.ZodNativeEnum<typeof PropertyValuesRequestBodyViews>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PropertyValuesRequestBodyViews$ {
    /** @deprecated use `PropertyValuesRequestBodyViews$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly EventsView: "events_view";
        readonly ConversationsView: "conversations_view";
        readonly SemanticThreadsView: "semantic_threads_view";
        readonly FeedbackView: "feedback_view";
    }>;
    /** @deprecated use `PropertyValuesRequestBodyViews$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly EventsView: "events_view";
        readonly ConversationsView: "conversations_view";
        readonly SemanticThreadsView: "semantic_threads_view";
        readonly FeedbackView: "feedback_view";
    }>;
}
/** @internal */
export declare const PropertyValuesRequestBody$inboundSchema: z.ZodType<PropertyValuesRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PropertyValuesRequestBody$Outbound = {
    field: string;
    key: string;
    views?: Array<string> | undefined;
    limit: number;
};
/** @internal */
export declare const PropertyValuesRequestBody$outboundSchema: z.ZodType<PropertyValuesRequestBody$Outbound, z.ZodTypeDef, PropertyValuesRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PropertyValuesRequestBody$ {
    /** @deprecated use `PropertyValuesRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PropertyValuesRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PropertyValuesRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PropertyValuesRequestBody$Outbound, z.ZodTypeDef, PropertyValuesRequestBody>;
    /** @deprecated use `PropertyValuesRequestBody$Outbound` instead. */
    type Outbound = PropertyValuesRequestBody$Outbound;
}
export declare function propertyValuesRequestBodyToJSON(propertyValuesRequestBody: PropertyValuesRequestBody): string;
export declare function propertyValuesRequestBodyFromJSON(jsonString: string): SafeParseResult<PropertyValuesRequestBody, SDKValidationError>;
//# sourceMappingURL=propertyvaluesrequestbody.d.ts.map