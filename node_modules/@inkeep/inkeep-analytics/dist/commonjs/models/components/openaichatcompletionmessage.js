"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpenAIChatCompletionMessage$ = exports.OpenAIChatCompletionMessage$outboundSchema = exports.OpenAIChatCompletionMessage$inboundSchema = exports.OpenAIChatCompletionMessageContent$ = exports.OpenAIChatCompletionMessageContent$outboundSchema = exports.OpenAIChatCompletionMessageContent$inboundSchema = exports.OpenAIChatCompletionMessageRole$ = exports.OpenAIChatCompletionMessageRole$outboundSchema = exports.OpenAIChatCompletionMessageRole$inboundSchema = exports.OpenAIChatCompletionMessageRole = void 0;
exports.openAIChatCompletionMessageContentToJSON = openAIChatCompletionMessageContentToJSON;
exports.openAIChatCompletionMessageContentFromJSON = openAIChatCompletionMessageContentFromJSON;
exports.openAIChatCompletionMessageToJSON = openAIChatCompletionMessageToJSON;
exports.openAIChatCompletionMessageFromJSON = openAIChatCompletionMessageFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const openaicontentitem_js_1 = require("./openaicontentitem.js");
const openaitoolcall_js_1 = require("./openaitoolcall.js");
exports.OpenAIChatCompletionMessageRole = {
    System: "system",
    User: "user",
    Assistant: "assistant",
};
/** @internal */
exports.OpenAIChatCompletionMessageRole$inboundSchema = z.nativeEnum(exports.OpenAIChatCompletionMessageRole);
/** @internal */
exports.OpenAIChatCompletionMessageRole$outboundSchema = exports.OpenAIChatCompletionMessageRole$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OpenAIChatCompletionMessageRole$;
(function (OpenAIChatCompletionMessageRole$) {
    /** @deprecated use `OpenAIChatCompletionMessageRole$inboundSchema` instead. */
    OpenAIChatCompletionMessageRole$.inboundSchema = exports.OpenAIChatCompletionMessageRole$inboundSchema;
    /** @deprecated use `OpenAIChatCompletionMessageRole$outboundSchema` instead. */
    OpenAIChatCompletionMessageRole$.outboundSchema = exports.OpenAIChatCompletionMessageRole$outboundSchema;
})(OpenAIChatCompletionMessageRole$ || (exports.OpenAIChatCompletionMessageRole$ = OpenAIChatCompletionMessageRole$ = {}));
/** @internal */
exports.OpenAIChatCompletionMessageContent$inboundSchema = z.union([z.string(), z.array(openaicontentitem_js_1.OpenAIContentItem$inboundSchema)]);
/** @internal */
exports.OpenAIChatCompletionMessageContent$outboundSchema = z.union([z.string(), z.array(openaicontentitem_js_1.OpenAIContentItem$outboundSchema)]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OpenAIChatCompletionMessageContent$;
(function (OpenAIChatCompletionMessageContent$) {
    /** @deprecated use `OpenAIChatCompletionMessageContent$inboundSchema` instead. */
    OpenAIChatCompletionMessageContent$.inboundSchema = exports.OpenAIChatCompletionMessageContent$inboundSchema;
    /** @deprecated use `OpenAIChatCompletionMessageContent$outboundSchema` instead. */
    OpenAIChatCompletionMessageContent$.outboundSchema = exports.OpenAIChatCompletionMessageContent$outboundSchema;
})(OpenAIChatCompletionMessageContent$ || (exports.OpenAIChatCompletionMessageContent$ = OpenAIChatCompletionMessageContent$ = {}));
function openAIChatCompletionMessageContentToJSON(openAIChatCompletionMessageContent) {
    return JSON.stringify(exports.OpenAIChatCompletionMessageContent$outboundSchema.parse(openAIChatCompletionMessageContent));
}
function openAIChatCompletionMessageContentFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OpenAIChatCompletionMessageContent$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OpenAIChatCompletionMessageContent' from JSON`);
}
/** @internal */
exports.OpenAIChatCompletionMessage$inboundSchema = z.object({
    role: exports.OpenAIChatCompletionMessageRole$inboundSchema,
    name: z.nullable(z.string()).optional(),
    content: z.union([z.string(), z.array(openaicontentitem_js_1.OpenAIContentItem$inboundSchema)]),
    tool_calls: z.nullable(z.array(openaitoolcall_js_1.OpenAIToolCall$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "tool_calls": "toolCalls",
    });
});
/** @internal */
exports.OpenAIChatCompletionMessage$outboundSchema = z.object({
    role: exports.OpenAIChatCompletionMessageRole$outboundSchema,
    name: z.nullable(z.string()).optional(),
    content: z.union([z.string(), z.array(openaicontentitem_js_1.OpenAIContentItem$outboundSchema)]),
    toolCalls: z.nullable(z.array(openaitoolcall_js_1.OpenAIToolCall$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        toolCalls: "tool_calls",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OpenAIChatCompletionMessage$;
(function (OpenAIChatCompletionMessage$) {
    /** @deprecated use `OpenAIChatCompletionMessage$inboundSchema` instead. */
    OpenAIChatCompletionMessage$.inboundSchema = exports.OpenAIChatCompletionMessage$inboundSchema;
    /** @deprecated use `OpenAIChatCompletionMessage$outboundSchema` instead. */
    OpenAIChatCompletionMessage$.outboundSchema = exports.OpenAIChatCompletionMessage$outboundSchema;
})(OpenAIChatCompletionMessage$ || (exports.OpenAIChatCompletionMessage$ = OpenAIChatCompletionMessage$ = {}));
function openAIChatCompletionMessageToJSON(openAIChatCompletionMessage) {
    return JSON.stringify(exports.OpenAIChatCompletionMessage$outboundSchema.parse(openAIChatCompletionMessage));
}
function openAIChatCompletionMessageFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OpenAIChatCompletionMessage$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OpenAIChatCompletionMessage' from JSON`);
}
//# sourceMappingURL=openaichatcompletionmessage.js.map