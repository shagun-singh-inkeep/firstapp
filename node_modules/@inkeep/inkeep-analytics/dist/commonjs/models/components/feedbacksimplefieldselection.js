"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.FeedbackSimpleFieldSelection$ = exports.FeedbackSimpleFieldSelection$outboundSchema = exports.FeedbackSimpleFieldSelection$inboundSchema = exports.FeedbackSimpleFieldSelectionField$ = exports.FeedbackSimpleFieldSelectionField$outboundSchema = exports.FeedbackSimpleFieldSelectionField$inboundSchema = exports.FeedbackSimpleFieldSelectionType$ = exports.FeedbackSimpleFieldSelectionType$outboundSchema = exports.FeedbackSimpleFieldSelectionType$inboundSchema = exports.FeedbackSimpleFieldSelectionField = exports.FeedbackSimpleFieldSelectionType = void 0;
exports.feedbackSimpleFieldSelectionToJSON = feedbackSimpleFieldSelectionToJSON;
exports.feedbackSimpleFieldSelectionFromJSON = feedbackSimpleFieldSelectionFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
exports.FeedbackSimpleFieldSelectionType = {
    Field: "field",
};
exports.FeedbackSimpleFieldSelectionField = {
    Id: "id",
    Type: "type",
    MessageId: "messageId",
    CreatedAt: "createdAt",
    OrganizationId: "organizationId",
    Reasons: "reasons",
    Properties: "properties",
    UserProperties: "userProperties",
    ConversationId: "conversationId",
    ProjectId: "projectId",
    IntegrationId: "integrationId",
    UpdatedAt: "updatedAt",
    Status: "status",
};
/** @internal */
exports.FeedbackSimpleFieldSelectionType$inboundSchema = z.nativeEnum(exports.FeedbackSimpleFieldSelectionType);
/** @internal */
exports.FeedbackSimpleFieldSelectionType$outboundSchema = exports.FeedbackSimpleFieldSelectionType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FeedbackSimpleFieldSelectionType$;
(function (FeedbackSimpleFieldSelectionType$) {
    /** @deprecated use `FeedbackSimpleFieldSelectionType$inboundSchema` instead. */
    FeedbackSimpleFieldSelectionType$.inboundSchema = exports.FeedbackSimpleFieldSelectionType$inboundSchema;
    /** @deprecated use `FeedbackSimpleFieldSelectionType$outboundSchema` instead. */
    FeedbackSimpleFieldSelectionType$.outboundSchema = exports.FeedbackSimpleFieldSelectionType$outboundSchema;
})(FeedbackSimpleFieldSelectionType$ || (exports.FeedbackSimpleFieldSelectionType$ = FeedbackSimpleFieldSelectionType$ = {}));
/** @internal */
exports.FeedbackSimpleFieldSelectionField$inboundSchema = z.nativeEnum(exports.FeedbackSimpleFieldSelectionField);
/** @internal */
exports.FeedbackSimpleFieldSelectionField$outboundSchema = exports.FeedbackSimpleFieldSelectionField$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FeedbackSimpleFieldSelectionField$;
(function (FeedbackSimpleFieldSelectionField$) {
    /** @deprecated use `FeedbackSimpleFieldSelectionField$inboundSchema` instead. */
    FeedbackSimpleFieldSelectionField$.inboundSchema = exports.FeedbackSimpleFieldSelectionField$inboundSchema;
    /** @deprecated use `FeedbackSimpleFieldSelectionField$outboundSchema` instead. */
    FeedbackSimpleFieldSelectionField$.outboundSchema = exports.FeedbackSimpleFieldSelectionField$outboundSchema;
})(FeedbackSimpleFieldSelectionField$ || (exports.FeedbackSimpleFieldSelectionField$ = FeedbackSimpleFieldSelectionField$ = {}));
/** @internal */
exports.FeedbackSimpleFieldSelection$inboundSchema = z.object({
    type: exports.FeedbackSimpleFieldSelectionType$inboundSchema,
    field: exports.FeedbackSimpleFieldSelectionField$inboundSchema,
    path: z.array(z.string()).optional(),
});
/** @internal */
exports.FeedbackSimpleFieldSelection$outboundSchema = z.object({
    type: exports.FeedbackSimpleFieldSelectionType$outboundSchema,
    field: exports.FeedbackSimpleFieldSelectionField$outboundSchema,
    path: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FeedbackSimpleFieldSelection$;
(function (FeedbackSimpleFieldSelection$) {
    /** @deprecated use `FeedbackSimpleFieldSelection$inboundSchema` instead. */
    FeedbackSimpleFieldSelection$.inboundSchema = exports.FeedbackSimpleFieldSelection$inboundSchema;
    /** @deprecated use `FeedbackSimpleFieldSelection$outboundSchema` instead. */
    FeedbackSimpleFieldSelection$.outboundSchema = exports.FeedbackSimpleFieldSelection$outboundSchema;
})(FeedbackSimpleFieldSelection$ || (exports.FeedbackSimpleFieldSelection$ = FeedbackSimpleFieldSelection$ = {}));
function feedbackSimpleFieldSelectionToJSON(feedbackSimpleFieldSelection) {
    return JSON.stringify(exports.FeedbackSimpleFieldSelection$outboundSchema.parse(feedbackSimpleFieldSelection));
}
function feedbackSimpleFieldSelectionFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FeedbackSimpleFieldSelection$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeedbackSimpleFieldSelection' from JSON`);
}
//# sourceMappingURL=feedbacksimplefieldselection.js.map