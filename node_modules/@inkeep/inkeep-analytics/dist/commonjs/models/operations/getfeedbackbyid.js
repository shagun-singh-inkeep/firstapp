"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetFeedbackByIdResponseBody$ = exports.GetFeedbackByIdResponseBody$outboundSchema = exports.GetFeedbackByIdResponseBody$inboundSchema = exports.GetFeedbackByIdUserProperties$ = exports.GetFeedbackByIdUserProperties$outboundSchema = exports.GetFeedbackByIdUserProperties$inboundSchema = exports.GetFeedbackByIdUserType$ = exports.GetFeedbackByIdUserType$outboundSchema = exports.GetFeedbackByIdUserType$inboundSchema = exports.GetFeedbackByIdUserId$ = exports.GetFeedbackByIdUserId$outboundSchema = exports.GetFeedbackByIdUserId$inboundSchema = exports.GetFeedbackByIdId$ = exports.GetFeedbackByIdId$outboundSchema = exports.GetFeedbackByIdId$inboundSchema = exports.GetFeedbackByIdReasons$ = exports.GetFeedbackByIdReasons$outboundSchema = exports.GetFeedbackByIdReasons$inboundSchema = exports.GetFeedbackByIdType$ = exports.GetFeedbackByIdType$outboundSchema = exports.GetFeedbackByIdType$inboundSchema = exports.GetFeedbackByIdRequest$ = exports.GetFeedbackByIdRequest$outboundSchema = exports.GetFeedbackByIdRequest$inboundSchema = exports.GetFeedbackByIdUserType = exports.GetFeedbackByIdType = void 0;
exports.getFeedbackByIdRequestToJSON = getFeedbackByIdRequestToJSON;
exports.getFeedbackByIdRequestFromJSON = getFeedbackByIdRequestFromJSON;
exports.getFeedbackByIdReasonsToJSON = getFeedbackByIdReasonsToJSON;
exports.getFeedbackByIdReasonsFromJSON = getFeedbackByIdReasonsFromJSON;
exports.getFeedbackByIdIdToJSON = getFeedbackByIdIdToJSON;
exports.getFeedbackByIdIdFromJSON = getFeedbackByIdIdFromJSON;
exports.getFeedbackByIdUserIdToJSON = getFeedbackByIdUserIdToJSON;
exports.getFeedbackByIdUserIdFromJSON = getFeedbackByIdUserIdFromJSON;
exports.getFeedbackByIdUserPropertiesToJSON = getFeedbackByIdUserPropertiesToJSON;
exports.getFeedbackByIdUserPropertiesFromJSON = getFeedbackByIdUserPropertiesFromJSON;
exports.getFeedbackByIdResponseBodyToJSON = getFeedbackByIdResponseBodyToJSON;
exports.getFeedbackByIdResponseBodyFromJSON = getFeedbackByIdResponseBodyFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const components = __importStar(require("../components/index.js"));
exports.GetFeedbackByIdType = {
    Positive: "positive",
    Negative: "negative",
};
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
exports.GetFeedbackByIdUserType = {
    User: "user",
    Member: "member",
};
/** @internal */
exports.GetFeedbackByIdRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
exports.GetFeedbackByIdRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetFeedbackByIdRequest$;
(function (GetFeedbackByIdRequest$) {
    /** @deprecated use `GetFeedbackByIdRequest$inboundSchema` instead. */
    GetFeedbackByIdRequest$.inboundSchema = exports.GetFeedbackByIdRequest$inboundSchema;
    /** @deprecated use `GetFeedbackByIdRequest$outboundSchema` instead. */
    GetFeedbackByIdRequest$.outboundSchema = exports.GetFeedbackByIdRequest$outboundSchema;
})(GetFeedbackByIdRequest$ || (exports.GetFeedbackByIdRequest$ = GetFeedbackByIdRequest$ = {}));
function getFeedbackByIdRequestToJSON(getFeedbackByIdRequest) {
    return JSON.stringify(exports.GetFeedbackByIdRequest$outboundSchema.parse(getFeedbackByIdRequest));
}
function getFeedbackByIdRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetFeedbackByIdRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFeedbackByIdRequest' from JSON`);
}
/** @internal */
exports.GetFeedbackByIdType$inboundSchema = z.nativeEnum(exports.GetFeedbackByIdType);
/** @internal */
exports.GetFeedbackByIdType$outboundSchema = exports.GetFeedbackByIdType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetFeedbackByIdType$;
(function (GetFeedbackByIdType$) {
    /** @deprecated use `GetFeedbackByIdType$inboundSchema` instead. */
    GetFeedbackByIdType$.inboundSchema = exports.GetFeedbackByIdType$inboundSchema;
    /** @deprecated use `GetFeedbackByIdType$outboundSchema` instead. */
    GetFeedbackByIdType$.outboundSchema = exports.GetFeedbackByIdType$outboundSchema;
})(GetFeedbackByIdType$ || (exports.GetFeedbackByIdType$ = GetFeedbackByIdType$ = {}));
/** @internal */
exports.GetFeedbackByIdReasons$inboundSchema = z.object({
    label: z.string(),
    details: z.string(),
});
/** @internal */
exports.GetFeedbackByIdReasons$outboundSchema = z.object({
    label: z.string(),
    details: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetFeedbackByIdReasons$;
(function (GetFeedbackByIdReasons$) {
    /** @deprecated use `GetFeedbackByIdReasons$inboundSchema` instead. */
    GetFeedbackByIdReasons$.inboundSchema = exports.GetFeedbackByIdReasons$inboundSchema;
    /** @deprecated use `GetFeedbackByIdReasons$outboundSchema` instead. */
    GetFeedbackByIdReasons$.outboundSchema = exports.GetFeedbackByIdReasons$outboundSchema;
})(GetFeedbackByIdReasons$ || (exports.GetFeedbackByIdReasons$ = GetFeedbackByIdReasons$ = {}));
function getFeedbackByIdReasonsToJSON(getFeedbackByIdReasons) {
    return JSON.stringify(exports.GetFeedbackByIdReasons$outboundSchema.parse(getFeedbackByIdReasons));
}
function getFeedbackByIdReasonsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetFeedbackByIdReasons$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFeedbackByIdReasons' from JSON`);
}
/** @internal */
exports.GetFeedbackByIdId$inboundSchema = z.union([z.string(), z.number()]);
/** @internal */
exports.GetFeedbackByIdId$outboundSchema = z.union([z.string(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetFeedbackByIdId$;
(function (GetFeedbackByIdId$) {
    /** @deprecated use `GetFeedbackByIdId$inboundSchema` instead. */
    GetFeedbackByIdId$.inboundSchema = exports.GetFeedbackByIdId$inboundSchema;
    /** @deprecated use `GetFeedbackByIdId$outboundSchema` instead. */
    GetFeedbackByIdId$.outboundSchema = exports.GetFeedbackByIdId$outboundSchema;
})(GetFeedbackByIdId$ || (exports.GetFeedbackByIdId$ = GetFeedbackByIdId$ = {}));
function getFeedbackByIdIdToJSON(getFeedbackByIdId) {
    return JSON.stringify(exports.GetFeedbackByIdId$outboundSchema.parse(getFeedbackByIdId));
}
function getFeedbackByIdIdFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetFeedbackByIdId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFeedbackByIdId' from JSON`);
}
/** @internal */
exports.GetFeedbackByIdUserId$inboundSchema = z.union([z.string(), z.number()]);
/** @internal */
exports.GetFeedbackByIdUserId$outboundSchema = z.union([z.string(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetFeedbackByIdUserId$;
(function (GetFeedbackByIdUserId$) {
    /** @deprecated use `GetFeedbackByIdUserId$inboundSchema` instead. */
    GetFeedbackByIdUserId$.inboundSchema = exports.GetFeedbackByIdUserId$inboundSchema;
    /** @deprecated use `GetFeedbackByIdUserId$outboundSchema` instead. */
    GetFeedbackByIdUserId$.outboundSchema = exports.GetFeedbackByIdUserId$outboundSchema;
})(GetFeedbackByIdUserId$ || (exports.GetFeedbackByIdUserId$ = GetFeedbackByIdUserId$ = {}));
function getFeedbackByIdUserIdToJSON(getFeedbackByIdUserId) {
    return JSON.stringify(exports.GetFeedbackByIdUserId$outboundSchema.parse(getFeedbackByIdUserId));
}
function getFeedbackByIdUserIdFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetFeedbackByIdUserId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFeedbackByIdUserId' from JSON`);
}
/** @internal */
exports.GetFeedbackByIdUserType$inboundSchema = z.nativeEnum(exports.GetFeedbackByIdUserType);
/** @internal */
exports.GetFeedbackByIdUserType$outboundSchema = exports.GetFeedbackByIdUserType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetFeedbackByIdUserType$;
(function (GetFeedbackByIdUserType$) {
    /** @deprecated use `GetFeedbackByIdUserType$inboundSchema` instead. */
    GetFeedbackByIdUserType$.inboundSchema = exports.GetFeedbackByIdUserType$inboundSchema;
    /** @deprecated use `GetFeedbackByIdUserType$outboundSchema` instead. */
    GetFeedbackByIdUserType$.outboundSchema = exports.GetFeedbackByIdUserType$outboundSchema;
})(GetFeedbackByIdUserType$ || (exports.GetFeedbackByIdUserType$ = GetFeedbackByIdUserType$ = {}));
/** @internal */
exports.GetFeedbackByIdUserProperties$inboundSchema = (0, schemas_js_1.collectExtraKeys)(z.object({
    id: z.nullable(z.union([z.string(), z.number()])).optional(),
    identificationType: z.nullable(z.string()).optional(),
    userId: z.nullable(z.union([z.string(), z.number()])).optional(),
    supportAgentName: z.nullable(z.string()).optional(),
    userType: z.nullable(exports.GetFeedbackByIdUserType$inboundSchema).optional(),
}).catchall(z.any()), "additionalProperties", true);
/** @internal */
exports.GetFeedbackByIdUserProperties$outboundSchema = z.object({
    id: z.nullable(z.union([z.string(), z.number()])).optional(),
    identificationType: z.nullable(z.string()).optional(),
    userId: z.nullable(z.union([z.string(), z.number()])).optional(),
    supportAgentName: z.nullable(z.string()).optional(),
    userType: z.nullable(exports.GetFeedbackByIdUserType$outboundSchema).optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...(0, primitives_js_1.remap)(v, {
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetFeedbackByIdUserProperties$;
(function (GetFeedbackByIdUserProperties$) {
    /** @deprecated use `GetFeedbackByIdUserProperties$inboundSchema` instead. */
    GetFeedbackByIdUserProperties$.inboundSchema = exports.GetFeedbackByIdUserProperties$inboundSchema;
    /** @deprecated use `GetFeedbackByIdUserProperties$outboundSchema` instead. */
    GetFeedbackByIdUserProperties$.outboundSchema = exports.GetFeedbackByIdUserProperties$outboundSchema;
})(GetFeedbackByIdUserProperties$ || (exports.GetFeedbackByIdUserProperties$ = GetFeedbackByIdUserProperties$ = {}));
function getFeedbackByIdUserPropertiesToJSON(getFeedbackByIdUserProperties) {
    return JSON.stringify(exports.GetFeedbackByIdUserProperties$outboundSchema.parse(getFeedbackByIdUserProperties));
}
function getFeedbackByIdUserPropertiesFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetFeedbackByIdUserProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFeedbackByIdUserProperties' from JSON`);
}
/** @internal */
exports.GetFeedbackByIdResponseBody$inboundSchema = z.object({
    id: z.string(),
    type: exports.GetFeedbackByIdType$inboundSchema,
    messageId: z.string(),
    createdAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    reasons: z.nullable(z.array(z.lazy(() => exports.GetFeedbackByIdReasons$inboundSchema))).optional(),
    properties: z.nullable(z.record(z.any())).optional(),
    userProperties: z.nullable(z.lazy(() => exports.GetFeedbackByIdUserProperties$inboundSchema)).optional(),
    conversation: components.Conversation$inboundSchema,
    message: components.Message$inboundSchema,
});
/** @internal */
exports.GetFeedbackByIdResponseBody$outboundSchema = z.object({
    id: z.string(),
    type: exports.GetFeedbackByIdType$outboundSchema,
    messageId: z.string(),
    createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    reasons: z.nullable(z.array(z.lazy(() => exports.GetFeedbackByIdReasons$outboundSchema))).optional(),
    properties: z.nullable(z.record(z.any())).optional(),
    userProperties: z.nullable(z.lazy(() => exports.GetFeedbackByIdUserProperties$outboundSchema)).optional(),
    conversation: components.Conversation$outboundSchema,
    message: components.Message$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetFeedbackByIdResponseBody$;
(function (GetFeedbackByIdResponseBody$) {
    /** @deprecated use `GetFeedbackByIdResponseBody$inboundSchema` instead. */
    GetFeedbackByIdResponseBody$.inboundSchema = exports.GetFeedbackByIdResponseBody$inboundSchema;
    /** @deprecated use `GetFeedbackByIdResponseBody$outboundSchema` instead. */
    GetFeedbackByIdResponseBody$.outboundSchema = exports.GetFeedbackByIdResponseBody$outboundSchema;
})(GetFeedbackByIdResponseBody$ || (exports.GetFeedbackByIdResponseBody$ = GetFeedbackByIdResponseBody$ = {}));
function getFeedbackByIdResponseBodyToJSON(getFeedbackByIdResponseBody) {
    return JSON.stringify(exports.GetFeedbackByIdResponseBody$outboundSchema.parse(getFeedbackByIdResponseBody));
}
function getFeedbackByIdResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetFeedbackByIdResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFeedbackByIdResponseBody' from JSON`);
}
//# sourceMappingURL=getfeedbackbyid.js.map