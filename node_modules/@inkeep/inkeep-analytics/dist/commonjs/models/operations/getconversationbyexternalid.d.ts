import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetConversationByExternalIdRequest = {
    externalId: string;
};
/** @internal */
export declare const GetConversationByExternalIdRequest$inboundSchema: z.ZodType<GetConversationByExternalIdRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetConversationByExternalIdRequest$Outbound = {
    externalId: string;
};
/** @internal */
export declare const GetConversationByExternalIdRequest$outboundSchema: z.ZodType<GetConversationByExternalIdRequest$Outbound, z.ZodTypeDef, GetConversationByExternalIdRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetConversationByExternalIdRequest$ {
    /** @deprecated use `GetConversationByExternalIdRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetConversationByExternalIdRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetConversationByExternalIdRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetConversationByExternalIdRequest$Outbound, z.ZodTypeDef, GetConversationByExternalIdRequest>;
    /** @deprecated use `GetConversationByExternalIdRequest$Outbound` instead. */
    type Outbound = GetConversationByExternalIdRequest$Outbound;
}
export declare function getConversationByExternalIdRequestToJSON(getConversationByExternalIdRequest: GetConversationByExternalIdRequest): string;
export declare function getConversationByExternalIdRequestFromJSON(jsonString: string): SafeParseResult<GetConversationByExternalIdRequest, SDKValidationError>;
//# sourceMappingURL=getconversationbyexternalid.d.ts.map