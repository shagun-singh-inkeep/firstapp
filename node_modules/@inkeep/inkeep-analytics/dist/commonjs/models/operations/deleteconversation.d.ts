import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type DeleteConversationSecurity = {
    webIntegrationKey?: string | undefined;
    apiIntegrationKey?: string | undefined;
};
export type DeleteConversationRequest = {
    id: string;
};
/**
 * Conversation deleted successfully
 */
export type DeleteConversationResponseBody = {
    success: boolean;
    message: string;
};
/** @internal */
export declare const DeleteConversationSecurity$inboundSchema: z.ZodType<DeleteConversationSecurity, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteConversationSecurity$Outbound = {
    WebIntegrationKey?: string | undefined;
    ApiIntegrationKey?: string | undefined;
};
/** @internal */
export declare const DeleteConversationSecurity$outboundSchema: z.ZodType<DeleteConversationSecurity$Outbound, z.ZodTypeDef, DeleteConversationSecurity>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteConversationSecurity$ {
    /** @deprecated use `DeleteConversationSecurity$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteConversationSecurity, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteConversationSecurity$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteConversationSecurity$Outbound, z.ZodTypeDef, DeleteConversationSecurity>;
    /** @deprecated use `DeleteConversationSecurity$Outbound` instead. */
    type Outbound = DeleteConversationSecurity$Outbound;
}
export declare function deleteConversationSecurityToJSON(deleteConversationSecurity: DeleteConversationSecurity): string;
export declare function deleteConversationSecurityFromJSON(jsonString: string): SafeParseResult<DeleteConversationSecurity, SDKValidationError>;
/** @internal */
export declare const DeleteConversationRequest$inboundSchema: z.ZodType<DeleteConversationRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteConversationRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const DeleteConversationRequest$outboundSchema: z.ZodType<DeleteConversationRequest$Outbound, z.ZodTypeDef, DeleteConversationRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteConversationRequest$ {
    /** @deprecated use `DeleteConversationRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteConversationRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteConversationRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteConversationRequest$Outbound, z.ZodTypeDef, DeleteConversationRequest>;
    /** @deprecated use `DeleteConversationRequest$Outbound` instead. */
    type Outbound = DeleteConversationRequest$Outbound;
}
export declare function deleteConversationRequestToJSON(deleteConversationRequest: DeleteConversationRequest): string;
export declare function deleteConversationRequestFromJSON(jsonString: string): SafeParseResult<DeleteConversationRequest, SDKValidationError>;
/** @internal */
export declare const DeleteConversationResponseBody$inboundSchema: z.ZodType<DeleteConversationResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteConversationResponseBody$Outbound = {
    success: boolean;
    message: string;
};
/** @internal */
export declare const DeleteConversationResponseBody$outboundSchema: z.ZodType<DeleteConversationResponseBody$Outbound, z.ZodTypeDef, DeleteConversationResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteConversationResponseBody$ {
    /** @deprecated use `DeleteConversationResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteConversationResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteConversationResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteConversationResponseBody$Outbound, z.ZodTypeDef, DeleteConversationResponseBody>;
    /** @deprecated use `DeleteConversationResponseBody$Outbound` instead. */
    type Outbound = DeleteConversationResponseBody$Outbound;
}
export declare function deleteConversationResponseBodyToJSON(deleteConversationResponseBody: DeleteConversationResponseBody): string;
export declare function deleteConversationResponseBodyFromJSON(jsonString: string): SafeParseResult<DeleteConversationResponseBody, SDKValidationError>;
//# sourceMappingURL=deleteconversation.d.ts.map