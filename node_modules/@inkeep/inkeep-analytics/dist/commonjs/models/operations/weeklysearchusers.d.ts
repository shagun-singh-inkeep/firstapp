import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type WeeklySearchUsersRequest = {
    after?: string | undefined;
    projectId?: string | undefined;
};
export type WeeklySearchUsersResult = {
    week: string;
    uniqueUsers: string;
};
export type WeeklySearchUsersData = {
    result: Array<WeeklySearchUsersResult>;
    total: number;
};
/**
 * Weekly search users
 */
export type WeeklySearchUsersResponseBody = {
    data: WeeklySearchUsersData;
};
/** @internal */
export declare const WeeklySearchUsersRequest$inboundSchema: z.ZodType<WeeklySearchUsersRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type WeeklySearchUsersRequest$Outbound = {
    after?: string | undefined;
    project_id?: string | undefined;
};
/** @internal */
export declare const WeeklySearchUsersRequest$outboundSchema: z.ZodType<WeeklySearchUsersRequest$Outbound, z.ZodTypeDef, WeeklySearchUsersRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WeeklySearchUsersRequest$ {
    /** @deprecated use `WeeklySearchUsersRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WeeklySearchUsersRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `WeeklySearchUsersRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WeeklySearchUsersRequest$Outbound, z.ZodTypeDef, WeeklySearchUsersRequest>;
    /** @deprecated use `WeeklySearchUsersRequest$Outbound` instead. */
    type Outbound = WeeklySearchUsersRequest$Outbound;
}
export declare function weeklySearchUsersRequestToJSON(weeklySearchUsersRequest: WeeklySearchUsersRequest): string;
export declare function weeklySearchUsersRequestFromJSON(jsonString: string): SafeParseResult<WeeklySearchUsersRequest, SDKValidationError>;
/** @internal */
export declare const WeeklySearchUsersResult$inboundSchema: z.ZodType<WeeklySearchUsersResult, z.ZodTypeDef, unknown>;
/** @internal */
export type WeeklySearchUsersResult$Outbound = {
    week: string;
    unique_users: string;
};
/** @internal */
export declare const WeeklySearchUsersResult$outboundSchema: z.ZodType<WeeklySearchUsersResult$Outbound, z.ZodTypeDef, WeeklySearchUsersResult>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WeeklySearchUsersResult$ {
    /** @deprecated use `WeeklySearchUsersResult$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WeeklySearchUsersResult, z.ZodTypeDef, unknown>;
    /** @deprecated use `WeeklySearchUsersResult$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WeeklySearchUsersResult$Outbound, z.ZodTypeDef, WeeklySearchUsersResult>;
    /** @deprecated use `WeeklySearchUsersResult$Outbound` instead. */
    type Outbound = WeeklySearchUsersResult$Outbound;
}
export declare function weeklySearchUsersResultToJSON(weeklySearchUsersResult: WeeklySearchUsersResult): string;
export declare function weeklySearchUsersResultFromJSON(jsonString: string): SafeParseResult<WeeklySearchUsersResult, SDKValidationError>;
/** @internal */
export declare const WeeklySearchUsersData$inboundSchema: z.ZodType<WeeklySearchUsersData, z.ZodTypeDef, unknown>;
/** @internal */
export type WeeklySearchUsersData$Outbound = {
    result: Array<WeeklySearchUsersResult$Outbound>;
    total: number;
};
/** @internal */
export declare const WeeklySearchUsersData$outboundSchema: z.ZodType<WeeklySearchUsersData$Outbound, z.ZodTypeDef, WeeklySearchUsersData>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WeeklySearchUsersData$ {
    /** @deprecated use `WeeklySearchUsersData$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WeeklySearchUsersData, z.ZodTypeDef, unknown>;
    /** @deprecated use `WeeklySearchUsersData$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WeeklySearchUsersData$Outbound, z.ZodTypeDef, WeeklySearchUsersData>;
    /** @deprecated use `WeeklySearchUsersData$Outbound` instead. */
    type Outbound = WeeklySearchUsersData$Outbound;
}
export declare function weeklySearchUsersDataToJSON(weeklySearchUsersData: WeeklySearchUsersData): string;
export declare function weeklySearchUsersDataFromJSON(jsonString: string): SafeParseResult<WeeklySearchUsersData, SDKValidationError>;
/** @internal */
export declare const WeeklySearchUsersResponseBody$inboundSchema: z.ZodType<WeeklySearchUsersResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type WeeklySearchUsersResponseBody$Outbound = {
    data: WeeklySearchUsersData$Outbound;
};
/** @internal */
export declare const WeeklySearchUsersResponseBody$outboundSchema: z.ZodType<WeeklySearchUsersResponseBody$Outbound, z.ZodTypeDef, WeeklySearchUsersResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WeeklySearchUsersResponseBody$ {
    /** @deprecated use `WeeklySearchUsersResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WeeklySearchUsersResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `WeeklySearchUsersResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WeeklySearchUsersResponseBody$Outbound, z.ZodTypeDef, WeeklySearchUsersResponseBody>;
    /** @deprecated use `WeeklySearchUsersResponseBody$Outbound` instead. */
    type Outbound = WeeklySearchUsersResponseBody$Outbound;
}
export declare function weeklySearchUsersResponseBodyToJSON(weeklySearchUsersResponseBody: WeeklySearchUsersResponseBody): string;
export declare function weeklySearchUsersResponseBodyFromJSON(jsonString: string): SafeParseResult<WeeklySearchUsersResponseBody, SDKValidationError>;
//# sourceMappingURL=weeklysearchusers.d.ts.map