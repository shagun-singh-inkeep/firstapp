import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetAllConversationRequest = {
    limit?: number | null | undefined;
    offset?: number | null | undefined;
};
/**
 * Conversations retrieved successfully
 */
export type GetAllConversationResponseBody = {
    conversations: Array<components.Conversation>;
    total: number;
    pageSize: number;
    count: number;
};
/** @internal */
export declare const GetAllConversationRequest$inboundSchema: z.ZodType<GetAllConversationRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetAllConversationRequest$Outbound = {
    limit: number | null;
    offset: number | null;
};
/** @internal */
export declare const GetAllConversationRequest$outboundSchema: z.ZodType<GetAllConversationRequest$Outbound, z.ZodTypeDef, GetAllConversationRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAllConversationRequest$ {
    /** @deprecated use `GetAllConversationRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetAllConversationRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetAllConversationRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetAllConversationRequest$Outbound, z.ZodTypeDef, GetAllConversationRequest>;
    /** @deprecated use `GetAllConversationRequest$Outbound` instead. */
    type Outbound = GetAllConversationRequest$Outbound;
}
export declare function getAllConversationRequestToJSON(getAllConversationRequest: GetAllConversationRequest): string;
export declare function getAllConversationRequestFromJSON(jsonString: string): SafeParseResult<GetAllConversationRequest, SDKValidationError>;
/** @internal */
export declare const GetAllConversationResponseBody$inboundSchema: z.ZodType<GetAllConversationResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetAllConversationResponseBody$Outbound = {
    conversations: Array<components.Conversation$Outbound>;
    total: number;
    pageSize: number;
    count: number;
};
/** @internal */
export declare const GetAllConversationResponseBody$outboundSchema: z.ZodType<GetAllConversationResponseBody$Outbound, z.ZodTypeDef, GetAllConversationResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAllConversationResponseBody$ {
    /** @deprecated use `GetAllConversationResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetAllConversationResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetAllConversationResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetAllConversationResponseBody$Outbound, z.ZodTypeDef, GetAllConversationResponseBody>;
    /** @deprecated use `GetAllConversationResponseBody$Outbound` instead. */
    type Outbound = GetAllConversationResponseBody$Outbound;
}
export declare function getAllConversationResponseBodyToJSON(getAllConversationResponseBody: GetAllConversationResponseBody): string;
export declare function getAllConversationResponseBodyFromJSON(jsonString: string): SafeParseResult<GetAllConversationResponseBody, SDKValidationError>;
//# sourceMappingURL=getallconversation.d.ts.map