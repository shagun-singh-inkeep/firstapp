/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  QueryFeedbackResponseData,
  QueryFeedbackResponseData$inboundSchema,
  QueryFeedbackResponseData$Outbound,
  QueryFeedbackResponseData$outboundSchema,
} from "./queryfeedbackresponsedata.js";

/**
 * Status of the response
 */
export const QueryFeedbackResponseBodyStatus = {
  Ok: "ok",
} as const;
/**
 * Status of the response
 */
export type QueryFeedbackResponseBodyStatus = ClosedEnum<
  typeof QueryFeedbackResponseBodyStatus
>;

/**
 * Response body for QueryFeedback query endpoint
 */
export type QueryFeedbackResponseBody = {
  /**
   * Status of the response
   */
  status: QueryFeedbackResponseBodyStatus;
  /**
   * Data object containing QueryFeedback query results and pagination information
   */
  data: QueryFeedbackResponseData;
};

/** @internal */
export const QueryFeedbackResponseBodyStatus$inboundSchema: z.ZodNativeEnum<
  typeof QueryFeedbackResponseBodyStatus
> = z.nativeEnum(QueryFeedbackResponseBodyStatus);

/** @internal */
export const QueryFeedbackResponseBodyStatus$outboundSchema: z.ZodNativeEnum<
  typeof QueryFeedbackResponseBodyStatus
> = QueryFeedbackResponseBodyStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryFeedbackResponseBodyStatus$ {
  /** @deprecated use `QueryFeedbackResponseBodyStatus$inboundSchema` instead. */
  export const inboundSchema = QueryFeedbackResponseBodyStatus$inboundSchema;
  /** @deprecated use `QueryFeedbackResponseBodyStatus$outboundSchema` instead. */
  export const outboundSchema = QueryFeedbackResponseBodyStatus$outboundSchema;
}

/** @internal */
export const QueryFeedbackResponseBody$inboundSchema: z.ZodType<
  QueryFeedbackResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: QueryFeedbackResponseBodyStatus$inboundSchema,
  data: QueryFeedbackResponseData$inboundSchema,
});

/** @internal */
export type QueryFeedbackResponseBody$Outbound = {
  status: string;
  data: QueryFeedbackResponseData$Outbound;
};

/** @internal */
export const QueryFeedbackResponseBody$outboundSchema: z.ZodType<
  QueryFeedbackResponseBody$Outbound,
  z.ZodTypeDef,
  QueryFeedbackResponseBody
> = z.object({
  status: QueryFeedbackResponseBodyStatus$outboundSchema,
  data: QueryFeedbackResponseData$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryFeedbackResponseBody$ {
  /** @deprecated use `QueryFeedbackResponseBody$inboundSchema` instead. */
  export const inboundSchema = QueryFeedbackResponseBody$inboundSchema;
  /** @deprecated use `QueryFeedbackResponseBody$outboundSchema` instead. */
  export const outboundSchema = QueryFeedbackResponseBody$outboundSchema;
  /** @deprecated use `QueryFeedbackResponseBody$Outbound` instead. */
  export type Outbound = QueryFeedbackResponseBody$Outbound;
}

export function queryFeedbackResponseBodyToJSON(
  queryFeedbackResponseBody: QueryFeedbackResponseBody,
): string {
  return JSON.stringify(
    QueryFeedbackResponseBody$outboundSchema.parse(queryFeedbackResponseBody),
  );
}

export function queryFeedbackResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<QueryFeedbackResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => QueryFeedbackResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QueryFeedbackResponseBody' from JSON`,
  );
}
