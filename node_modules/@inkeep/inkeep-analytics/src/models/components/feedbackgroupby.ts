/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  FeedbackField,
  FeedbackField$inboundSchema,
  FeedbackField$outboundSchema,
} from "./feedbackfield.js";

/**
 * Group by options for feedback
 */
export type FeedbackGroupBy = {
  /**
   * Available fields for Feedback
   */
  field: FeedbackField;
  path?: Array<string> | undefined;
  includeInSelect?: boolean | undefined;
};

/** @internal */
export const FeedbackGroupBy$inboundSchema: z.ZodType<
  FeedbackGroupBy,
  z.ZodTypeDef,
  unknown
> = z.object({
  field: FeedbackField$inboundSchema,
  path: z.array(z.string()).optional(),
  includeInSelect: z.boolean().default(true),
});

/** @internal */
export type FeedbackGroupBy$Outbound = {
  field: string;
  path?: Array<string> | undefined;
  includeInSelect: boolean;
};

/** @internal */
export const FeedbackGroupBy$outboundSchema: z.ZodType<
  FeedbackGroupBy$Outbound,
  z.ZodTypeDef,
  FeedbackGroupBy
> = z.object({
  field: FeedbackField$outboundSchema,
  path: z.array(z.string()).optional(),
  includeInSelect: z.boolean().default(true),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FeedbackGroupBy$ {
  /** @deprecated use `FeedbackGroupBy$inboundSchema` instead. */
  export const inboundSchema = FeedbackGroupBy$inboundSchema;
  /** @deprecated use `FeedbackGroupBy$outboundSchema` instead. */
  export const outboundSchema = FeedbackGroupBy$outboundSchema;
  /** @deprecated use `FeedbackGroupBy$Outbound` instead. */
  export type Outbound = FeedbackGroupBy$Outbound;
}

export function feedbackGroupByToJSON(
  feedbackGroupBy: FeedbackGroupBy,
): string {
  return JSON.stringify(FeedbackGroupBy$outboundSchema.parse(feedbackGroupBy));
}

export function feedbackGroupByFromJSON(
  jsonString: string,
): SafeParseResult<FeedbackGroupBy, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FeedbackGroupBy$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FeedbackGroupBy' from JSON`,
  );
}
