/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  collectExtraKeys as collectExtraKeys$,
  safeParse,
} from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The unique identifier for the user. This value is sent by the inkeep widget.
 */
export type QuerySemanticThreadsResponseDataId = string | number;

/**
 * The unique identifier for the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export type QuerySemanticThreadsResponseDataUserId = string | number;

/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export const QuerySemanticThreadsResponseDataUserType = {
  User: "user",
  Member: "member",
} as const;
/**
 * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
 */
export type QuerySemanticThreadsResponseDataUserType = ClosedEnum<
  typeof QuerySemanticThreadsResponseDataUserType
>;

/**
 * A customizable collection of custom properties or attributes. Some properties have first class support for the Inkeep Portal or Widget and are noted in the description.
 */
export type QuerySemanticThreadsResponseDataUserProperties = {
  /**
   * The unique identifier for the user. This value is sent by the inkeep widget.
   */
  id?: string | number | null | undefined;
  /**
   * The type of identification for the user. This value is sent by the inkeep widget.
   */
  identificationType?: string | null | undefined;
  /**
   * The unique identifier for the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
   */
  userId?: string | number | null | undefined;
  /**
   * The name of the support agent assigned to the user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
   */
  supportAgentName?: string | null | undefined;
  /**
   * The type of user. This value is sent by the Inkeep Support Agent Copilot. This value is used to create the graphs on the Inkeep Portal.
   */
  userType?: QuerySemanticThreadsResponseDataUserType | null | undefined;
  additionalProperties?: { [k: string]: any };
};

export type SemanticThreadResultItem = {
  id?: string | undefined;
  messageIds?: any | undefined;
  messagesCount?: any | undefined;
  organizationId?: string | undefined;
  question?: string | undefined;
  questionLength?: any | undefined;
  answer?: string | undefined;
  isOnTopic?: any | undefined;
  isClear?: any | undefined;
  isDocumented?: any | undefined;
  isFeatureSupported?: any | undefined;
  isAnswerConfident?: any | undefined;
  gapSummary?: any | undefined;
  subject?: any | undefined;
  category?: any | undefined;
  languages?: any | undefined;
  firstPartyEntities?: any | undefined;
  thirdPartyEntities?: any | undefined;
  emotion?: any | undefined;
  sentiment?: any | undefined;
  questionType?: any | undefined;
  projectId?: string | undefined;
  integrationId?: string | undefined;
  /**
   * A customizable collection of custom properties or attributes.
   */
  properties?: { [k: string]: any } | null | undefined;
  /**
   * A customizable collection of custom properties or attributes. Some properties have first class support for the Inkeep Portal or Widget and are noted in the description.
   */
  userProperties?:
    | QuerySemanticThreadsResponseDataUserProperties
    | null
    | undefined;
  firstMessageTime?: Date | undefined;
  lastMessageTime?: Date | undefined;
  lastUpdated?: Date | undefined;
  hasPositiveFeedback?: boolean | undefined;
  hasNegativeFeedback?: boolean | undefined;
  conversationIds?: Array<string> | undefined;
  areAIAnnotationsVerified?: any | undefined;
  isInitialQuestionAnswer?: boolean | undefined;
  sum?: number | undefined;
  count?: number | undefined;
  avg?: number | undefined;
  min?: number | undefined;
  max?: number | undefined;
  idHour?: string | undefined;
  idDay?: string | undefined;
  idWeek?: string | undefined;
  idMonth?: string | undefined;
  messageIdsHour?: string | undefined;
  messageIdsDay?: string | undefined;
  messageIdsWeek?: string | undefined;
  messageIdsMonth?: string | undefined;
  messagesCountHour?: string | undefined;
  messagesCountDay?: string | undefined;
  messagesCountWeek?: string | undefined;
  messagesCountMonth?: string | undefined;
  organizationIdHour?: string | undefined;
  organizationIdDay?: string | undefined;
  organizationIdWeek?: string | undefined;
  organizationIdMonth?: string | undefined;
  questionHour?: string | undefined;
  questionDay?: string | undefined;
  questionWeek?: string | undefined;
  questionMonth?: string | undefined;
  questionLengthHour?: string | undefined;
  questionLengthDay?: string | undefined;
  questionLengthWeek?: string | undefined;
  questionLengthMonth?: string | undefined;
  answerHour?: string | undefined;
  answerDay?: string | undefined;
  answerWeek?: string | undefined;
  answerMonth?: string | undefined;
  isOnTopicHour?: string | undefined;
  isOnTopicDay?: string | undefined;
  isOnTopicWeek?: string | undefined;
  isOnTopicMonth?: string | undefined;
  isClearHour?: string | undefined;
  isClearDay?: string | undefined;
  isClearWeek?: string | undefined;
  isClearMonth?: string | undefined;
  isDocumentedHour?: string | undefined;
  isDocumentedDay?: string | undefined;
  isDocumentedWeek?: string | undefined;
  isDocumentedMonth?: string | undefined;
  isFeatureSupportedHour?: string | undefined;
  isFeatureSupportedDay?: string | undefined;
  isFeatureSupportedWeek?: string | undefined;
  isFeatureSupportedMonth?: string | undefined;
  isAnswerConfidentHour?: string | undefined;
  isAnswerConfidentDay?: string | undefined;
  isAnswerConfidentWeek?: string | undefined;
  isAnswerConfidentMonth?: string | undefined;
  gapSummaryHour?: string | undefined;
  gapSummaryDay?: string | undefined;
  gapSummaryWeek?: string | undefined;
  gapSummaryMonth?: string | undefined;
  subjectHour?: string | undefined;
  subjectDay?: string | undefined;
  subjectWeek?: string | undefined;
  subjectMonth?: string | undefined;
  categoryHour?: string | undefined;
  categoryDay?: string | undefined;
  categoryWeek?: string | undefined;
  categoryMonth?: string | undefined;
  languagesHour?: string | undefined;
  languagesDay?: string | undefined;
  languagesWeek?: string | undefined;
  languagesMonth?: string | undefined;
  firstPartyEntitiesHour?: string | undefined;
  firstPartyEntitiesDay?: string | undefined;
  firstPartyEntitiesWeek?: string | undefined;
  firstPartyEntitiesMonth?: string | undefined;
  thirdPartyEntitiesHour?: string | undefined;
  thirdPartyEntitiesDay?: string | undefined;
  thirdPartyEntitiesWeek?: string | undefined;
  thirdPartyEntitiesMonth?: string | undefined;
  emotionHour?: string | undefined;
  emotionDay?: string | undefined;
  emotionWeek?: string | undefined;
  emotionMonth?: string | undefined;
  sentimentHour?: string | undefined;
  sentimentDay?: string | undefined;
  sentimentWeek?: string | undefined;
  sentimentMonth?: string | undefined;
  questionTypeHour?: string | undefined;
  questionTypeDay?: string | undefined;
  questionTypeWeek?: string | undefined;
  questionTypeMonth?: string | undefined;
  projectIdHour?: string | undefined;
  projectIdDay?: string | undefined;
  projectIdWeek?: string | undefined;
  projectIdMonth?: string | undefined;
  integrationIdHour?: string | undefined;
  integrationIdDay?: string | undefined;
  integrationIdWeek?: string | undefined;
  integrationIdMonth?: string | undefined;
  propertiesHour?: string | undefined;
  propertiesDay?: string | undefined;
  propertiesWeek?: string | undefined;
  propertiesMonth?: string | undefined;
  userPropertiesHour?: string | undefined;
  userPropertiesDay?: string | undefined;
  userPropertiesWeek?: string | undefined;
  userPropertiesMonth?: string | undefined;
  firstMessageTimeHour?: string | undefined;
  firstMessageTimeDay?: string | undefined;
  firstMessageTimeWeek?: string | undefined;
  firstMessageTimeMonth?: string | undefined;
  lastMessageTimeHour?: string | undefined;
  lastMessageTimeDay?: string | undefined;
  lastMessageTimeWeek?: string | undefined;
  lastMessageTimeMonth?: string | undefined;
  lastUpdatedHour?: string | undefined;
  lastUpdatedDay?: string | undefined;
  lastUpdatedWeek?: string | undefined;
  lastUpdatedMonth?: string | undefined;
  hasPositiveFeedbackHour?: string | undefined;
  hasPositiveFeedbackDay?: string | undefined;
  hasPositiveFeedbackWeek?: string | undefined;
  hasPositiveFeedbackMonth?: string | undefined;
  hasNegativeFeedbackHour?: string | undefined;
  hasNegativeFeedbackDay?: string | undefined;
  hasNegativeFeedbackWeek?: string | undefined;
  hasNegativeFeedbackMonth?: string | undefined;
  conversationIdsHour?: string | undefined;
  conversationIdsDay?: string | undefined;
  conversationIdsWeek?: string | undefined;
  conversationIdsMonth?: string | undefined;
  areAIAnnotationsVerifiedHour?: string | undefined;
  areAIAnnotationsVerifiedDay?: string | undefined;
  areAIAnnotationsVerifiedWeek?: string | undefined;
  areAIAnnotationsVerifiedMonth?: string | undefined;
  isInitialQuestionAnswerHour?: string | undefined;
  isInitialQuestionAnswerDay?: string | undefined;
  isInitialQuestionAnswerWeek?: string | undefined;
  isInitialQuestionAnswerMonth?: string | undefined;
  sumId?: number | undefined;
  sumMessageIds?: number | undefined;
  sumMessagesCount?: number | undefined;
  sumOrganizationId?: number | undefined;
  sumQuestion?: number | undefined;
  sumQuestionLength?: number | undefined;
  sumAnswer?: number | undefined;
  sumIsOnTopic?: number | undefined;
  sumIsClear?: number | undefined;
  sumIsDocumented?: number | undefined;
  sumIsFeatureSupported?: number | undefined;
  sumIsAnswerConfident?: number | undefined;
  sumGapSummary?: number | undefined;
  sumSubject?: number | undefined;
  sumCategory?: number | undefined;
  sumLanguages?: number | undefined;
  sumFirstPartyEntities?: number | undefined;
  sumThirdPartyEntities?: number | undefined;
  sumEmotion?: number | undefined;
  sumSentiment?: number | undefined;
  sumQuestionType?: number | undefined;
  sumProjectId?: number | undefined;
  sumIntegrationId?: number | undefined;
  sumProperties?: number | undefined;
  sumUserProperties?: number | undefined;
  sumFirstMessageTime?: number | undefined;
  sumLastMessageTime?: number | undefined;
  sumLastUpdated?: number | undefined;
  sumHasPositiveFeedback?: number | undefined;
  sumHasNegativeFeedback?: number | undefined;
  sumConversationIds?: number | undefined;
  sumAreAIAnnotationsVerified?: number | undefined;
  sumIsInitialQuestionAnswer?: number | undefined;
  countId?: number | undefined;
  countMessageIds?: number | undefined;
  countMessagesCount?: number | undefined;
  countOrganizationId?: number | undefined;
  countQuestion?: number | undefined;
  countQuestionLength?: number | undefined;
  countAnswer?: number | undefined;
  countIsOnTopic?: number | undefined;
  countIsClear?: number | undefined;
  countIsDocumented?: number | undefined;
  countIsFeatureSupported?: number | undefined;
  countIsAnswerConfident?: number | undefined;
  countGapSummary?: number | undefined;
  countSubject?: number | undefined;
  countCategory?: number | undefined;
  countLanguages?: number | undefined;
  countFirstPartyEntities?: number | undefined;
  countThirdPartyEntities?: number | undefined;
  countEmotion?: number | undefined;
  countSentiment?: number | undefined;
  countQuestionType?: number | undefined;
  countProjectId?: number | undefined;
  countIntegrationId?: number | undefined;
  countProperties?: number | undefined;
  countUserProperties?: number | undefined;
  countFirstMessageTime?: number | undefined;
  countLastMessageTime?: number | undefined;
  countLastUpdated?: number | undefined;
  countHasPositiveFeedback?: number | undefined;
  countHasNegativeFeedback?: number | undefined;
  countConversationIds?: number | undefined;
  countAreAIAnnotationsVerified?: number | undefined;
  countIsInitialQuestionAnswer?: number | undefined;
  avgId?: number | undefined;
  avgMessageIds?: number | undefined;
  avgMessagesCount?: number | undefined;
  avgOrganizationId?: number | undefined;
  avgQuestion?: number | undefined;
  avgQuestionLength?: number | undefined;
  avgAnswer?: number | undefined;
  avgIsOnTopic?: number | undefined;
  avgIsClear?: number | undefined;
  avgIsDocumented?: number | undefined;
  avgIsFeatureSupported?: number | undefined;
  avgIsAnswerConfident?: number | undefined;
  avgGapSummary?: number | undefined;
  avgSubject?: number | undefined;
  avgCategory?: number | undefined;
  avgLanguages?: number | undefined;
  avgFirstPartyEntities?: number | undefined;
  avgThirdPartyEntities?: number | undefined;
  avgEmotion?: number | undefined;
  avgSentiment?: number | undefined;
  avgQuestionType?: number | undefined;
  avgProjectId?: number | undefined;
  avgIntegrationId?: number | undefined;
  avgProperties?: number | undefined;
  avgUserProperties?: number | undefined;
  avgFirstMessageTime?: number | undefined;
  avgLastMessageTime?: number | undefined;
  avgLastUpdated?: number | undefined;
  avgHasPositiveFeedback?: number | undefined;
  avgHasNegativeFeedback?: number | undefined;
  avgConversationIds?: number | undefined;
  avgAreAIAnnotationsVerified?: number | undefined;
  avgIsInitialQuestionAnswer?: number | undefined;
  minId?: number | undefined;
  minMessageIds?: number | undefined;
  minMessagesCount?: number | undefined;
  minOrganizationId?: number | undefined;
  minQuestion?: number | undefined;
  minQuestionLength?: number | undefined;
  minAnswer?: number | undefined;
  minIsOnTopic?: number | undefined;
  minIsClear?: number | undefined;
  minIsDocumented?: number | undefined;
  minIsFeatureSupported?: number | undefined;
  minIsAnswerConfident?: number | undefined;
  minGapSummary?: number | undefined;
  minSubject?: number | undefined;
  minCategory?: number | undefined;
  minLanguages?: number | undefined;
  minFirstPartyEntities?: number | undefined;
  minThirdPartyEntities?: number | undefined;
  minEmotion?: number | undefined;
  minSentiment?: number | undefined;
  minQuestionType?: number | undefined;
  minProjectId?: number | undefined;
  minIntegrationId?: number | undefined;
  minProperties?: number | undefined;
  minUserProperties?: number | undefined;
  minFirstMessageTime?: number | undefined;
  minLastMessageTime?: number | undefined;
  minLastUpdated?: number | undefined;
  minHasPositiveFeedback?: number | undefined;
  minHasNegativeFeedback?: number | undefined;
  minConversationIds?: number | undefined;
  minAreAIAnnotationsVerified?: number | undefined;
  minIsInitialQuestionAnswer?: number | undefined;
  maxId?: number | undefined;
  maxMessageIds?: number | undefined;
  maxMessagesCount?: number | undefined;
  maxOrganizationId?: number | undefined;
  maxQuestion?: number | undefined;
  maxQuestionLength?: number | undefined;
  maxAnswer?: number | undefined;
  maxIsOnTopic?: number | undefined;
  maxIsClear?: number | undefined;
  maxIsDocumented?: number | undefined;
  maxIsFeatureSupported?: number | undefined;
  maxIsAnswerConfident?: number | undefined;
  maxGapSummary?: number | undefined;
  maxSubject?: number | undefined;
  maxCategory?: number | undefined;
  maxLanguages?: number | undefined;
  maxFirstPartyEntities?: number | undefined;
  maxThirdPartyEntities?: number | undefined;
  maxEmotion?: number | undefined;
  maxSentiment?: number | undefined;
  maxQuestionType?: number | undefined;
  maxProjectId?: number | undefined;
  maxIntegrationId?: number | undefined;
  maxProperties?: number | undefined;
  maxUserProperties?: number | undefined;
  maxFirstMessageTime?: number | undefined;
  maxLastMessageTime?: number | undefined;
  maxLastUpdated?: number | undefined;
  maxHasPositiveFeedback?: number | undefined;
  maxHasNegativeFeedback?: number | undefined;
  maxConversationIds?: number | undefined;
  maxAreAIAnnotationsVerified?: number | undefined;
  maxIsInitialQuestionAnswer?: number | undefined;
};

/**
 * Data object containing QuerySemanticThreads query results and pagination information
 */
export type QuerySemanticThreadsResponseData = {
  result: Array<SemanticThreadResultItem>;
  /**
   * Total number of results matching the query
   */
  total: number;
  /**
   * Number of results per page
   */
  pageSize: number;
  /**
   * Number of results in the current response
   */
  count: number;
};

/** @internal */
export const QuerySemanticThreadsResponseDataId$inboundSchema: z.ZodType<
  QuerySemanticThreadsResponseDataId,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.number()]);

/** @internal */
export type QuerySemanticThreadsResponseDataId$Outbound = string | number;

/** @internal */
export const QuerySemanticThreadsResponseDataId$outboundSchema: z.ZodType<
  QuerySemanticThreadsResponseDataId$Outbound,
  z.ZodTypeDef,
  QuerySemanticThreadsResponseDataId
> = z.union([z.string(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QuerySemanticThreadsResponseDataId$ {
  /** @deprecated use `QuerySemanticThreadsResponseDataId$inboundSchema` instead. */
  export const inboundSchema = QuerySemanticThreadsResponseDataId$inboundSchema;
  /** @deprecated use `QuerySemanticThreadsResponseDataId$outboundSchema` instead. */
  export const outboundSchema =
    QuerySemanticThreadsResponseDataId$outboundSchema;
  /** @deprecated use `QuerySemanticThreadsResponseDataId$Outbound` instead. */
  export type Outbound = QuerySemanticThreadsResponseDataId$Outbound;
}

export function querySemanticThreadsResponseDataIdToJSON(
  querySemanticThreadsResponseDataId: QuerySemanticThreadsResponseDataId,
): string {
  return JSON.stringify(
    QuerySemanticThreadsResponseDataId$outboundSchema.parse(
      querySemanticThreadsResponseDataId,
    ),
  );
}

export function querySemanticThreadsResponseDataIdFromJSON(
  jsonString: string,
): SafeParseResult<QuerySemanticThreadsResponseDataId, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      QuerySemanticThreadsResponseDataId$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QuerySemanticThreadsResponseDataId' from JSON`,
  );
}

/** @internal */
export const QuerySemanticThreadsResponseDataUserId$inboundSchema: z.ZodType<
  QuerySemanticThreadsResponseDataUserId,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.number()]);

/** @internal */
export type QuerySemanticThreadsResponseDataUserId$Outbound = string | number;

/** @internal */
export const QuerySemanticThreadsResponseDataUserId$outboundSchema: z.ZodType<
  QuerySemanticThreadsResponseDataUserId$Outbound,
  z.ZodTypeDef,
  QuerySemanticThreadsResponseDataUserId
> = z.union([z.string(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QuerySemanticThreadsResponseDataUserId$ {
  /** @deprecated use `QuerySemanticThreadsResponseDataUserId$inboundSchema` instead. */
  export const inboundSchema =
    QuerySemanticThreadsResponseDataUserId$inboundSchema;
  /** @deprecated use `QuerySemanticThreadsResponseDataUserId$outboundSchema` instead. */
  export const outboundSchema =
    QuerySemanticThreadsResponseDataUserId$outboundSchema;
  /** @deprecated use `QuerySemanticThreadsResponseDataUserId$Outbound` instead. */
  export type Outbound = QuerySemanticThreadsResponseDataUserId$Outbound;
}

export function querySemanticThreadsResponseDataUserIdToJSON(
  querySemanticThreadsResponseDataUserId:
    QuerySemanticThreadsResponseDataUserId,
): string {
  return JSON.stringify(
    QuerySemanticThreadsResponseDataUserId$outboundSchema.parse(
      querySemanticThreadsResponseDataUserId,
    ),
  );
}

export function querySemanticThreadsResponseDataUserIdFromJSON(
  jsonString: string,
): SafeParseResult<QuerySemanticThreadsResponseDataUserId, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      QuerySemanticThreadsResponseDataUserId$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QuerySemanticThreadsResponseDataUserId' from JSON`,
  );
}

/** @internal */
export const QuerySemanticThreadsResponseDataUserType$inboundSchema:
  z.ZodNativeEnum<typeof QuerySemanticThreadsResponseDataUserType> = z
    .nativeEnum(QuerySemanticThreadsResponseDataUserType);

/** @internal */
export const QuerySemanticThreadsResponseDataUserType$outboundSchema:
  z.ZodNativeEnum<typeof QuerySemanticThreadsResponseDataUserType> =
    QuerySemanticThreadsResponseDataUserType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QuerySemanticThreadsResponseDataUserType$ {
  /** @deprecated use `QuerySemanticThreadsResponseDataUserType$inboundSchema` instead. */
  export const inboundSchema =
    QuerySemanticThreadsResponseDataUserType$inboundSchema;
  /** @deprecated use `QuerySemanticThreadsResponseDataUserType$outboundSchema` instead. */
  export const outboundSchema =
    QuerySemanticThreadsResponseDataUserType$outboundSchema;
}

/** @internal */
export const QuerySemanticThreadsResponseDataUserProperties$inboundSchema:
  z.ZodType<
    QuerySemanticThreadsResponseDataUserProperties,
    z.ZodTypeDef,
    unknown
  > = collectExtraKeys$(
    z.object({
      id: z.nullable(z.union([z.string(), z.number()])).optional(),
      identificationType: z.nullable(z.string()).optional(),
      userId: z.nullable(z.union([z.string(), z.number()])).optional(),
      supportAgentName: z.nullable(z.string()).optional(),
      userType: z.nullable(
        QuerySemanticThreadsResponseDataUserType$inboundSchema,
      ).optional(),
    }).catchall(z.any()),
    "additionalProperties",
    true,
  );

/** @internal */
export type QuerySemanticThreadsResponseDataUserProperties$Outbound = {
  id?: string | number | null | undefined;
  identificationType?: string | null | undefined;
  userId?: string | number | null | undefined;
  supportAgentName?: string | null | undefined;
  userType?: string | null | undefined;
  [additionalProperties: string]: unknown;
};

/** @internal */
export const QuerySemanticThreadsResponseDataUserProperties$outboundSchema:
  z.ZodType<
    QuerySemanticThreadsResponseDataUserProperties$Outbound,
    z.ZodTypeDef,
    QuerySemanticThreadsResponseDataUserProperties
  > = z.object({
    id: z.nullable(z.union([z.string(), z.number()])).optional(),
    identificationType: z.nullable(z.string()).optional(),
    userId: z.nullable(z.union([z.string(), z.number()])).optional(),
    supportAgentName: z.nullable(z.string()).optional(),
    userType: z.nullable(
      QuerySemanticThreadsResponseDataUserType$outboundSchema,
    ).optional(),
    additionalProperties: z.record(z.any()),
  }).transform((v) => {
    return {
      ...v.additionalProperties,
      ...remap$(v, {
        additionalProperties: null,
      }),
    };
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QuerySemanticThreadsResponseDataUserProperties$ {
  /** @deprecated use `QuerySemanticThreadsResponseDataUserProperties$inboundSchema` instead. */
  export const inboundSchema =
    QuerySemanticThreadsResponseDataUserProperties$inboundSchema;
  /** @deprecated use `QuerySemanticThreadsResponseDataUserProperties$outboundSchema` instead. */
  export const outboundSchema =
    QuerySemanticThreadsResponseDataUserProperties$outboundSchema;
  /** @deprecated use `QuerySemanticThreadsResponseDataUserProperties$Outbound` instead. */
  export type Outbound =
    QuerySemanticThreadsResponseDataUserProperties$Outbound;
}

export function querySemanticThreadsResponseDataUserPropertiesToJSON(
  querySemanticThreadsResponseDataUserProperties:
    QuerySemanticThreadsResponseDataUserProperties,
): string {
  return JSON.stringify(
    QuerySemanticThreadsResponseDataUserProperties$outboundSchema.parse(
      querySemanticThreadsResponseDataUserProperties,
    ),
  );
}

export function querySemanticThreadsResponseDataUserPropertiesFromJSON(
  jsonString: string,
): SafeParseResult<
  QuerySemanticThreadsResponseDataUserProperties,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      QuerySemanticThreadsResponseDataUserProperties$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'QuerySemanticThreadsResponseDataUserProperties' from JSON`,
  );
}

/** @internal */
export const SemanticThreadResultItem$inboundSchema: z.ZodType<
  SemanticThreadResultItem,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  messageIds: z.any().optional(),
  messagesCount: z.any().optional(),
  organizationId: z.string().optional(),
  question: z.string().optional(),
  questionLength: z.any().optional(),
  answer: z.string().optional(),
  isOnTopic: z.any().optional(),
  isClear: z.any().optional(),
  isDocumented: z.any().optional(),
  isFeatureSupported: z.any().optional(),
  isAnswerConfident: z.any().optional(),
  gapSummary: z.any().optional(),
  subject: z.any().optional(),
  category: z.any().optional(),
  languages: z.any().optional(),
  firstPartyEntities: z.any().optional(),
  thirdPartyEntities: z.any().optional(),
  emotion: z.any().optional(),
  sentiment: z.any().optional(),
  questionType: z.any().optional(),
  projectId: z.string().optional(),
  integrationId: z.string().optional(),
  properties: z.nullable(z.record(z.any())).optional(),
  userProperties: z.nullable(
    z.lazy(() => QuerySemanticThreadsResponseDataUserProperties$inboundSchema),
  ).optional(),
  firstMessageTime: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ).optional(),
  lastMessageTime: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ).optional(),
  lastUpdated: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  hasPositiveFeedback: z.boolean().optional(),
  hasNegativeFeedback: z.boolean().optional(),
  conversationIds: z.array(z.string()).optional(),
  areAIAnnotationsVerified: z.any().optional(),
  isInitialQuestionAnswer: z.boolean().optional(),
  sum: z.number().optional(),
  count: z.number().optional(),
  avg: z.number().optional(),
  min: z.number().optional(),
  max: z.number().optional(),
  id_hour: z.string().optional(),
  id_day: z.string().optional(),
  id_week: z.string().optional(),
  id_month: z.string().optional(),
  messageIds_hour: z.string().optional(),
  messageIds_day: z.string().optional(),
  messageIds_week: z.string().optional(),
  messageIds_month: z.string().optional(),
  messagesCount_hour: z.string().optional(),
  messagesCount_day: z.string().optional(),
  messagesCount_week: z.string().optional(),
  messagesCount_month: z.string().optional(),
  organizationId_hour: z.string().optional(),
  organizationId_day: z.string().optional(),
  organizationId_week: z.string().optional(),
  organizationId_month: z.string().optional(),
  question_hour: z.string().optional(),
  question_day: z.string().optional(),
  question_week: z.string().optional(),
  question_month: z.string().optional(),
  questionLength_hour: z.string().optional(),
  questionLength_day: z.string().optional(),
  questionLength_week: z.string().optional(),
  questionLength_month: z.string().optional(),
  answer_hour: z.string().optional(),
  answer_day: z.string().optional(),
  answer_week: z.string().optional(),
  answer_month: z.string().optional(),
  isOnTopic_hour: z.string().optional(),
  isOnTopic_day: z.string().optional(),
  isOnTopic_week: z.string().optional(),
  isOnTopic_month: z.string().optional(),
  isClear_hour: z.string().optional(),
  isClear_day: z.string().optional(),
  isClear_week: z.string().optional(),
  isClear_month: z.string().optional(),
  isDocumented_hour: z.string().optional(),
  isDocumented_day: z.string().optional(),
  isDocumented_week: z.string().optional(),
  isDocumented_month: z.string().optional(),
  isFeatureSupported_hour: z.string().optional(),
  isFeatureSupported_day: z.string().optional(),
  isFeatureSupported_week: z.string().optional(),
  isFeatureSupported_month: z.string().optional(),
  isAnswerConfident_hour: z.string().optional(),
  isAnswerConfident_day: z.string().optional(),
  isAnswerConfident_week: z.string().optional(),
  isAnswerConfident_month: z.string().optional(),
  gapSummary_hour: z.string().optional(),
  gapSummary_day: z.string().optional(),
  gapSummary_week: z.string().optional(),
  gapSummary_month: z.string().optional(),
  subject_hour: z.string().optional(),
  subject_day: z.string().optional(),
  subject_week: z.string().optional(),
  subject_month: z.string().optional(),
  category_hour: z.string().optional(),
  category_day: z.string().optional(),
  category_week: z.string().optional(),
  category_month: z.string().optional(),
  languages_hour: z.string().optional(),
  languages_day: z.string().optional(),
  languages_week: z.string().optional(),
  languages_month: z.string().optional(),
  firstPartyEntities_hour: z.string().optional(),
  firstPartyEntities_day: z.string().optional(),
  firstPartyEntities_week: z.string().optional(),
  firstPartyEntities_month: z.string().optional(),
  thirdPartyEntities_hour: z.string().optional(),
  thirdPartyEntities_day: z.string().optional(),
  thirdPartyEntities_week: z.string().optional(),
  thirdPartyEntities_month: z.string().optional(),
  emotion_hour: z.string().optional(),
  emotion_day: z.string().optional(),
  emotion_week: z.string().optional(),
  emotion_month: z.string().optional(),
  sentiment_hour: z.string().optional(),
  sentiment_day: z.string().optional(),
  sentiment_week: z.string().optional(),
  sentiment_month: z.string().optional(),
  questionType_hour: z.string().optional(),
  questionType_day: z.string().optional(),
  questionType_week: z.string().optional(),
  questionType_month: z.string().optional(),
  projectId_hour: z.string().optional(),
  projectId_day: z.string().optional(),
  projectId_week: z.string().optional(),
  projectId_month: z.string().optional(),
  integrationId_hour: z.string().optional(),
  integrationId_day: z.string().optional(),
  integrationId_week: z.string().optional(),
  integrationId_month: z.string().optional(),
  properties_hour: z.string().optional(),
  properties_day: z.string().optional(),
  properties_week: z.string().optional(),
  properties_month: z.string().optional(),
  userProperties_hour: z.string().optional(),
  userProperties_day: z.string().optional(),
  userProperties_week: z.string().optional(),
  userProperties_month: z.string().optional(),
  firstMessageTime_hour: z.string().optional(),
  firstMessageTime_day: z.string().optional(),
  firstMessageTime_week: z.string().optional(),
  firstMessageTime_month: z.string().optional(),
  lastMessageTime_hour: z.string().optional(),
  lastMessageTime_day: z.string().optional(),
  lastMessageTime_week: z.string().optional(),
  lastMessageTime_month: z.string().optional(),
  lastUpdated_hour: z.string().optional(),
  lastUpdated_day: z.string().optional(),
  lastUpdated_week: z.string().optional(),
  lastUpdated_month: z.string().optional(),
  hasPositiveFeedback_hour: z.string().optional(),
  hasPositiveFeedback_day: z.string().optional(),
  hasPositiveFeedback_week: z.string().optional(),
  hasPositiveFeedback_month: z.string().optional(),
  hasNegativeFeedback_hour: z.string().optional(),
  hasNegativeFeedback_day: z.string().optional(),
  hasNegativeFeedback_week: z.string().optional(),
  hasNegativeFeedback_month: z.string().optional(),
  conversationIds_hour: z.string().optional(),
  conversationIds_day: z.string().optional(),
  conversationIds_week: z.string().optional(),
  conversationIds_month: z.string().optional(),
  areAIAnnotationsVerified_hour: z.string().optional(),
  areAIAnnotationsVerified_day: z.string().optional(),
  areAIAnnotationsVerified_week: z.string().optional(),
  areAIAnnotationsVerified_month: z.string().optional(),
  isInitialQuestionAnswer_hour: z.string().optional(),
  isInitialQuestionAnswer_day: z.string().optional(),
  isInitialQuestionAnswer_week: z.string().optional(),
  isInitialQuestionAnswer_month: z.string().optional(),
  sum_id: z.number().optional(),
  sum_messageIds: z.number().optional(),
  sum_messagesCount: z.number().optional(),
  sum_organizationId: z.number().optional(),
  sum_question: z.number().optional(),
  sum_questionLength: z.number().optional(),
  sum_answer: z.number().optional(),
  sum_isOnTopic: z.number().optional(),
  sum_isClear: z.number().optional(),
  sum_isDocumented: z.number().optional(),
  sum_isFeatureSupported: z.number().optional(),
  sum_isAnswerConfident: z.number().optional(),
  sum_gapSummary: z.number().optional(),
  sum_subject: z.number().optional(),
  sum_category: z.number().optional(),
  sum_languages: z.number().optional(),
  sum_firstPartyEntities: z.number().optional(),
  sum_thirdPartyEntities: z.number().optional(),
  sum_emotion: z.number().optional(),
  sum_sentiment: z.number().optional(),
  sum_questionType: z.number().optional(),
  sum_projectId: z.number().optional(),
  sum_integrationId: z.number().optional(),
  sum_properties: z.number().optional(),
  sum_userProperties: z.number().optional(),
  sum_firstMessageTime: z.number().optional(),
  sum_lastMessageTime: z.number().optional(),
  sum_lastUpdated: z.number().optional(),
  sum_hasPositiveFeedback: z.number().optional(),
  sum_hasNegativeFeedback: z.number().optional(),
  sum_conversationIds: z.number().optional(),
  sum_areAIAnnotationsVerified: z.number().optional(),
  sum_isInitialQuestionAnswer: z.number().optional(),
  count_id: z.number().optional(),
  count_messageIds: z.number().optional(),
  count_messagesCount: z.number().optional(),
  count_organizationId: z.number().optional(),
  count_question: z.number().optional(),
  count_questionLength: z.number().optional(),
  count_answer: z.number().optional(),
  count_isOnTopic: z.number().optional(),
  count_isClear: z.number().optional(),
  count_isDocumented: z.number().optional(),
  count_isFeatureSupported: z.number().optional(),
  count_isAnswerConfident: z.number().optional(),
  count_gapSummary: z.number().optional(),
  count_subject: z.number().optional(),
  count_category: z.number().optional(),
  count_languages: z.number().optional(),
  count_firstPartyEntities: z.number().optional(),
  count_thirdPartyEntities: z.number().optional(),
  count_emotion: z.number().optional(),
  count_sentiment: z.number().optional(),
  count_questionType: z.number().optional(),
  count_projectId: z.number().optional(),
  count_integrationId: z.number().optional(),
  count_properties: z.number().optional(),
  count_userProperties: z.number().optional(),
  count_firstMessageTime: z.number().optional(),
  count_lastMessageTime: z.number().optional(),
  count_lastUpdated: z.number().optional(),
  count_hasPositiveFeedback: z.number().optional(),
  count_hasNegativeFeedback: z.number().optional(),
  count_conversationIds: z.number().optional(),
  count_areAIAnnotationsVerified: z.number().optional(),
  count_isInitialQuestionAnswer: z.number().optional(),
  avg_id: z.number().optional(),
  avg_messageIds: z.number().optional(),
  avg_messagesCount: z.number().optional(),
  avg_organizationId: z.number().optional(),
  avg_question: z.number().optional(),
  avg_questionLength: z.number().optional(),
  avg_answer: z.number().optional(),
  avg_isOnTopic: z.number().optional(),
  avg_isClear: z.number().optional(),
  avg_isDocumented: z.number().optional(),
  avg_isFeatureSupported: z.number().optional(),
  avg_isAnswerConfident: z.number().optional(),
  avg_gapSummary: z.number().optional(),
  avg_subject: z.number().optional(),
  avg_category: z.number().optional(),
  avg_languages: z.number().optional(),
  avg_firstPartyEntities: z.number().optional(),
  avg_thirdPartyEntities: z.number().optional(),
  avg_emotion: z.number().optional(),
  avg_sentiment: z.number().optional(),
  avg_questionType: z.number().optional(),
  avg_projectId: z.number().optional(),
  avg_integrationId: z.number().optional(),
  avg_properties: z.number().optional(),
  avg_userProperties: z.number().optional(),
  avg_firstMessageTime: z.number().optional(),
  avg_lastMessageTime: z.number().optional(),
  avg_lastUpdated: z.number().optional(),
  avg_hasPositiveFeedback: z.number().optional(),
  avg_hasNegativeFeedback: z.number().optional(),
  avg_conversationIds: z.number().optional(),
  avg_areAIAnnotationsVerified: z.number().optional(),
  avg_isInitialQuestionAnswer: z.number().optional(),
  min_id: z.number().optional(),
  min_messageIds: z.number().optional(),
  min_messagesCount: z.number().optional(),
  min_organizationId: z.number().optional(),
  min_question: z.number().optional(),
  min_questionLength: z.number().optional(),
  min_answer: z.number().optional(),
  min_isOnTopic: z.number().optional(),
  min_isClear: z.number().optional(),
  min_isDocumented: z.number().optional(),
  min_isFeatureSupported: z.number().optional(),
  min_isAnswerConfident: z.number().optional(),
  min_gapSummary: z.number().optional(),
  min_subject: z.number().optional(),
  min_category: z.number().optional(),
  min_languages: z.number().optional(),
  min_firstPartyEntities: z.number().optional(),
  min_thirdPartyEntities: z.number().optional(),
  min_emotion: z.number().optional(),
  min_sentiment: z.number().optional(),
  min_questionType: z.number().optional(),
  min_projectId: z.number().optional(),
  min_integrationId: z.number().optional(),
  min_properties: z.number().optional(),
  min_userProperties: z.number().optional(),
  min_firstMessageTime: z.number().optional(),
  min_lastMessageTime: z.number().optional(),
  min_lastUpdated: z.number().optional(),
  min_hasPositiveFeedback: z.number().optional(),
  min_hasNegativeFeedback: z.number().optional(),
  min_conversationIds: z.number().optional(),
  min_areAIAnnotationsVerified: z.number().optional(),
  min_isInitialQuestionAnswer: z.number().optional(),
  max_id: z.number().optional(),
  max_messageIds: z.number().optional(),
  max_messagesCount: z.number().optional(),
  max_organizationId: z.number().optional(),
  max_question: z.number().optional(),
  max_questionLength: z.number().optional(),
  max_answer: z.number().optional(),
  max_isOnTopic: z.number().optional(),
  max_isClear: z.number().optional(),
  max_isDocumented: z.number().optional(),
  max_isFeatureSupported: z.number().optional(),
  max_isAnswerConfident: z.number().optional(),
  max_gapSummary: z.number().optional(),
  max_subject: z.number().optional(),
  max_category: z.number().optional(),
  max_languages: z.number().optional(),
  max_firstPartyEntities: z.number().optional(),
  max_thirdPartyEntities: z.number().optional(),
  max_emotion: z.number().optional(),
  max_sentiment: z.number().optional(),
  max_questionType: z.number().optional(),
  max_projectId: z.number().optional(),
  max_integrationId: z.number().optional(),
  max_properties: z.number().optional(),
  max_userProperties: z.number().optional(),
  max_firstMessageTime: z.number().optional(),
  max_lastMessageTime: z.number().optional(),
  max_lastUpdated: z.number().optional(),
  max_hasPositiveFeedback: z.number().optional(),
  max_hasNegativeFeedback: z.number().optional(),
  max_conversationIds: z.number().optional(),
  max_areAIAnnotationsVerified: z.number().optional(),
  max_isInitialQuestionAnswer: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "id_hour": "idHour",
    "id_day": "idDay",
    "id_week": "idWeek",
    "id_month": "idMonth",
    "messageIds_hour": "messageIdsHour",
    "messageIds_day": "messageIdsDay",
    "messageIds_week": "messageIdsWeek",
    "messageIds_month": "messageIdsMonth",
    "messagesCount_hour": "messagesCountHour",
    "messagesCount_day": "messagesCountDay",
    "messagesCount_week": "messagesCountWeek",
    "messagesCount_month": "messagesCountMonth",
    "organizationId_hour": "organizationIdHour",
    "organizationId_day": "organizationIdDay",
    "organizationId_week": "organizationIdWeek",
    "organizationId_month": "organizationIdMonth",
    "question_hour": "questionHour",
    "question_day": "questionDay",
    "question_week": "questionWeek",
    "question_month": "questionMonth",
    "questionLength_hour": "questionLengthHour",
    "questionLength_day": "questionLengthDay",
    "questionLength_week": "questionLengthWeek",
    "questionLength_month": "questionLengthMonth",
    "answer_hour": "answerHour",
    "answer_day": "answerDay",
    "answer_week": "answerWeek",
    "answer_month": "answerMonth",
    "isOnTopic_hour": "isOnTopicHour",
    "isOnTopic_day": "isOnTopicDay",
    "isOnTopic_week": "isOnTopicWeek",
    "isOnTopic_month": "isOnTopicMonth",
    "isClear_hour": "isClearHour",
    "isClear_day": "isClearDay",
    "isClear_week": "isClearWeek",
    "isClear_month": "isClearMonth",
    "isDocumented_hour": "isDocumentedHour",
    "isDocumented_day": "isDocumentedDay",
    "isDocumented_week": "isDocumentedWeek",
    "isDocumented_month": "isDocumentedMonth",
    "isFeatureSupported_hour": "isFeatureSupportedHour",
    "isFeatureSupported_day": "isFeatureSupportedDay",
    "isFeatureSupported_week": "isFeatureSupportedWeek",
    "isFeatureSupported_month": "isFeatureSupportedMonth",
    "isAnswerConfident_hour": "isAnswerConfidentHour",
    "isAnswerConfident_day": "isAnswerConfidentDay",
    "isAnswerConfident_week": "isAnswerConfidentWeek",
    "isAnswerConfident_month": "isAnswerConfidentMonth",
    "gapSummary_hour": "gapSummaryHour",
    "gapSummary_day": "gapSummaryDay",
    "gapSummary_week": "gapSummaryWeek",
    "gapSummary_month": "gapSummaryMonth",
    "subject_hour": "subjectHour",
    "subject_day": "subjectDay",
    "subject_week": "subjectWeek",
    "subject_month": "subjectMonth",
    "category_hour": "categoryHour",
    "category_day": "categoryDay",
    "category_week": "categoryWeek",
    "category_month": "categoryMonth",
    "languages_hour": "languagesHour",
    "languages_day": "languagesDay",
    "languages_week": "languagesWeek",
    "languages_month": "languagesMonth",
    "firstPartyEntities_hour": "firstPartyEntitiesHour",
    "firstPartyEntities_day": "firstPartyEntitiesDay",
    "firstPartyEntities_week": "firstPartyEntitiesWeek",
    "firstPartyEntities_month": "firstPartyEntitiesMonth",
    "thirdPartyEntities_hour": "thirdPartyEntitiesHour",
    "thirdPartyEntities_day": "thirdPartyEntitiesDay",
    "thirdPartyEntities_week": "thirdPartyEntitiesWeek",
    "thirdPartyEntities_month": "thirdPartyEntitiesMonth",
    "emotion_hour": "emotionHour",
    "emotion_day": "emotionDay",
    "emotion_week": "emotionWeek",
    "emotion_month": "emotionMonth",
    "sentiment_hour": "sentimentHour",
    "sentiment_day": "sentimentDay",
    "sentiment_week": "sentimentWeek",
    "sentiment_month": "sentimentMonth",
    "questionType_hour": "questionTypeHour",
    "questionType_day": "questionTypeDay",
    "questionType_week": "questionTypeWeek",
    "questionType_month": "questionTypeMonth",
    "projectId_hour": "projectIdHour",
    "projectId_day": "projectIdDay",
    "projectId_week": "projectIdWeek",
    "projectId_month": "projectIdMonth",
    "integrationId_hour": "integrationIdHour",
    "integrationId_day": "integrationIdDay",
    "integrationId_week": "integrationIdWeek",
    "integrationId_month": "integrationIdMonth",
    "properties_hour": "propertiesHour",
    "properties_day": "propertiesDay",
    "properties_week": "propertiesWeek",
    "properties_month": "propertiesMonth",
    "userProperties_hour": "userPropertiesHour",
    "userProperties_day": "userPropertiesDay",
    "userProperties_week": "userPropertiesWeek",
    "userProperties_month": "userPropertiesMonth",
    "firstMessageTime_hour": "firstMessageTimeHour",
    "firstMessageTime_day": "firstMessageTimeDay",
    "firstMessageTime_week": "firstMessageTimeWeek",
    "firstMessageTime_month": "firstMessageTimeMonth",
    "lastMessageTime_hour": "lastMessageTimeHour",
    "lastMessageTime_day": "lastMessageTimeDay",
    "lastMessageTime_week": "lastMessageTimeWeek",
    "lastMessageTime_month": "lastMessageTimeMonth",
    "lastUpdated_hour": "lastUpdatedHour",
    "lastUpdated_day": "lastUpdatedDay",
    "lastUpdated_week": "lastUpdatedWeek",
    "lastUpdated_month": "lastUpdatedMonth",
    "hasPositiveFeedback_hour": "hasPositiveFeedbackHour",
    "hasPositiveFeedback_day": "hasPositiveFeedbackDay",
    "hasPositiveFeedback_week": "hasPositiveFeedbackWeek",
    "hasPositiveFeedback_month": "hasPositiveFeedbackMonth",
    "hasNegativeFeedback_hour": "hasNegativeFeedbackHour",
    "hasNegativeFeedback_day": "hasNegativeFeedbackDay",
    "hasNegativeFeedback_week": "hasNegativeFeedbackWeek",
    "hasNegativeFeedback_month": "hasNegativeFeedbackMonth",
    "conversationIds_hour": "conversationIdsHour",
    "conversationIds_day": "conversationIdsDay",
    "conversationIds_week": "conversationIdsWeek",
    "conversationIds_month": "conversationIdsMonth",
    "areAIAnnotationsVerified_hour": "areAIAnnotationsVerifiedHour",
    "areAIAnnotationsVerified_day": "areAIAnnotationsVerifiedDay",
    "areAIAnnotationsVerified_week": "areAIAnnotationsVerifiedWeek",
    "areAIAnnotationsVerified_month": "areAIAnnotationsVerifiedMonth",
    "isInitialQuestionAnswer_hour": "isInitialQuestionAnswerHour",
    "isInitialQuestionAnswer_day": "isInitialQuestionAnswerDay",
    "isInitialQuestionAnswer_week": "isInitialQuestionAnswerWeek",
    "isInitialQuestionAnswer_month": "isInitialQuestionAnswerMonth",
    "sum_id": "sumId",
    "sum_messageIds": "sumMessageIds",
    "sum_messagesCount": "sumMessagesCount",
    "sum_organizationId": "sumOrganizationId",
    "sum_question": "sumQuestion",
    "sum_questionLength": "sumQuestionLength",
    "sum_answer": "sumAnswer",
    "sum_isOnTopic": "sumIsOnTopic",
    "sum_isClear": "sumIsClear",
    "sum_isDocumented": "sumIsDocumented",
    "sum_isFeatureSupported": "sumIsFeatureSupported",
    "sum_isAnswerConfident": "sumIsAnswerConfident",
    "sum_gapSummary": "sumGapSummary",
    "sum_subject": "sumSubject",
    "sum_category": "sumCategory",
    "sum_languages": "sumLanguages",
    "sum_firstPartyEntities": "sumFirstPartyEntities",
    "sum_thirdPartyEntities": "sumThirdPartyEntities",
    "sum_emotion": "sumEmotion",
    "sum_sentiment": "sumSentiment",
    "sum_questionType": "sumQuestionType",
    "sum_projectId": "sumProjectId",
    "sum_integrationId": "sumIntegrationId",
    "sum_properties": "sumProperties",
    "sum_userProperties": "sumUserProperties",
    "sum_firstMessageTime": "sumFirstMessageTime",
    "sum_lastMessageTime": "sumLastMessageTime",
    "sum_lastUpdated": "sumLastUpdated",
    "sum_hasPositiveFeedback": "sumHasPositiveFeedback",
    "sum_hasNegativeFeedback": "sumHasNegativeFeedback",
    "sum_conversationIds": "sumConversationIds",
    "sum_areAIAnnotationsVerified": "sumAreAIAnnotationsVerified",
    "sum_isInitialQuestionAnswer": "sumIsInitialQuestionAnswer",
    "count_id": "countId",
    "count_messageIds": "countMessageIds",
    "count_messagesCount": "countMessagesCount",
    "count_organizationId": "countOrganizationId",
    "count_question": "countQuestion",
    "count_questionLength": "countQuestionLength",
    "count_answer": "countAnswer",
    "count_isOnTopic": "countIsOnTopic",
    "count_isClear": "countIsClear",
    "count_isDocumented": "countIsDocumented",
    "count_isFeatureSupported": "countIsFeatureSupported",
    "count_isAnswerConfident": "countIsAnswerConfident",
    "count_gapSummary": "countGapSummary",
    "count_subject": "countSubject",
    "count_category": "countCategory",
    "count_languages": "countLanguages",
    "count_firstPartyEntities": "countFirstPartyEntities",
    "count_thirdPartyEntities": "countThirdPartyEntities",
    "count_emotion": "countEmotion",
    "count_sentiment": "countSentiment",
    "count_questionType": "countQuestionType",
    "count_projectId": "countProjectId",
    "count_integrationId": "countIntegrationId",
    "count_properties": "countProperties",
    "count_userProperties": "countUserProperties",
    "count_firstMessageTime": "countFirstMessageTime",
    "count_lastMessageTime": "countLastMessageTime",
    "count_lastUpdated": "countLastUpdated",
    "count_hasPositiveFeedback": "countHasPositiveFeedback",
    "count_hasNegativeFeedback": "countHasNegativeFeedback",
    "count_conversationIds": "countConversationIds",
    "count_areAIAnnotationsVerified": "countAreAIAnnotationsVerified",
    "count_isInitialQuestionAnswer": "countIsInitialQuestionAnswer",
    "avg_id": "avgId",
    "avg_messageIds": "avgMessageIds",
    "avg_messagesCount": "avgMessagesCount",
    "avg_organizationId": "avgOrganizationId",
    "avg_question": "avgQuestion",
    "avg_questionLength": "avgQuestionLength",
    "avg_answer": "avgAnswer",
    "avg_isOnTopic": "avgIsOnTopic",
    "avg_isClear": "avgIsClear",
    "avg_isDocumented": "avgIsDocumented",
    "avg_isFeatureSupported": "avgIsFeatureSupported",
    "avg_isAnswerConfident": "avgIsAnswerConfident",
    "avg_gapSummary": "avgGapSummary",
    "avg_subject": "avgSubject",
    "avg_category": "avgCategory",
    "avg_languages": "avgLanguages",
    "avg_firstPartyEntities": "avgFirstPartyEntities",
    "avg_thirdPartyEntities": "avgThirdPartyEntities",
    "avg_emotion": "avgEmotion",
    "avg_sentiment": "avgSentiment",
    "avg_questionType": "avgQuestionType",
    "avg_projectId": "avgProjectId",
    "avg_integrationId": "avgIntegrationId",
    "avg_properties": "avgProperties",
    "avg_userProperties": "avgUserProperties",
    "avg_firstMessageTime": "avgFirstMessageTime",
    "avg_lastMessageTime": "avgLastMessageTime",
    "avg_lastUpdated": "avgLastUpdated",
    "avg_hasPositiveFeedback": "avgHasPositiveFeedback",
    "avg_hasNegativeFeedback": "avgHasNegativeFeedback",
    "avg_conversationIds": "avgConversationIds",
    "avg_areAIAnnotationsVerified": "avgAreAIAnnotationsVerified",
    "avg_isInitialQuestionAnswer": "avgIsInitialQuestionAnswer",
    "min_id": "minId",
    "min_messageIds": "minMessageIds",
    "min_messagesCount": "minMessagesCount",
    "min_organizationId": "minOrganizationId",
    "min_question": "minQuestion",
    "min_questionLength": "minQuestionLength",
    "min_answer": "minAnswer",
    "min_isOnTopic": "minIsOnTopic",
    "min_isClear": "minIsClear",
    "min_isDocumented": "minIsDocumented",
    "min_isFeatureSupported": "minIsFeatureSupported",
    "min_isAnswerConfident": "minIsAnswerConfident",
    "min_gapSummary": "minGapSummary",
    "min_subject": "minSubject",
    "min_category": "minCategory",
    "min_languages": "minLanguages",
    "min_firstPartyEntities": "minFirstPartyEntities",
    "min_thirdPartyEntities": "minThirdPartyEntities",
    "min_emotion": "minEmotion",
    "min_sentiment": "minSentiment",
    "min_questionType": "minQuestionType",
    "min_projectId": "minProjectId",
    "min_integrationId": "minIntegrationId",
    "min_properties": "minProperties",
    "min_userProperties": "minUserProperties",
    "min_firstMessageTime": "minFirstMessageTime",
    "min_lastMessageTime": "minLastMessageTime",
    "min_lastUpdated": "minLastUpdated",
    "min_hasPositiveFeedback": "minHasPositiveFeedback",
    "min_hasNegativeFeedback": "minHasNegativeFeedback",
    "min_conversationIds": "minConversationIds",
    "min_areAIAnnotationsVerified": "minAreAIAnnotationsVerified",
    "min_isInitialQuestionAnswer": "minIsInitialQuestionAnswer",
    "max_id": "maxId",
    "max_messageIds": "maxMessageIds",
    "max_messagesCount": "maxMessagesCount",
    "max_organizationId": "maxOrganizationId",
    "max_question": "maxQuestion",
    "max_questionLength": "maxQuestionLength",
    "max_answer": "maxAnswer",
    "max_isOnTopic": "maxIsOnTopic",
    "max_isClear": "maxIsClear",
    "max_isDocumented": "maxIsDocumented",
    "max_isFeatureSupported": "maxIsFeatureSupported",
    "max_isAnswerConfident": "maxIsAnswerConfident",
    "max_gapSummary": "maxGapSummary",
    "max_subject": "maxSubject",
    "max_category": "maxCategory",
    "max_languages": "maxLanguages",
    "max_firstPartyEntities": "maxFirstPartyEntities",
    "max_thirdPartyEntities": "maxThirdPartyEntities",
    "max_emotion": "maxEmotion",
    "max_sentiment": "maxSentiment",
    "max_questionType": "maxQuestionType",
    "max_projectId": "maxProjectId",
    "max_integrationId": "maxIntegrationId",
    "max_properties": "maxProperties",
    "max_userProperties": "maxUserProperties",
    "max_firstMessageTime": "maxFirstMessageTime",
    "max_lastMessageTime": "maxLastMessageTime",
    "max_lastUpdated": "maxLastUpdated",
    "max_hasPositiveFeedback": "maxHasPositiveFeedback",
    "max_hasNegativeFeedback": "maxHasNegativeFeedback",
    "max_conversationIds": "maxConversationIds",
    "max_areAIAnnotationsVerified": "maxAreAIAnnotationsVerified",
    "max_isInitialQuestionAnswer": "maxIsInitialQuestionAnswer",
  });
});

/** @internal */
export type SemanticThreadResultItem$Outbound = {
  id?: string | undefined;
  messageIds?: any | undefined;
  messagesCount?: any | undefined;
  organizationId?: string | undefined;
  question?: string | undefined;
  questionLength?: any | undefined;
  answer?: string | undefined;
  isOnTopic?: any | undefined;
  isClear?: any | undefined;
  isDocumented?: any | undefined;
  isFeatureSupported?: any | undefined;
  isAnswerConfident?: any | undefined;
  gapSummary?: any | undefined;
  subject?: any | undefined;
  category?: any | undefined;
  languages?: any | undefined;
  firstPartyEntities?: any | undefined;
  thirdPartyEntities?: any | undefined;
  emotion?: any | undefined;
  sentiment?: any | undefined;
  questionType?: any | undefined;
  projectId?: string | undefined;
  integrationId?: string | undefined;
  properties?: { [k: string]: any } | null | undefined;
  userProperties?:
    | QuerySemanticThreadsResponseDataUserProperties$Outbound
    | null
    | undefined;
  firstMessageTime?: string | undefined;
  lastMessageTime?: string | undefined;
  lastUpdated?: string | undefined;
  hasPositiveFeedback?: boolean | undefined;
  hasNegativeFeedback?: boolean | undefined;
  conversationIds?: Array<string> | undefined;
  areAIAnnotationsVerified?: any | undefined;
  isInitialQuestionAnswer?: boolean | undefined;
  sum?: number | undefined;
  count?: number | undefined;
  avg?: number | undefined;
  min?: number | undefined;
  max?: number | undefined;
  id_hour?: string | undefined;
  id_day?: string | undefined;
  id_week?: string | undefined;
  id_month?: string | undefined;
  messageIds_hour?: string | undefined;
  messageIds_day?: string | undefined;
  messageIds_week?: string | undefined;
  messageIds_month?: string | undefined;
  messagesCount_hour?: string | undefined;
  messagesCount_day?: string | undefined;
  messagesCount_week?: string | undefined;
  messagesCount_month?: string | undefined;
  organizationId_hour?: string | undefined;
  organizationId_day?: string | undefined;
  organizationId_week?: string | undefined;
  organizationId_month?: string | undefined;
  question_hour?: string | undefined;
  question_day?: string | undefined;
  question_week?: string | undefined;
  question_month?: string | undefined;
  questionLength_hour?: string | undefined;
  questionLength_day?: string | undefined;
  questionLength_week?: string | undefined;
  questionLength_month?: string | undefined;
  answer_hour?: string | undefined;
  answer_day?: string | undefined;
  answer_week?: string | undefined;
  answer_month?: string | undefined;
  isOnTopic_hour?: string | undefined;
  isOnTopic_day?: string | undefined;
  isOnTopic_week?: string | undefined;
  isOnTopic_month?: string | undefined;
  isClear_hour?: string | undefined;
  isClear_day?: string | undefined;
  isClear_week?: string | undefined;
  isClear_month?: string | undefined;
  isDocumented_hour?: string | undefined;
  isDocumented_day?: string | undefined;
  isDocumented_week?: string | undefined;
  isDocumented_month?: string | undefined;
  isFeatureSupported_hour?: string | undefined;
  isFeatureSupported_day?: string | undefined;
  isFeatureSupported_week?: string | undefined;
  isFeatureSupported_month?: string | undefined;
  isAnswerConfident_hour?: string | undefined;
  isAnswerConfident_day?: string | undefined;
  isAnswerConfident_week?: string | undefined;
  isAnswerConfident_month?: string | undefined;
  gapSummary_hour?: string | undefined;
  gapSummary_day?: string | undefined;
  gapSummary_week?: string | undefined;
  gapSummary_month?: string | undefined;
  subject_hour?: string | undefined;
  subject_day?: string | undefined;
  subject_week?: string | undefined;
  subject_month?: string | undefined;
  category_hour?: string | undefined;
  category_day?: string | undefined;
  category_week?: string | undefined;
  category_month?: string | undefined;
  languages_hour?: string | undefined;
  languages_day?: string | undefined;
  languages_week?: string | undefined;
  languages_month?: string | undefined;
  firstPartyEntities_hour?: string | undefined;
  firstPartyEntities_day?: string | undefined;
  firstPartyEntities_week?: string | undefined;
  firstPartyEntities_month?: string | undefined;
  thirdPartyEntities_hour?: string | undefined;
  thirdPartyEntities_day?: string | undefined;
  thirdPartyEntities_week?: string | undefined;
  thirdPartyEntities_month?: string | undefined;
  emotion_hour?: string | undefined;
  emotion_day?: string | undefined;
  emotion_week?: string | undefined;
  emotion_month?: string | undefined;
  sentiment_hour?: string | undefined;
  sentiment_day?: string | undefined;
  sentiment_week?: string | undefined;
  sentiment_month?: string | undefined;
  questionType_hour?: string | undefined;
  questionType_day?: string | undefined;
  questionType_week?: string | undefined;
  questionType_month?: string | undefined;
  projectId_hour?: string | undefined;
  projectId_day?: string | undefined;
  projectId_week?: string | undefined;
  projectId_month?: string | undefined;
  integrationId_hour?: string | undefined;
  integrationId_day?: string | undefined;
  integrationId_week?: string | undefined;
  integrationId_month?: string | undefined;
  properties_hour?: string | undefined;
  properties_day?: string | undefined;
  properties_week?: string | undefined;
  properties_month?: string | undefined;
  userProperties_hour?: string | undefined;
  userProperties_day?: string | undefined;
  userProperties_week?: string | undefined;
  userProperties_month?: string | undefined;
  firstMessageTime_hour?: string | undefined;
  firstMessageTime_day?: string | undefined;
  firstMessageTime_week?: string | undefined;
  firstMessageTime_month?: string | undefined;
  lastMessageTime_hour?: string | undefined;
  lastMessageTime_day?: string | undefined;
  lastMessageTime_week?: string | undefined;
  lastMessageTime_month?: string | undefined;
  lastUpdated_hour?: string | undefined;
  lastUpdated_day?: string | undefined;
  lastUpdated_week?: string | undefined;
  lastUpdated_month?: string | undefined;
  hasPositiveFeedback_hour?: string | undefined;
  hasPositiveFeedback_day?: string | undefined;
  hasPositiveFeedback_week?: string | undefined;
  hasPositiveFeedback_month?: string | undefined;
  hasNegativeFeedback_hour?: string | undefined;
  hasNegativeFeedback_day?: string | undefined;
  hasNegativeFeedback_week?: string | undefined;
  hasNegativeFeedback_month?: string | undefined;
  conversationIds_hour?: string | undefined;
  conversationIds_day?: string | undefined;
  conversationIds_week?: string | undefined;
  conversationIds_month?: string | undefined;
  areAIAnnotationsVerified_hour?: string | undefined;
  areAIAnnotationsVerified_day?: string | undefined;
  areAIAnnotationsVerified_week?: string | undefined;
  areAIAnnotationsVerified_month?: string | undefined;
  isInitialQuestionAnswer_hour?: string | undefined;
  isInitialQuestionAnswer_day?: string | undefined;
  isInitialQuestionAnswer_week?: string | undefined;
  isInitialQuestionAnswer_month?: string | undefined;
  sum_id?: number | undefined;
  sum_messageIds?: number | undefined;
  sum_messagesCount?: number | undefined;
  sum_organizationId?: number | undefined;
  sum_question?: number | undefined;
  sum_questionLength?: number | undefined;
  sum_answer?: number | undefined;
  sum_isOnTopic?: number | undefined;
  sum_isClear?: number | undefined;
  sum_isDocumented?: number | undefined;
  sum_isFeatureSupported?: number | undefined;
  sum_isAnswerConfident?: number | undefined;
  sum_gapSummary?: number | undefined;
  sum_subject?: number | undefined;
  sum_category?: number | undefined;
  sum_languages?: number | undefined;
  sum_firstPartyEntities?: number | undefined;
  sum_thirdPartyEntities?: number | undefined;
  sum_emotion?: number | undefined;
  sum_sentiment?: number | undefined;
  sum_questionType?: number | undefined;
  sum_projectId?: number | undefined;
  sum_integrationId?: number | undefined;
  sum_properties?: number | undefined;
  sum_userProperties?: number | undefined;
  sum_firstMessageTime?: number | undefined;
  sum_lastMessageTime?: number | undefined;
  sum_lastUpdated?: number | undefined;
  sum_hasPositiveFeedback?: number | undefined;
  sum_hasNegativeFeedback?: number | undefined;
  sum_conversationIds?: number | undefined;
  sum_areAIAnnotationsVerified?: number | undefined;
  sum_isInitialQuestionAnswer?: number | undefined;
  count_id?: number | undefined;
  count_messageIds?: number | undefined;
  count_messagesCount?: number | undefined;
  count_organizationId?: number | undefined;
  count_question?: number | undefined;
  count_questionLength?: number | undefined;
  count_answer?: number | undefined;
  count_isOnTopic?: number | undefined;
  count_isClear?: number | undefined;
  count_isDocumented?: number | undefined;
  count_isFeatureSupported?: number | undefined;
  count_isAnswerConfident?: number | undefined;
  count_gapSummary?: number | undefined;
  count_subject?: number | undefined;
  count_category?: number | undefined;
  count_languages?: number | undefined;
  count_firstPartyEntities?: number | undefined;
  count_thirdPartyEntities?: number | undefined;
  count_emotion?: number | undefined;
  count_sentiment?: number | undefined;
  count_questionType?: number | undefined;
  count_projectId?: number | undefined;
  count_integrationId?: number | undefined;
  count_properties?: number | undefined;
  count_userProperties?: number | undefined;
  count_firstMessageTime?: number | undefined;
  count_lastMessageTime?: number | undefined;
  count_lastUpdated?: number | undefined;
  count_hasPositiveFeedback?: number | undefined;
  count_hasNegativeFeedback?: number | undefined;
  count_conversationIds?: number | undefined;
  count_areAIAnnotationsVerified?: number | undefined;
  count_isInitialQuestionAnswer?: number | undefined;
  avg_id?: number | undefined;
  avg_messageIds?: number | undefined;
  avg_messagesCount?: number | undefined;
  avg_organizationId?: number | undefined;
  avg_question?: number | undefined;
  avg_questionLength?: number | undefined;
  avg_answer?: number | undefined;
  avg_isOnTopic?: number | undefined;
  avg_isClear?: number | undefined;
  avg_isDocumented?: number | undefined;
  avg_isFeatureSupported?: number | undefined;
  avg_isAnswerConfident?: number | undefined;
  avg_gapSummary?: number | undefined;
  avg_subject?: number | undefined;
  avg_category?: number | undefined;
  avg_languages?: number | undefined;
  avg_firstPartyEntities?: number | undefined;
  avg_thirdPartyEntities?: number | undefined;
  avg_emotion?: number | undefined;
  avg_sentiment?: number | undefined;
  avg_questionType?: number | undefined;
  avg_projectId?: number | undefined;
  avg_integrationId?: number | undefined;
  avg_properties?: number | undefined;
  avg_userProperties?: number | undefined;
  avg_firstMessageTime?: number | undefined;
  avg_lastMessageTime?: number | undefined;
  avg_lastUpdated?: number | undefined;
  avg_hasPositiveFeedback?: number | undefined;
  avg_hasNegativeFeedback?: number | undefined;
  avg_conversationIds?: number | undefined;
  avg_areAIAnnotationsVerified?: number | undefined;
  avg_isInitialQuestionAnswer?: number | undefined;
  min_id?: number | undefined;
  min_messageIds?: number | undefined;
  min_messagesCount?: number | undefined;
  min_organizationId?: number | undefined;
  min_question?: number | undefined;
  min_questionLength?: number | undefined;
  min_answer?: number | undefined;
  min_isOnTopic?: number | undefined;
  min_isClear?: number | undefined;
  min_isDocumented?: number | undefined;
  min_isFeatureSupported?: number | undefined;
  min_isAnswerConfident?: number | undefined;
  min_gapSummary?: number | undefined;
  min_subject?: number | undefined;
  min_category?: number | undefined;
  min_languages?: number | undefined;
  min_firstPartyEntities?: number | undefined;
  min_thirdPartyEntities?: number | undefined;
  min_emotion?: number | undefined;
  min_sentiment?: number | undefined;
  min_questionType?: number | undefined;
  min_projectId?: number | undefined;
  min_integrationId?: number | undefined;
  min_properties?: number | undefined;
  min_userProperties?: number | undefined;
  min_firstMessageTime?: number | undefined;
  min_lastMessageTime?: number | undefined;
  min_lastUpdated?: number | undefined;
  min_hasPositiveFeedback?: number | undefined;
  min_hasNegativeFeedback?: number | undefined;
  min_conversationIds?: number | undefined;
  min_areAIAnnotationsVerified?: number | undefined;
  min_isInitialQuestionAnswer?: number | undefined;
  max_id?: number | undefined;
  max_messageIds?: number | undefined;
  max_messagesCount?: number | undefined;
  max_organizationId?: number | undefined;
  max_question?: number | undefined;
  max_questionLength?: number | undefined;
  max_answer?: number | undefined;
  max_isOnTopic?: number | undefined;
  max_isClear?: number | undefined;
  max_isDocumented?: number | undefined;
  max_isFeatureSupported?: number | undefined;
  max_isAnswerConfident?: number | undefined;
  max_gapSummary?: number | undefined;
  max_subject?: number | undefined;
  max_category?: number | undefined;
  max_languages?: number | undefined;
  max_firstPartyEntities?: number | undefined;
  max_thirdPartyEntities?: number | undefined;
  max_emotion?: number | undefined;
  max_sentiment?: number | undefined;
  max_questionType?: number | undefined;
  max_projectId?: number | undefined;
  max_integrationId?: number | undefined;
  max_properties?: number | undefined;
  max_userProperties?: number | undefined;
  max_firstMessageTime?: number | undefined;
  max_lastMessageTime?: number | undefined;
  max_lastUpdated?: number | undefined;
  max_hasPositiveFeedback?: number | undefined;
  max_hasNegativeFeedback?: number | undefined;
  max_conversationIds?: number | undefined;
  max_areAIAnnotationsVerified?: number | undefined;
  max_isInitialQuestionAnswer?: number | undefined;
};

/** @internal */
export const SemanticThreadResultItem$outboundSchema: z.ZodType<
  SemanticThreadResultItem$Outbound,
  z.ZodTypeDef,
  SemanticThreadResultItem
> = z.object({
  id: z.string().optional(),
  messageIds: z.any().optional(),
  messagesCount: z.any().optional(),
  organizationId: z.string().optional(),
  question: z.string().optional(),
  questionLength: z.any().optional(),
  answer: z.string().optional(),
  isOnTopic: z.any().optional(),
  isClear: z.any().optional(),
  isDocumented: z.any().optional(),
  isFeatureSupported: z.any().optional(),
  isAnswerConfident: z.any().optional(),
  gapSummary: z.any().optional(),
  subject: z.any().optional(),
  category: z.any().optional(),
  languages: z.any().optional(),
  firstPartyEntities: z.any().optional(),
  thirdPartyEntities: z.any().optional(),
  emotion: z.any().optional(),
  sentiment: z.any().optional(),
  questionType: z.any().optional(),
  projectId: z.string().optional(),
  integrationId: z.string().optional(),
  properties: z.nullable(z.record(z.any())).optional(),
  userProperties: z.nullable(
    z.lazy(() => QuerySemanticThreadsResponseDataUserProperties$outboundSchema),
  ).optional(),
  firstMessageTime: z.date().transform(v => v.toISOString()).optional(),
  lastMessageTime: z.date().transform(v => v.toISOString()).optional(),
  lastUpdated: z.date().transform(v => v.toISOString()).optional(),
  hasPositiveFeedback: z.boolean().optional(),
  hasNegativeFeedback: z.boolean().optional(),
  conversationIds: z.array(z.string()).optional(),
  areAIAnnotationsVerified: z.any().optional(),
  isInitialQuestionAnswer: z.boolean().optional(),
  sum: z.number().optional(),
  count: z.number().optional(),
  avg: z.number().optional(),
  min: z.number().optional(),
  max: z.number().optional(),
  idHour: z.string().optional(),
  idDay: z.string().optional(),
  idWeek: z.string().optional(),
  idMonth: z.string().optional(),
  messageIdsHour: z.string().optional(),
  messageIdsDay: z.string().optional(),
  messageIdsWeek: z.string().optional(),
  messageIdsMonth: z.string().optional(),
  messagesCountHour: z.string().optional(),
  messagesCountDay: z.string().optional(),
  messagesCountWeek: z.string().optional(),
  messagesCountMonth: z.string().optional(),
  organizationIdHour: z.string().optional(),
  organizationIdDay: z.string().optional(),
  organizationIdWeek: z.string().optional(),
  organizationIdMonth: z.string().optional(),
  questionHour: z.string().optional(),
  questionDay: z.string().optional(),
  questionWeek: z.string().optional(),
  questionMonth: z.string().optional(),
  questionLengthHour: z.string().optional(),
  questionLengthDay: z.string().optional(),
  questionLengthWeek: z.string().optional(),
  questionLengthMonth: z.string().optional(),
  answerHour: z.string().optional(),
  answerDay: z.string().optional(),
  answerWeek: z.string().optional(),
  answerMonth: z.string().optional(),
  isOnTopicHour: z.string().optional(),
  isOnTopicDay: z.string().optional(),
  isOnTopicWeek: z.string().optional(),
  isOnTopicMonth: z.string().optional(),
  isClearHour: z.string().optional(),
  isClearDay: z.string().optional(),
  isClearWeek: z.string().optional(),
  isClearMonth: z.string().optional(),
  isDocumentedHour: z.string().optional(),
  isDocumentedDay: z.string().optional(),
  isDocumentedWeek: z.string().optional(),
  isDocumentedMonth: z.string().optional(),
  isFeatureSupportedHour: z.string().optional(),
  isFeatureSupportedDay: z.string().optional(),
  isFeatureSupportedWeek: z.string().optional(),
  isFeatureSupportedMonth: z.string().optional(),
  isAnswerConfidentHour: z.string().optional(),
  isAnswerConfidentDay: z.string().optional(),
  isAnswerConfidentWeek: z.string().optional(),
  isAnswerConfidentMonth: z.string().optional(),
  gapSummaryHour: z.string().optional(),
  gapSummaryDay: z.string().optional(),
  gapSummaryWeek: z.string().optional(),
  gapSummaryMonth: z.string().optional(),
  subjectHour: z.string().optional(),
  subjectDay: z.string().optional(),
  subjectWeek: z.string().optional(),
  subjectMonth: z.string().optional(),
  categoryHour: z.string().optional(),
  categoryDay: z.string().optional(),
  categoryWeek: z.string().optional(),
  categoryMonth: z.string().optional(),
  languagesHour: z.string().optional(),
  languagesDay: z.string().optional(),
  languagesWeek: z.string().optional(),
  languagesMonth: z.string().optional(),
  firstPartyEntitiesHour: z.string().optional(),
  firstPartyEntitiesDay: z.string().optional(),
  firstPartyEntitiesWeek: z.string().optional(),
  firstPartyEntitiesMonth: z.string().optional(),
  thirdPartyEntitiesHour: z.string().optional(),
  thirdPartyEntitiesDay: z.string().optional(),
  thirdPartyEntitiesWeek: z.string().optional(),
  thirdPartyEntitiesMonth: z.string().optional(),
  emotionHour: z.string().optional(),
  emotionDay: z.string().optional(),
  emotionWeek: z.string().optional(),
  emotionMonth: z.string().optional(),
  sentimentHour: z.string().optional(),
  sentimentDay: z.string().optional(),
  sentimentWeek: z.string().optional(),
  sentimentMonth: z.string().optional(),
  questionTypeHour: z.string().optional(),
  questionTypeDay: z.string().optional(),
  questionTypeWeek: z.string().optional(),
  questionTypeMonth: z.string().optional(),
  projectIdHour: z.string().optional(),
  projectIdDay: z.string().optional(),
  projectIdWeek: z.string().optional(),
  projectIdMonth: z.string().optional(),
  integrationIdHour: z.string().optional(),
  integrationIdDay: z.string().optional(),
  integrationIdWeek: z.string().optional(),
  integrationIdMonth: z.string().optional(),
  propertiesHour: z.string().optional(),
  propertiesDay: z.string().optional(),
  propertiesWeek: z.string().optional(),
  propertiesMonth: z.string().optional(),
  userPropertiesHour: z.string().optional(),
  userPropertiesDay: z.string().optional(),
  userPropertiesWeek: z.string().optional(),
  userPropertiesMonth: z.string().optional(),
  firstMessageTimeHour: z.string().optional(),
  firstMessageTimeDay: z.string().optional(),
  firstMessageTimeWeek: z.string().optional(),
  firstMessageTimeMonth: z.string().optional(),
  lastMessageTimeHour: z.string().optional(),
  lastMessageTimeDay: z.string().optional(),
  lastMessageTimeWeek: z.string().optional(),
  lastMessageTimeMonth: z.string().optional(),
  lastUpdatedHour: z.string().optional(),
  lastUpdatedDay: z.string().optional(),
  lastUpdatedWeek: z.string().optional(),
  lastUpdatedMonth: z.string().optional(),
  hasPositiveFeedbackHour: z.string().optional(),
  hasPositiveFeedbackDay: z.string().optional(),
  hasPositiveFeedbackWeek: z.string().optional(),
  hasPositiveFeedbackMonth: z.string().optional(),
  hasNegativeFeedbackHour: z.string().optional(),
  hasNegativeFeedbackDay: z.string().optional(),
  hasNegativeFeedbackWeek: z.string().optional(),
  hasNegativeFeedbackMonth: z.string().optional(),
  conversationIdsHour: z.string().optional(),
  conversationIdsDay: z.string().optional(),
  conversationIdsWeek: z.string().optional(),
  conversationIdsMonth: z.string().optional(),
  areAIAnnotationsVerifiedHour: z.string().optional(),
  areAIAnnotationsVerifiedDay: z.string().optional(),
  areAIAnnotationsVerifiedWeek: z.string().optional(),
  areAIAnnotationsVerifiedMonth: z.string().optional(),
  isInitialQuestionAnswerHour: z.string().optional(),
  isInitialQuestionAnswerDay: z.string().optional(),
  isInitialQuestionAnswerWeek: z.string().optional(),
  isInitialQuestionAnswerMonth: z.string().optional(),
  sumId: z.number().optional(),
  sumMessageIds: z.number().optional(),
  sumMessagesCount: z.number().optional(),
  sumOrganizationId: z.number().optional(),
  sumQuestion: z.number().optional(),
  sumQuestionLength: z.number().optional(),
  sumAnswer: z.number().optional(),
  sumIsOnTopic: z.number().optional(),
  sumIsClear: z.number().optional(),
  sumIsDocumented: z.number().optional(),
  sumIsFeatureSupported: z.number().optional(),
  sumIsAnswerConfident: z.number().optional(),
  sumGapSummary: z.number().optional(),
  sumSubject: z.number().optional(),
  sumCategory: z.number().optional(),
  sumLanguages: z.number().optional(),
  sumFirstPartyEntities: z.number().optional(),
  sumThirdPartyEntities: z.number().optional(),
  sumEmotion: z.number().optional(),
  sumSentiment: z.number().optional(),
  sumQuestionType: z.number().optional(),
  sumProjectId: z.number().optional(),
  sumIntegrationId: z.number().optional(),
  sumProperties: z.number().optional(),
  sumUserProperties: z.number().optional(),
  sumFirstMessageTime: z.number().optional(),
  sumLastMessageTime: z.number().optional(),
  sumLastUpdated: z.number().optional(),
  sumHasPositiveFeedback: z.number().optional(),
  sumHasNegativeFeedback: z.number().optional(),
  sumConversationIds: z.number().optional(),
  sumAreAIAnnotationsVerified: z.number().optional(),
  sumIsInitialQuestionAnswer: z.number().optional(),
  countId: z.number().optional(),
  countMessageIds: z.number().optional(),
  countMessagesCount: z.number().optional(),
  countOrganizationId: z.number().optional(),
  countQuestion: z.number().optional(),
  countQuestionLength: z.number().optional(),
  countAnswer: z.number().optional(),
  countIsOnTopic: z.number().optional(),
  countIsClear: z.number().optional(),
  countIsDocumented: z.number().optional(),
  countIsFeatureSupported: z.number().optional(),
  countIsAnswerConfident: z.number().optional(),
  countGapSummary: z.number().optional(),
  countSubject: z.number().optional(),
  countCategory: z.number().optional(),
  countLanguages: z.number().optional(),
  countFirstPartyEntities: z.number().optional(),
  countThirdPartyEntities: z.number().optional(),
  countEmotion: z.number().optional(),
  countSentiment: z.number().optional(),
  countQuestionType: z.number().optional(),
  countProjectId: z.number().optional(),
  countIntegrationId: z.number().optional(),
  countProperties: z.number().optional(),
  countUserProperties: z.number().optional(),
  countFirstMessageTime: z.number().optional(),
  countLastMessageTime: z.number().optional(),
  countLastUpdated: z.number().optional(),
  countHasPositiveFeedback: z.number().optional(),
  countHasNegativeFeedback: z.number().optional(),
  countConversationIds: z.number().optional(),
  countAreAIAnnotationsVerified: z.number().optional(),
  countIsInitialQuestionAnswer: z.number().optional(),
  avgId: z.number().optional(),
  avgMessageIds: z.number().optional(),
  avgMessagesCount: z.number().optional(),
  avgOrganizationId: z.number().optional(),
  avgQuestion: z.number().optional(),
  avgQuestionLength: z.number().optional(),
  avgAnswer: z.number().optional(),
  avgIsOnTopic: z.number().optional(),
  avgIsClear: z.number().optional(),
  avgIsDocumented: z.number().optional(),
  avgIsFeatureSupported: z.number().optional(),
  avgIsAnswerConfident: z.number().optional(),
  avgGapSummary: z.number().optional(),
  avgSubject: z.number().optional(),
  avgCategory: z.number().optional(),
  avgLanguages: z.number().optional(),
  avgFirstPartyEntities: z.number().optional(),
  avgThirdPartyEntities: z.number().optional(),
  avgEmotion: z.number().optional(),
  avgSentiment: z.number().optional(),
  avgQuestionType: z.number().optional(),
  avgProjectId: z.number().optional(),
  avgIntegrationId: z.number().optional(),
  avgProperties: z.number().optional(),
  avgUserProperties: z.number().optional(),
  avgFirstMessageTime: z.number().optional(),
  avgLastMessageTime: z.number().optional(),
  avgLastUpdated: z.number().optional(),
  avgHasPositiveFeedback: z.number().optional(),
  avgHasNegativeFeedback: z.number().optional(),
  avgConversationIds: z.number().optional(),
  avgAreAIAnnotationsVerified: z.number().optional(),
  avgIsInitialQuestionAnswer: z.number().optional(),
  minId: z.number().optional(),
  minMessageIds: z.number().optional(),
  minMessagesCount: z.number().optional(),
  minOrganizationId: z.number().optional(),
  minQuestion: z.number().optional(),
  minQuestionLength: z.number().optional(),
  minAnswer: z.number().optional(),
  minIsOnTopic: z.number().optional(),
  minIsClear: z.number().optional(),
  minIsDocumented: z.number().optional(),
  minIsFeatureSupported: z.number().optional(),
  minIsAnswerConfident: z.number().optional(),
  minGapSummary: z.number().optional(),
  minSubject: z.number().optional(),
  minCategory: z.number().optional(),
  minLanguages: z.number().optional(),
  minFirstPartyEntities: z.number().optional(),
  minThirdPartyEntities: z.number().optional(),
  minEmotion: z.number().optional(),
  minSentiment: z.number().optional(),
  minQuestionType: z.number().optional(),
  minProjectId: z.number().optional(),
  minIntegrationId: z.number().optional(),
  minProperties: z.number().optional(),
  minUserProperties: z.number().optional(),
  minFirstMessageTime: z.number().optional(),
  minLastMessageTime: z.number().optional(),
  minLastUpdated: z.number().optional(),
  minHasPositiveFeedback: z.number().optional(),
  minHasNegativeFeedback: z.number().optional(),
  minConversationIds: z.number().optional(),
  minAreAIAnnotationsVerified: z.number().optional(),
  minIsInitialQuestionAnswer: z.number().optional(),
  maxId: z.number().optional(),
  maxMessageIds: z.number().optional(),
  maxMessagesCount: z.number().optional(),
  maxOrganizationId: z.number().optional(),
  maxQuestion: z.number().optional(),
  maxQuestionLength: z.number().optional(),
  maxAnswer: z.number().optional(),
  maxIsOnTopic: z.number().optional(),
  maxIsClear: z.number().optional(),
  maxIsDocumented: z.number().optional(),
  maxIsFeatureSupported: z.number().optional(),
  maxIsAnswerConfident: z.number().optional(),
  maxGapSummary: z.number().optional(),
  maxSubject: z.number().optional(),
  maxCategory: z.number().optional(),
  maxLanguages: z.number().optional(),
  maxFirstPartyEntities: z.number().optional(),
  maxThirdPartyEntities: z.number().optional(),
  maxEmotion: z.number().optional(),
  maxSentiment: z.number().optional(),
  maxQuestionType: z.number().optional(),
  maxProjectId: z.number().optional(),
  maxIntegrationId: z.number().optional(),
  maxProperties: z.number().optional(),
  maxUserProperties: z.number().optional(),
  maxFirstMessageTime: z.number().optional(),
  maxLastMessageTime: z.number().optional(),
  maxLastUpdated: z.number().optional(),
  maxHasPositiveFeedback: z.number().optional(),
  maxHasNegativeFeedback: z.number().optional(),
  maxConversationIds: z.number().optional(),
  maxAreAIAnnotationsVerified: z.number().optional(),
  maxIsInitialQuestionAnswer: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    idHour: "id_hour",
    idDay: "id_day",
    idWeek: "id_week",
    idMonth: "id_month",
    messageIdsHour: "messageIds_hour",
    messageIdsDay: "messageIds_day",
    messageIdsWeek: "messageIds_week",
    messageIdsMonth: "messageIds_month",
    messagesCountHour: "messagesCount_hour",
    messagesCountDay: "messagesCount_day",
    messagesCountWeek: "messagesCount_week",
    messagesCountMonth: "messagesCount_month",
    organizationIdHour: "organizationId_hour",
    organizationIdDay: "organizationId_day",
    organizationIdWeek: "organizationId_week",
    organizationIdMonth: "organizationId_month",
    questionHour: "question_hour",
    questionDay: "question_day",
    questionWeek: "question_week",
    questionMonth: "question_month",
    questionLengthHour: "questionLength_hour",
    questionLengthDay: "questionLength_day",
    questionLengthWeek: "questionLength_week",
    questionLengthMonth: "questionLength_month",
    answerHour: "answer_hour",
    answerDay: "answer_day",
    answerWeek: "answer_week",
    answerMonth: "answer_month",
    isOnTopicHour: "isOnTopic_hour",
    isOnTopicDay: "isOnTopic_day",
    isOnTopicWeek: "isOnTopic_week",
    isOnTopicMonth: "isOnTopic_month",
    isClearHour: "isClear_hour",
    isClearDay: "isClear_day",
    isClearWeek: "isClear_week",
    isClearMonth: "isClear_month",
    isDocumentedHour: "isDocumented_hour",
    isDocumentedDay: "isDocumented_day",
    isDocumentedWeek: "isDocumented_week",
    isDocumentedMonth: "isDocumented_month",
    isFeatureSupportedHour: "isFeatureSupported_hour",
    isFeatureSupportedDay: "isFeatureSupported_day",
    isFeatureSupportedWeek: "isFeatureSupported_week",
    isFeatureSupportedMonth: "isFeatureSupported_month",
    isAnswerConfidentHour: "isAnswerConfident_hour",
    isAnswerConfidentDay: "isAnswerConfident_day",
    isAnswerConfidentWeek: "isAnswerConfident_week",
    isAnswerConfidentMonth: "isAnswerConfident_month",
    gapSummaryHour: "gapSummary_hour",
    gapSummaryDay: "gapSummary_day",
    gapSummaryWeek: "gapSummary_week",
    gapSummaryMonth: "gapSummary_month",
    subjectHour: "subject_hour",
    subjectDay: "subject_day",
    subjectWeek: "subject_week",
    subjectMonth: "subject_month",
    categoryHour: "category_hour",
    categoryDay: "category_day",
    categoryWeek: "category_week",
    categoryMonth: "category_month",
    languagesHour: "languages_hour",
    languagesDay: "languages_day",
    languagesWeek: "languages_week",
    languagesMonth: "languages_month",
    firstPartyEntitiesHour: "firstPartyEntities_hour",
    firstPartyEntitiesDay: "firstPartyEntities_day",
    firstPartyEntitiesWeek: "firstPartyEntities_week",
    firstPartyEntitiesMonth: "firstPartyEntities_month",
    thirdPartyEntitiesHour: "thirdPartyEntities_hour",
    thirdPartyEntitiesDay: "thirdPartyEntities_day",
    thirdPartyEntitiesWeek: "thirdPartyEntities_week",
    thirdPartyEntitiesMonth: "thirdPartyEntities_month",
    emotionHour: "emotion_hour",
    emotionDay: "emotion_day",
    emotionWeek: "emotion_week",
    emotionMonth: "emotion_month",
    sentimentHour: "sentiment_hour",
    sentimentDay: "sentiment_day",
    sentimentWeek: "sentiment_week",
    sentimentMonth: "sentiment_month",
    questionTypeHour: "questionType_hour",
    questionTypeDay: "questionType_day",
    questionTypeWeek: "questionType_week",
    questionTypeMonth: "questionType_month",
    projectIdHour: "projectId_hour",
    projectIdDay: "projectId_day",
    projectIdWeek: "projectId_week",
    projectIdMonth: "projectId_month",
    integrationIdHour: "integrationId_hour",
    integrationIdDay: "integrationId_day",
    integrationIdWeek: "integrationId_week",
    integrationIdMonth: "integrationId_month",
    propertiesHour: "properties_hour",
    propertiesDay: "properties_day",
    propertiesWeek: "properties_week",
    propertiesMonth: "properties_month",
    userPropertiesHour: "userProperties_hour",
    userPropertiesDay: "userProperties_day",
    userPropertiesWeek: "userProperties_week",
    userPropertiesMonth: "userProperties_month",
    firstMessageTimeHour: "firstMessageTime_hour",
    firstMessageTimeDay: "firstMessageTime_day",
    firstMessageTimeWeek: "firstMessageTime_week",
    firstMessageTimeMonth: "firstMessageTime_month",
    lastMessageTimeHour: "lastMessageTime_hour",
    lastMessageTimeDay: "lastMessageTime_day",
    lastMessageTimeWeek: "lastMessageTime_week",
    lastMessageTimeMonth: "lastMessageTime_month",
    lastUpdatedHour: "lastUpdated_hour",
    lastUpdatedDay: "lastUpdated_day",
    lastUpdatedWeek: "lastUpdated_week",
    lastUpdatedMonth: "lastUpdated_month",
    hasPositiveFeedbackHour: "hasPositiveFeedback_hour",
    hasPositiveFeedbackDay: "hasPositiveFeedback_day",
    hasPositiveFeedbackWeek: "hasPositiveFeedback_week",
    hasPositiveFeedbackMonth: "hasPositiveFeedback_month",
    hasNegativeFeedbackHour: "hasNegativeFeedback_hour",
    hasNegativeFeedbackDay: "hasNegativeFeedback_day",
    hasNegativeFeedbackWeek: "hasNegativeFeedback_week",
    hasNegativeFeedbackMonth: "hasNegativeFeedback_month",
    conversationIdsHour: "conversationIds_hour",
    conversationIdsDay: "conversationIds_day",
    conversationIdsWeek: "conversationIds_week",
    conversationIdsMonth: "conversationIds_month",
    areAIAnnotationsVerifiedHour: "areAIAnnotationsVerified_hour",
    areAIAnnotationsVerifiedDay: "areAIAnnotationsVerified_day",
    areAIAnnotationsVerifiedWeek: "areAIAnnotationsVerified_week",
    areAIAnnotationsVerifiedMonth: "areAIAnnotationsVerified_month",
    isInitialQuestionAnswerHour: "isInitialQuestionAnswer_hour",
    isInitialQuestionAnswerDay: "isInitialQuestionAnswer_day",
    isInitialQuestionAnswerWeek: "isInitialQuestionAnswer_week",
    isInitialQuestionAnswerMonth: "isInitialQuestionAnswer_month",
    sumId: "sum_id",
    sumMessageIds: "sum_messageIds",
    sumMessagesCount: "sum_messagesCount",
    sumOrganizationId: "sum_organizationId",
    sumQuestion: "sum_question",
    sumQuestionLength: "sum_questionLength",
    sumAnswer: "sum_answer",
    sumIsOnTopic: "sum_isOnTopic",
    sumIsClear: "sum_isClear",
    sumIsDocumented: "sum_isDocumented",
    sumIsFeatureSupported: "sum_isFeatureSupported",
    sumIsAnswerConfident: "sum_isAnswerConfident",
    sumGapSummary: "sum_gapSummary",
    sumSubject: "sum_subject",
    sumCategory: "sum_category",
    sumLanguages: "sum_languages",
    sumFirstPartyEntities: "sum_firstPartyEntities",
    sumThirdPartyEntities: "sum_thirdPartyEntities",
    sumEmotion: "sum_emotion",
    sumSentiment: "sum_sentiment",
    sumQuestionType: "sum_questionType",
    sumProjectId: "sum_projectId",
    sumIntegrationId: "sum_integrationId",
    sumProperties: "sum_properties",
    sumUserProperties: "sum_userProperties",
    sumFirstMessageTime: "sum_firstMessageTime",
    sumLastMessageTime: "sum_lastMessageTime",
    sumLastUpdated: "sum_lastUpdated",
    sumHasPositiveFeedback: "sum_hasPositiveFeedback",
    sumHasNegativeFeedback: "sum_hasNegativeFeedback",
    sumConversationIds: "sum_conversationIds",
    sumAreAIAnnotationsVerified: "sum_areAIAnnotationsVerified",
    sumIsInitialQuestionAnswer: "sum_isInitialQuestionAnswer",
    countId: "count_id",
    countMessageIds: "count_messageIds",
    countMessagesCount: "count_messagesCount",
    countOrganizationId: "count_organizationId",
    countQuestion: "count_question",
    countQuestionLength: "count_questionLength",
    countAnswer: "count_answer",
    countIsOnTopic: "count_isOnTopic",
    countIsClear: "count_isClear",
    countIsDocumented: "count_isDocumented",
    countIsFeatureSupported: "count_isFeatureSupported",
    countIsAnswerConfident: "count_isAnswerConfident",
    countGapSummary: "count_gapSummary",
    countSubject: "count_subject",
    countCategory: "count_category",
    countLanguages: "count_languages",
    countFirstPartyEntities: "count_firstPartyEntities",
    countThirdPartyEntities: "count_thirdPartyEntities",
    countEmotion: "count_emotion",
    countSentiment: "count_sentiment",
    countQuestionType: "count_questionType",
    countProjectId: "count_projectId",
    countIntegrationId: "count_integrationId",
    countProperties: "count_properties",
    countUserProperties: "count_userProperties",
    countFirstMessageTime: "count_firstMessageTime",
    countLastMessageTime: "count_lastMessageTime",
    countLastUpdated: "count_lastUpdated",
    countHasPositiveFeedback: "count_hasPositiveFeedback",
    countHasNegativeFeedback: "count_hasNegativeFeedback",
    countConversationIds: "count_conversationIds",
    countAreAIAnnotationsVerified: "count_areAIAnnotationsVerified",
    countIsInitialQuestionAnswer: "count_isInitialQuestionAnswer",
    avgId: "avg_id",
    avgMessageIds: "avg_messageIds",
    avgMessagesCount: "avg_messagesCount",
    avgOrganizationId: "avg_organizationId",
    avgQuestion: "avg_question",
    avgQuestionLength: "avg_questionLength",
    avgAnswer: "avg_answer",
    avgIsOnTopic: "avg_isOnTopic",
    avgIsClear: "avg_isClear",
    avgIsDocumented: "avg_isDocumented",
    avgIsFeatureSupported: "avg_isFeatureSupported",
    avgIsAnswerConfident: "avg_isAnswerConfident",
    avgGapSummary: "avg_gapSummary",
    avgSubject: "avg_subject",
    avgCategory: "avg_category",
    avgLanguages: "avg_languages",
    avgFirstPartyEntities: "avg_firstPartyEntities",
    avgThirdPartyEntities: "avg_thirdPartyEntities",
    avgEmotion: "avg_emotion",
    avgSentiment: "avg_sentiment",
    avgQuestionType: "avg_questionType",
    avgProjectId: "avg_projectId",
    avgIntegrationId: "avg_integrationId",
    avgProperties: "avg_properties",
    avgUserProperties: "avg_userProperties",
    avgFirstMessageTime: "avg_firstMessageTime",
    avgLastMessageTime: "avg_lastMessageTime",
    avgLastUpdated: "avg_lastUpdated",
    avgHasPositiveFeedback: "avg_hasPositiveFeedback",
    avgHasNegativeFeedback: "avg_hasNegativeFeedback",
    avgConversationIds: "avg_conversationIds",
    avgAreAIAnnotationsVerified: "avg_areAIAnnotationsVerified",
    avgIsInitialQuestionAnswer: "avg_isInitialQuestionAnswer",
    minId: "min_id",
    minMessageIds: "min_messageIds",
    minMessagesCount: "min_messagesCount",
    minOrganizationId: "min_organizationId",
    minQuestion: "min_question",
    minQuestionLength: "min_questionLength",
    minAnswer: "min_answer",
    minIsOnTopic: "min_isOnTopic",
    minIsClear: "min_isClear",
    minIsDocumented: "min_isDocumented",
    minIsFeatureSupported: "min_isFeatureSupported",
    minIsAnswerConfident: "min_isAnswerConfident",
    minGapSummary: "min_gapSummary",
    minSubject: "min_subject",
    minCategory: "min_category",
    minLanguages: "min_languages",
    minFirstPartyEntities: "min_firstPartyEntities",
    minThirdPartyEntities: "min_thirdPartyEntities",
    minEmotion: "min_emotion",
    minSentiment: "min_sentiment",
    minQuestionType: "min_questionType",
    minProjectId: "min_projectId",
    minIntegrationId: "min_integrationId",
    minProperties: "min_properties",
    minUserProperties: "min_userProperties",
    minFirstMessageTime: "min_firstMessageTime",
    minLastMessageTime: "min_lastMessageTime",
    minLastUpdated: "min_lastUpdated",
    minHasPositiveFeedback: "min_hasPositiveFeedback",
    minHasNegativeFeedback: "min_hasNegativeFeedback",
    minConversationIds: "min_conversationIds",
    minAreAIAnnotationsVerified: "min_areAIAnnotationsVerified",
    minIsInitialQuestionAnswer: "min_isInitialQuestionAnswer",
    maxId: "max_id",
    maxMessageIds: "max_messageIds",
    maxMessagesCount: "max_messagesCount",
    maxOrganizationId: "max_organizationId",
    maxQuestion: "max_question",
    maxQuestionLength: "max_questionLength",
    maxAnswer: "max_answer",
    maxIsOnTopic: "max_isOnTopic",
    maxIsClear: "max_isClear",
    maxIsDocumented: "max_isDocumented",
    maxIsFeatureSupported: "max_isFeatureSupported",
    maxIsAnswerConfident: "max_isAnswerConfident",
    maxGapSummary: "max_gapSummary",
    maxSubject: "max_subject",
    maxCategory: "max_category",
    maxLanguages: "max_languages",
    maxFirstPartyEntities: "max_firstPartyEntities",
    maxThirdPartyEntities: "max_thirdPartyEntities",
    maxEmotion: "max_emotion",
    maxSentiment: "max_sentiment",
    maxQuestionType: "max_questionType",
    maxProjectId: "max_projectId",
    maxIntegrationId: "max_integrationId",
    maxProperties: "max_properties",
    maxUserProperties: "max_userProperties",
    maxFirstMessageTime: "max_firstMessageTime",
    maxLastMessageTime: "max_lastMessageTime",
    maxLastUpdated: "max_lastUpdated",
    maxHasPositiveFeedback: "max_hasPositiveFeedback",
    maxHasNegativeFeedback: "max_hasNegativeFeedback",
    maxConversationIds: "max_conversationIds",
    maxAreAIAnnotationsVerified: "max_areAIAnnotationsVerified",
    maxIsInitialQuestionAnswer: "max_isInitialQuestionAnswer",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadResultItem$ {
  /** @deprecated use `SemanticThreadResultItem$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadResultItem$inboundSchema;
  /** @deprecated use `SemanticThreadResultItem$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadResultItem$outboundSchema;
  /** @deprecated use `SemanticThreadResultItem$Outbound` instead. */
  export type Outbound = SemanticThreadResultItem$Outbound;
}

export function semanticThreadResultItemToJSON(
  semanticThreadResultItem: SemanticThreadResultItem,
): string {
  return JSON.stringify(
    SemanticThreadResultItem$outboundSchema.parse(semanticThreadResultItem),
  );
}

export function semanticThreadResultItemFromJSON(
  jsonString: string,
): SafeParseResult<SemanticThreadResultItem, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SemanticThreadResultItem$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SemanticThreadResultItem' from JSON`,
  );
}

/** @internal */
export const QuerySemanticThreadsResponseData$inboundSchema: z.ZodType<
  QuerySemanticThreadsResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  result: z.array(z.lazy(() => SemanticThreadResultItem$inboundSchema)),
  total: z.number(),
  pageSize: z.number(),
  count: z.number(),
});

/** @internal */
export type QuerySemanticThreadsResponseData$Outbound = {
  result: Array<SemanticThreadResultItem$Outbound>;
  total: number;
  pageSize: number;
  count: number;
};

/** @internal */
export const QuerySemanticThreadsResponseData$outboundSchema: z.ZodType<
  QuerySemanticThreadsResponseData$Outbound,
  z.ZodTypeDef,
  QuerySemanticThreadsResponseData
> = z.object({
  result: z.array(z.lazy(() => SemanticThreadResultItem$outboundSchema)),
  total: z.number(),
  pageSize: z.number(),
  count: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QuerySemanticThreadsResponseData$ {
  /** @deprecated use `QuerySemanticThreadsResponseData$inboundSchema` instead. */
  export const inboundSchema = QuerySemanticThreadsResponseData$inboundSchema;
  /** @deprecated use `QuerySemanticThreadsResponseData$outboundSchema` instead. */
  export const outboundSchema = QuerySemanticThreadsResponseData$outboundSchema;
  /** @deprecated use `QuerySemanticThreadsResponseData$Outbound` instead. */
  export type Outbound = QuerySemanticThreadsResponseData$Outbound;
}

export function querySemanticThreadsResponseDataToJSON(
  querySemanticThreadsResponseData: QuerySemanticThreadsResponseData,
): string {
  return JSON.stringify(
    QuerySemanticThreadsResponseData$outboundSchema.parse(
      querySemanticThreadsResponseData,
    ),
  );
}

export function querySemanticThreadsResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<QuerySemanticThreadsResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => QuerySemanticThreadsResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QuerySemanticThreadsResponseData' from JSON`,
  );
}
