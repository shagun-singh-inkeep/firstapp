/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Available fields for Events
 */
export const EventsField = {
  Id: "id",
  OrganizationId: "organizationId",
  MessageId: "messageId",
  ConversationId: "conversationId",
  CreatedAt: "createdAt",
  ProjectId: "projectId",
  IntegrationId: "integrationId",
  EventType: "eventType",
  Type: "type",
  SearchQuery: "searchQuery",
  Properties: "properties",
  UserProperties: "userProperties",
} as const;
/**
 * Available fields for Events
 */
export type EventsField = ClosedEnum<typeof EventsField>;

/** @internal */
export const EventsField$inboundSchema: z.ZodNativeEnum<typeof EventsField> = z
  .nativeEnum(EventsField);

/** @internal */
export const EventsField$outboundSchema: z.ZodNativeEnum<typeof EventsField> =
  EventsField$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EventsField$ {
  /** @deprecated use `EventsField$inboundSchema` instead. */
  export const inboundSchema = EventsField$inboundSchema;
  /** @deprecated use `EventsField$outboundSchema` instead. */
  export const outboundSchema = EventsField$outboundSchema;
}
