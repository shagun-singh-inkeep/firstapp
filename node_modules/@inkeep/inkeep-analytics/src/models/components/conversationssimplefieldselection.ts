/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ConversationsSimpleFieldSelectionType = {
  Field: "field",
} as const;
export type ConversationsSimpleFieldSelectionType = ClosedEnum<
  typeof ConversationsSimpleFieldSelectionType
>;

export const ConversationsSimpleFieldSelectionField = {
  Id: "id",
  UserMessageCount: "userMessageCount",
  OrganizationId: "organizationId",
  ProjectId: "projectId",
  IntegrationId: "integrationId",
  FirstMessageTime: "firstMessageTime",
  Type: "type",
  Properties: "properties",
  UserProperties: "userProperties",
} as const;
export type ConversationsSimpleFieldSelectionField = ClosedEnum<
  typeof ConversationsSimpleFieldSelectionField
>;

export type ConversationsSimpleFieldSelection = {
  type: ConversationsSimpleFieldSelectionType;
  field: ConversationsSimpleFieldSelectionField;
  path?: Array<string> | undefined;
};

/** @internal */
export const ConversationsSimpleFieldSelectionType$inboundSchema:
  z.ZodNativeEnum<typeof ConversationsSimpleFieldSelectionType> = z.nativeEnum(
    ConversationsSimpleFieldSelectionType,
  );

/** @internal */
export const ConversationsSimpleFieldSelectionType$outboundSchema:
  z.ZodNativeEnum<typeof ConversationsSimpleFieldSelectionType> =
    ConversationsSimpleFieldSelectionType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConversationsSimpleFieldSelectionType$ {
  /** @deprecated use `ConversationsSimpleFieldSelectionType$inboundSchema` instead. */
  export const inboundSchema =
    ConversationsSimpleFieldSelectionType$inboundSchema;
  /** @deprecated use `ConversationsSimpleFieldSelectionType$outboundSchema` instead. */
  export const outboundSchema =
    ConversationsSimpleFieldSelectionType$outboundSchema;
}

/** @internal */
export const ConversationsSimpleFieldSelectionField$inboundSchema:
  z.ZodNativeEnum<typeof ConversationsSimpleFieldSelectionField> = z.nativeEnum(
    ConversationsSimpleFieldSelectionField,
  );

/** @internal */
export const ConversationsSimpleFieldSelectionField$outboundSchema:
  z.ZodNativeEnum<typeof ConversationsSimpleFieldSelectionField> =
    ConversationsSimpleFieldSelectionField$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConversationsSimpleFieldSelectionField$ {
  /** @deprecated use `ConversationsSimpleFieldSelectionField$inboundSchema` instead. */
  export const inboundSchema =
    ConversationsSimpleFieldSelectionField$inboundSchema;
  /** @deprecated use `ConversationsSimpleFieldSelectionField$outboundSchema` instead. */
  export const outboundSchema =
    ConversationsSimpleFieldSelectionField$outboundSchema;
}

/** @internal */
export const ConversationsSimpleFieldSelection$inboundSchema: z.ZodType<
  ConversationsSimpleFieldSelection,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ConversationsSimpleFieldSelectionType$inboundSchema,
  field: ConversationsSimpleFieldSelectionField$inboundSchema,
  path: z.array(z.string()).optional(),
});

/** @internal */
export type ConversationsSimpleFieldSelection$Outbound = {
  type: string;
  field: string;
  path?: Array<string> | undefined;
};

/** @internal */
export const ConversationsSimpleFieldSelection$outboundSchema: z.ZodType<
  ConversationsSimpleFieldSelection$Outbound,
  z.ZodTypeDef,
  ConversationsSimpleFieldSelection
> = z.object({
  type: ConversationsSimpleFieldSelectionType$outboundSchema,
  field: ConversationsSimpleFieldSelectionField$outboundSchema,
  path: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConversationsSimpleFieldSelection$ {
  /** @deprecated use `ConversationsSimpleFieldSelection$inboundSchema` instead. */
  export const inboundSchema = ConversationsSimpleFieldSelection$inboundSchema;
  /** @deprecated use `ConversationsSimpleFieldSelection$outboundSchema` instead. */
  export const outboundSchema =
    ConversationsSimpleFieldSelection$outboundSchema;
  /** @deprecated use `ConversationsSimpleFieldSelection$Outbound` instead. */
  export type Outbound = ConversationsSimpleFieldSelection$Outbound;
}

export function conversationsSimpleFieldSelectionToJSON(
  conversationsSimpleFieldSelection: ConversationsSimpleFieldSelection,
): string {
  return JSON.stringify(
    ConversationsSimpleFieldSelection$outboundSchema.parse(
      conversationsSimpleFieldSelection,
    ),
  );
}

export function conversationsSimpleFieldSelectionFromJSON(
  jsonString: string,
): SafeParseResult<ConversationsSimpleFieldSelection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ConversationsSimpleFieldSelection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ConversationsSimpleFieldSelection' from JSON`,
  );
}
