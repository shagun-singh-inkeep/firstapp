/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Available fields for Feedback
 */
export const FeedbackField = {
  Id: "id",
  Type: "type",
  MessageId: "messageId",
  CreatedAt: "createdAt",
  OrganizationId: "organizationId",
  Reasons: "reasons",
  Properties: "properties",
  UserProperties: "userProperties",
  ConversationId: "conversationId",
  ProjectId: "projectId",
  IntegrationId: "integrationId",
  UpdatedAt: "updatedAt",
  Status: "status",
} as const;
/**
 * Available fields for Feedback
 */
export type FeedbackField = ClosedEnum<typeof FeedbackField>;

/** @internal */
export const FeedbackField$inboundSchema: z.ZodNativeEnum<
  typeof FeedbackField
> = z.nativeEnum(FeedbackField);

/** @internal */
export const FeedbackField$outboundSchema: z.ZodNativeEnum<
  typeof FeedbackField
> = FeedbackField$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FeedbackField$ {
  /** @deprecated use `FeedbackField$inboundSchema` instead. */
  export const inboundSchema = FeedbackField$inboundSchema;
  /** @deprecated use `FeedbackField$outboundSchema` instead. */
  export const outboundSchema = FeedbackField$outboundSchema;
}
