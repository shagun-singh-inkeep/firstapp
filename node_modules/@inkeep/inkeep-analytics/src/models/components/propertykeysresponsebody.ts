/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PropertyKeysResponseBody = {
  results: Array<string>;
};

/** @internal */
export const PropertyKeysResponseBody$inboundSchema: z.ZodType<
  PropertyKeysResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  results: z.array(z.string()),
});

/** @internal */
export type PropertyKeysResponseBody$Outbound = {
  results: Array<string>;
};

/** @internal */
export const PropertyKeysResponseBody$outboundSchema: z.ZodType<
  PropertyKeysResponseBody$Outbound,
  z.ZodTypeDef,
  PropertyKeysResponseBody
> = z.object({
  results: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyKeysResponseBody$ {
  /** @deprecated use `PropertyKeysResponseBody$inboundSchema` instead. */
  export const inboundSchema = PropertyKeysResponseBody$inboundSchema;
  /** @deprecated use `PropertyKeysResponseBody$outboundSchema` instead. */
  export const outboundSchema = PropertyKeysResponseBody$outboundSchema;
  /** @deprecated use `PropertyKeysResponseBody$Outbound` instead. */
  export type Outbound = PropertyKeysResponseBody$Outbound;
}

export function propertyKeysResponseBodyToJSON(
  propertyKeysResponseBody: PropertyKeysResponseBody,
): string {
  return JSON.stringify(
    PropertyKeysResponseBody$outboundSchema.parse(propertyKeysResponseBody),
  );
}

export function propertyKeysResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<PropertyKeysResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertyKeysResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertyKeysResponseBody' from JSON`,
  );
}
