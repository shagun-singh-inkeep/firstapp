/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PropertyValuesResponseBody = {
  results: Array<string>;
};

/** @internal */
export const PropertyValuesResponseBody$inboundSchema: z.ZodType<
  PropertyValuesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  results: z.array(z.string()),
});

/** @internal */
export type PropertyValuesResponseBody$Outbound = {
  results: Array<string>;
};

/** @internal */
export const PropertyValuesResponseBody$outboundSchema: z.ZodType<
  PropertyValuesResponseBody$Outbound,
  z.ZodTypeDef,
  PropertyValuesResponseBody
> = z.object({
  results: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyValuesResponseBody$ {
  /** @deprecated use `PropertyValuesResponseBody$inboundSchema` instead. */
  export const inboundSchema = PropertyValuesResponseBody$inboundSchema;
  /** @deprecated use `PropertyValuesResponseBody$outboundSchema` instead. */
  export const outboundSchema = PropertyValuesResponseBody$outboundSchema;
  /** @deprecated use `PropertyValuesResponseBody$Outbound` instead. */
  export type Outbound = PropertyValuesResponseBody$Outbound;
}

export function propertyValuesResponseBodyToJSON(
  propertyValuesResponseBody: PropertyValuesResponseBody,
): string {
  return JSON.stringify(
    PropertyValuesResponseBody$outboundSchema.parse(propertyValuesResponseBody),
  );
}

export function propertyValuesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<PropertyValuesResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertyValuesResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertyValuesResponseBody' from JSON`,
  );
}
