/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetConversationByExternalIdRequest = {
  externalId: string;
};

/** @internal */
export const GetConversationByExternalIdRequest$inboundSchema: z.ZodType<
  GetConversationByExternalIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  externalId: z.string(),
});

/** @internal */
export type GetConversationByExternalIdRequest$Outbound = {
  externalId: string;
};

/** @internal */
export const GetConversationByExternalIdRequest$outboundSchema: z.ZodType<
  GetConversationByExternalIdRequest$Outbound,
  z.ZodTypeDef,
  GetConversationByExternalIdRequest
> = z.object({
  externalId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConversationByExternalIdRequest$ {
  /** @deprecated use `GetConversationByExternalIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetConversationByExternalIdRequest$inboundSchema;
  /** @deprecated use `GetConversationByExternalIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetConversationByExternalIdRequest$outboundSchema;
  /** @deprecated use `GetConversationByExternalIdRequest$Outbound` instead. */
  export type Outbound = GetConversationByExternalIdRequest$Outbound;
}

export function getConversationByExternalIdRequestToJSON(
  getConversationByExternalIdRequest: GetConversationByExternalIdRequest,
): string {
  return JSON.stringify(
    GetConversationByExternalIdRequest$outboundSchema.parse(
      getConversationByExternalIdRequest,
    ),
  );
}

export function getConversationByExternalIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetConversationByExternalIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetConversationByExternalIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetConversationByExternalIdRequest' from JSON`,
  );
}
